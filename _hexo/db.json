{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":1,"renderable":1}],"Cache":[{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1551693284437},{"_id":"themes/next/.gitignore","hash":"32ea93f21d8693d5d8fa4eef1c51a21ad0670047","modified":1551693284438},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1551693284437},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1551693284437},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1551693284439},{"_id":"themes/next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1551693284439},{"_id":"themes/next/.travis.yml","hash":"c42d9608c8c7fe90de7b1581a8dc3886e90c179e","modified":1551693284439},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1551693284439},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1551693284438},{"_id":"themes/next/README.en.md","hash":"32d6cdfec1447f54aae1d7f1365ce6733dfcec8f","modified":1551693284440},{"_id":"themes/next/README.md","hash":"500b5606eb6a09c979d16128f8b00f4bf9bc95ac","modified":1551693284440},{"_id":"themes/next/_config.yml","hash":"fa900e337dee21bfc8ca13838e7ff7d241ebc126","modified":1551751714480},{"_id":"themes/next/bower.json","hash":"7d7938f9da896fe710aa0e9120140e528bf058df","modified":1551693284440},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1551693284439},{"_id":"themes/next/package.json","hash":"193dad6f59a588908fac082cc46fe067dac1b84d","modified":1551693284458},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1551693284440},{"_id":"source/_posts/大文件的分片上传.md","hash":"e6f97a2438bf21677eb757812028b6d28061738b","modified":1516244377000},{"_id":"source/_posts/React条件渲染组件: rc-if-else.md","hash":"c73e55eca07836faea77453aa6dd8b80b8581f1b","modified":1551754557779},{"_id":"source/_posts/《失控》读后感.md","hash":"320bfe18b1f8052de0cf16f0aa5f8bca636498a4","modified":1551754526981},{"_id":"source/_posts/前端自动生成雪碧图.md","hash":"44af943470421eff78ba7ac40b647004377174cb","modified":1551754362546},{"_id":"source/_posts/寒门在难出贵子？.md","hash":"1dcb0be4c5ed01151a005d338ba5fff266925d88","modified":1551754623281},{"_id":"source/_posts/生命诞生的奥秘.md","hash":"88be3deb5ade4aa7f85c35239d657908762705e6","modified":1551754767363},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"b56c01cdfc6ee7ffea8a8a9fa149263f368caef6","modified":1551693284438},{"_id":"source/_posts/浅谈JS多语言框架.md","hash":"9bc8c0ef98972d77e8473cece38e38909a8a7e01","modified":1551754693642},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"3b5eafd32abb718e56ccf8d1cee0607ad8ce611d","modified":1551693284437},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"37bd0ec1d655c601946fc5f5ac2fe8ed1e529b77","modified":1551693284438},{"_id":"themes/next/.git/HEAD","hash":"75173e2dd18a6221ff84742ff53d01ac5c6e04b0","modified":1551693284427},{"_id":"themes/next/.git/config","hash":"510faaf0899b89e8a0a0a7ebeff0d4b0aa5ad38f","modified":1551693280038},{"_id":"source/_posts/测试你的前端代码二-单元测试.md","hash":"d956e5119ede441dd6cecf20b4cefa7dc4d72bb3","modified":1558500717074},{"_id":"source/_posts/测试你的前端代码一-介绍.md","hash":"b1cfee43ebe749a88f454469dfcb954ccf87754b","modified":1558321581767},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1551693278527},{"_id":"themes/next/.git/packed-refs","hash":"8e36811256ee380c2c65692f1b8f8e77c5bc33c9","modified":1551693284424},{"_id":"themes/next/.git/index","hash":"22bc898cf735f8ca2de66ed3a7c694d36a6e2bef","modified":1557895621015},{"_id":"source/_posts/设计模式心得（持续更新）.md","hash":"5272c000b33d8bf06319bb593bd4e497168a98ad","modified":1558321490240},{"_id":"themes/next/layout/page.swig","hash":"37c874cd720acf0eda8d26e063278f2b6ae8d3a6","modified":1551693284457},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1551693284457},{"_id":"themes/next/layout/index.swig","hash":"03e8a2cda03bad42ac0cb827025eb81f95d496a2","modified":1551693284457},{"_id":"themes/next/layout/_layout.swig","hash":"06b1eab2e00273e0b94bd32dc682bd92c1e0a747","modified":1551693284444},{"_id":"themes/next/scripts/merge-configs.js","hash":"13c8b3a2d9fce06c2488820d9248d190c8100e0a","modified":1551693284459},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1551693284459},{"_id":"themes/next/layout/post.swig","hash":"2d5f8d7f0a96b611e2d5a5e4d111fc17726a990f","modified":1551693284458},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1551693284458},{"_id":"themes/next/layout/archive.swig","hash":"383f64deab105724fd5512371963bd9e9aafbffd","modified":1551693284457},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1551693284458},{"_id":"themes/next/languages/fr-FR.yml","hash":"24180322c83587a153cea110e74e96eacc3355ad","modified":1551693284441},{"_id":"themes/next/languages/de.yml","hash":"306db8c865630f32c6b6260ade9d3209fbec8011","modified":1551693284441},{"_id":"themes/next/languages/ja.yml","hash":"1c3a05ab80a6f8be63268b66da6f19da7aa2c638","modified":1551693284442},{"_id":"themes/next/languages/en.yml","hash":"e7def07a709ef55684490b700a06998c67f35f39","modified":1551693284441},{"_id":"themes/next/languages/ko.yml","hash":"be150543379150f78329815af427bf152c0e9431","modified":1551693284442},{"_id":"themes/next/languages/id.yml","hash":"2835ea80dadf093fcf47edd957680973f1fb6b85","modified":1551693284441},{"_id":"themes/next/languages/pt.yml","hash":"36c8f60dacbe5d27d84d0e0d6974d7679f928da0","modified":1551693284442},{"_id":"themes/next/languages/pt-BR.yml","hash":"958e49571818a34fdf4af3232a07a024050f8f4e","modified":1551693284442},{"_id":"themes/next/languages/zh-Hans.yml","hash":"3c0c7dfd0256457ee24df9e9879226c58cb084b5","modified":1551693284443},{"_id":"themes/next/languages/zh-hk.yml","hash":"1c917997413bf566cb79e0975789f3c9c9128ccd","modified":1551693284443},{"_id":"themes/next/languages/zh-tw.yml","hash":"0b2c18aa76570364003c8d1cd429fa158ae89022","modified":1551693284443},{"_id":"themes/next/languages/ru.yml","hash":"1549a7c2fe23caa7cbedcd0aa2b77c46e57caf27","modified":1551693284442},{"_id":"themes/next/languages/default.yml","hash":"4cc6aeb1ac09a58330e494c8771773758ab354af","modified":1551693284441},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1551693284555},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1551693284555},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1551693284555},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1551693284499},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1551693278527},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1551693278529},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1551693278528},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1551693278530},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1551693278531},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1551693278530},{"_id":"themes/next/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1551693278529},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1551693278528},{"_id":"themes/next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1551693278531},{"_id":"themes/next/.git/info/exclude","hash":"bb5a85730dcf100facee799c05cc4f6affec0745","modified":1551693278526},{"_id":"themes/next/.git/logs/HEAD","hash":"16dc70187bb702d261cb3b22af78d9dc877607da","modified":1551693284428},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1551693278529},{"_id":"themes/next/layout/_partials/comments.swig","hash":"ce7094ee05878161e7568a6dfae5b56ff3fbd6e1","modified":1551693284446},{"_id":"themes/next/layout/_partials/footer.swig","hash":"7172c6053118b7c291a56a7860128a652ae66b83","modified":1551693284446},{"_id":"themes/next/layout/_partials/head.swig","hash":"1f14d3f494b2dbbcee802fd6f6d1abd5b7e2304c","modified":1551693284446},{"_id":"themes/next/layout/_partials/header.swig","hash":"a1ffbb691dfad3eaf2832a11766e58a179003b8b","modified":1551693284447},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1551693284447},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1551693284448},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1551693284449},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1551693284450},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1551693284448},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"9baf90f7c40b3b10f288e9268c3191e895890cea","modified":1551693284451},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1551693284454},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1551693284455},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1551693284455},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1551693284455},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1551693284455},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1551693284455},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1551693284443},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1551693284444},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1551693284444},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"53d4f83b2b7fb4387dfc9fe81519abd56fbce4ae","modified":1551693284444},{"_id":"themes/next/layout/_macro/reward.swig","hash":"5d5f70deb6074cb4dd0438463e14ccf89213c282","modified":1551693284445},{"_id":"themes/next/layout/_macro/post.swig","hash":"911363776867d9523a3e322cdf591d49cd166403","modified":1551693284445},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"faa7886ccf986890cd776f4e9d70cb89fe9fda5f","modified":1551693284445},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1551693284445},{"_id":"themes/next/scripts/tags/button.js","hash":"62e6dbeb53d07627a048132c79630b45d9a8f2cc","modified":1551693284460},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1551693284460},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1551693284460},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1551693284461},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1551693284461},{"_id":"themes/next/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1551693284461},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1551693284462},{"_id":"themes/next/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1551693284462},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1551693284463},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1551693284499},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1551693284500},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1551693284499},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1551693284500},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1551693284500},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1551693284501},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1551693284501},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1551693284501},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1551693284502},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1551693284502},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1551693284503},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1551693284502},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1551693284502},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1551693284503},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1551693284503},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1551693284450},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1551693284450},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1551693284489},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1551693284490},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1551693284497},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1551693284489},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1551693284498},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1551693284447},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1551693284447},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1551693284448},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1551693284449},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1551693284448},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1551693284448},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1551693284449},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1551693284449},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"63315fcf210799f894208c9f512737096df84962","modified":1551693284449},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1551693284450},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1551693284450},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1551693284450},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1551693284453},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1551693284453},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1551693284453},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1551693284454},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"ee63aa2e49507b884a2d56778479cf01c723d751","modified":1551693284454},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1551693284454},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1551693284454},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1551693284451},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1551693284451},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1551693284451},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1551693284452},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"3358d11b9a26185a2d36c96049e4340e701646e4","modified":1551693284452},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1551693284452},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1551693284453},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1551693284453},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1551693284453},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1551693284452},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1551693284452},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1551693284456},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1551693284457},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1551693284456},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1551693284457},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1551693284489},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1551693284489},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"eaedfaf06dae94ba77a8f4893e2e434bf8859bac","modified":1551693284489},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1551693284490},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"49b5210fa62d6cbc6a98f57d89d5067a06ab3561","modified":1551693284497},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1551693284497},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"cfee25d790e4f9b7d57f0dc7e2ea9c1649f08f11","modified":1551693284498},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"6117f97b4984b8e33f21c726132da64ba678e4ed","modified":1551693284504},{"_id":"themes/next/source/css/_variables/base.styl","hash":"d477196c5699c8261b08e993a77ef67054d86166","modified":1551693284498},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1551693284504},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1551693284504},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1551693284504},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1551693284505},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1551693284505},{"_id":"themes/next/source/js/src/post-details.js","hash":"0693695a9512641daff63d99da772625a058ab18","modified":1551693284506},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1551693284506},{"_id":"themes/next/source/js/src/motion.js","hash":"dc0365b2fb315a8b43d3ef19b59d3a82a366fcc1","modified":1551693284505},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1551693284507},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1551693284516},{"_id":"themes/next/source/js/src/utils.js","hash":"2917c39c75b14b6dab7e1c46ab4d87b4df9fcd5d","modified":1551693284507},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1551693284511},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1551693284521},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"7fd2f3e2773555392ef40df40cae3bedb884f17a","modified":1551693284516},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1551693284522},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1551693284522},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1551693284522},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1551693284517},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1551693284523},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1551693284524},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1551693284525},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1551693284524},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1551693284525},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1551693284517},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1551693284539},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1551693284540},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1551693284540},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1551693284541},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1551693284541},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1551693284540},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1551693284542},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1551693284541},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1551693284542},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1551693284542},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1551693284542},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1551693284540},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1551693284541},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1551693284543},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1551693284543},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1551693284544},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1551693284544},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1551693284543},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1551693284543},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1551693284538},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1551693284544},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1551693284545},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1551693284545},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1551693284554},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1551693284551},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1551693284554},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1551693284555},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1551693284545},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1551693284551},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1551693284539},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1551693284427},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1551693284456},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1551693284487},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"bc8c388553bbcf95897459a466ba35bffd5ec5f0","modified":1551693284490},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1551693284456},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1551693284490},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1551693284491},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1551693284491},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1551693284491},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"fda14bc35be2e1b332809b55b3d07155a833dbf4","modified":1551693284491},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1551693284492},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1551693284492},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1551693284493},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1551693284494},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"82bbaa6322764779a1ac2e2c8390ce901c7972e2","modified":1551693284494},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1551693284494},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1551693284493},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1551693284488},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"2915df7152ea095a6290ef69157fd67669e0e793","modified":1551693284488},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1551693284488},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1551693284488},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1551693284488},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"d026c8489f66ab6c12ad04bd37f1d5b6f2f3f0d1","modified":1551693284465},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1551693284466},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"86b6fd7f1b1be3ae98f8af6b23a6b1299c670ce9","modified":1551693284488},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1551693284465},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1551693284466},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1551693284466},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1551693284474},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1551693284495},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1551693284482},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1551693284496},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"e3e23751d4ad24e8714b425d768cf68e37de7ded","modified":1551693284496},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1551693284496},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1551693284496},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1551693284495},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"79da92119bc246fe05d1626ac98426a83ec90a94","modified":1551693284506},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1551693284509},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1551693284510},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1551693284517},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1551693284510},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1551693284518},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1551693284517},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1551693284518},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1551693284518},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1551693284520},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1551693284521},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1551693284521},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1551693284518},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1551693284523},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1551693284523},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1551693284525},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1551693284526},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1551693284526},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1551693284550},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1551693284551},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1551693284510},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1551693284537},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1551693284538},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"41b7cea74b4fc84861eb903a11048bdf389e58f5","modified":1551693284427},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1551693284492},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1551693284493},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1551693284495},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1551693284467},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1551693284468},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1551693284468},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1551693284467},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1551693284469},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"7778920dd105fa4de3a7ab206eeba30b1a7bac45","modified":1551693284472},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1551693284473},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1551693284468},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1551693284473},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1551693284473},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1551693284474},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1551693284470},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"740d37f428b8f4574a76fc95cc25e50e0565f45e","modified":1551693284471},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1551693284472},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1551693284474},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"beccb53dcd658136fb91a0c5678dea8f37d6e0b6","modified":1551693284474},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"88c7d75646b66b168213190ee4cd874609afd5e3","modified":1551693284475},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1551693284475},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1551693284475},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1551693284476},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"ed88c8b51d0517759c777e71a6bfbe2907bcd994","modified":1551693284476},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"ee554b1031ef0070a5916477939021800e3c9d27","modified":1551693284476},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1551693284475},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1551693284476},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"08a500b2984f109b751f3697ca33172d1340591a","modified":1551693284477},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1551693284477},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1551693284476},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"65a64d5662637b66e2f039a5f58217afe7a6e800","modified":1551693284479},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"5f6ea57aabfa30a437059bf8352f1ad829dbd4ff","modified":1551693284479},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1551693284479},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1551693284479},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1551693284479},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1551693284480},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"963105a531403d7aad6d9e5e23e3bfabb8ec065a","modified":1551693284476},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1551693284481},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"57d2c8a060f5e4e1a0aef9aae11a0016cf7ac5ba","modified":1551693284481},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"77c92a449ce84d558d26d052681f2e0dd77c70c9","modified":1551693284480},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1551693284482},{"_id":"themes/next/source/css/_common/components/post/post-wordcount.styl","hash":"4fda5d38c6c8d910e3bf5c74a48a8d4a3f3dc73d","modified":1551693284477},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1551693284482},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1551693284483},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1551693284481},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1551693284484},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"51eca243220cf57133a4becae9b78514bcfdc723","modified":1551693284477},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"45df0cf4c97b47e05573bcd41028ee50f3fdf432","modified":1551693284484},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1551693284485},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"b8969e1654eec89a0fd10d88b337fee9cb03cd44","modified":1551693284483},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1551693284486},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1551693284485},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1551693284486},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1551693284486},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1551693284485},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"aeff0e6e23725e8baea27c890ccbbf466024f767","modified":1551693284487},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1551693284486},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1551693284487},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1551693284487},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1551693284487},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1551693284507},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1551693284508},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1551693284508},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1551693284519},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1551693284519},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1551693284519},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1551693284519},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1551693284519},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1551693284520},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1551693284530},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1551693284553},{"_id":"themes/next/.git/objects/pack/pack-17a4bee8f29540da57cd464efc36b18a63c11091.idx","hash":"2651a8f782fa1f6b3f4e746be5325bc53abc9e00","modified":1551693284400},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1551693284528},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1551693284508},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1551693284536},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1551693284514},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1551693284533},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1551693284549},{"_id":"themes/next/.git/objects/pack/pack-17a4bee8f29540da57cd464efc36b18a63c11091.pack","hash":"31689539b2c20f31c6504fe7cc989966fb2b4e03","modified":1551693284384},{"_id":"public/categories/Javascript/index.html","hash":"53ea16ee0cce386273735f58ec0834dafbac79ad","modified":1558507231915},{"_id":"public/categories/读书/index.html","hash":"a73bd8dbdfc79f5993dce5c6eea0dc902ea73a33","modified":1558507231915},{"_id":"public/categories/前端工程化/index.html","hash":"31d09ed0a7f01fb1e8d860d3edee1326ac83febe","modified":1558507231916},{"_id":"public/categories/随感/index.html","hash":"9a7f08c32a707eae0f2b234562e37c3e0b461258","modified":1558507231917},{"_id":"public/archives/2017/index.html","hash":"1aae38041fcf28bbc46508a23c06c54dd6421183","modified":1558507231917},{"_id":"public/archives/2017/08/index.html","hash":"1742f3fadab5807a6d69e5341267e74aa19d479e","modified":1558507231917},{"_id":"public/archives/2017/10/index.html","hash":"2d0bedb8e2425326a895f6ceb8d36078823b6ed3","modified":1558507231917},{"_id":"public/archives/2017/11/index.html","hash":"3a290f5206cf42e08c51fc572db568b528b20d1c","modified":1558507231917},{"_id":"public/archives/2018/index.html","hash":"67520e46ae0f9c2d1064266e1ce15c0f12f88fbd","modified":1558507231917},{"_id":"public/archives/2018/12/index.html","hash":"1f81b7878c730515d6f99e4d4906a6a5ea0acf37","modified":1558507231917},{"_id":"public/archives/2019/index.html","hash":"97d09cecea932aeddaf06ab1035c85261d49b1c0","modified":1558507231917},{"_id":"public/archives/2019/02/index.html","hash":"88c4e9a2ba79da1de1be63948c7cef0e009c21e7","modified":1558507231917},{"_id":"public/archives/2019/03/index.html","hash":"6e699250cffd9745637fb6a417eff675b455ebab","modified":1558507231917},{"_id":"public/archives/2019/05/index.html","hash":"40a7f14018bdde73a2fbcf5ba47e633306e0ca87","modified":1558507231917},{"_id":"public/tags/WebUploader/index.html","hash":"1f1bcf65629dfac22c5c1364137dcafa280a4bc0","modified":1558507231918},{"_id":"public/tags/分片上传/index.html","hash":"fa3676e95a203efd3df628717764d2289f316712","modified":1558507231918},{"_id":"public/tags/react/index.html","hash":"b089a3ec0fb32cbba081c64ec5b5c6b863614ee9","modified":1558507231918},{"_id":"public/tags/conditional-rendering/index.html","hash":"11aac62b21988624510cc161874e4fc6c23e968e","modified":1558507231918},{"_id":"public/tags/rc-if-else/index.html","hash":"4a0ca73a75a63bacd822c16914adecd0f4b58107","modified":1558507231918},{"_id":"public/tags/show-hide-element/index.html","hash":"8b1c100e9a9da91be1b7a0efb7939581b6b2ffa5","modified":1558507231918},{"_id":"public/tags/react-component/index.html","hash":"e306bc87ae66c97df85f54a778b00e8b9c989687","modified":1558507231918},{"_id":"public/tags/凯文凯利/index.html","hash":"c7e59b09dc689e7499a530852890c6de5c60892a","modified":1558507231918},{"_id":"public/tags/失控/index.html","hash":"e3194c2306f499e0d960e9d59eda4e8181b96456","modified":1558507231918},{"_id":"public/tags/gulp/index.html","hash":"edce72609681c57cd3fa10ff093073ff62ee03bd","modified":1558507231918},{"_id":"public/tags/雪碧图/index.html","hash":"5c8850809d1d38841551baa269ddbce38bf1e20d","modified":1558507231918},{"_id":"public/tags/spritesmith/index.html","hash":"c57cc0eddeab603552d6fdcaf3cc8c91b01213b5","modified":1558507231918},{"_id":"public/tags/感情/index.html","hash":"253ce45ca54e93b7dee3f76ec3b196706d208684","modified":1558507231918},{"_id":"public/tags/价值观/index.html","hash":"524ce06db20f7f8664c600ee0ef8e67c13a01bf0","modified":1558507231918},{"_id":"public/tags/思想/index.html","hash":"d841c1f542728e57a13f8bbc37f643396c8cd428","modified":1558507231918},{"_id":"public/tags/奇思妙想/index.html","hash":"0a16e512c782e24c525d04e71e40e4a31a297ba7","modified":1558507231918},{"_id":"public/tags/瞎想/index.html","hash":"7392f361afcce415630e254d4a2a8987c230a147","modified":1558507231919},{"_id":"public/tags/js框架/index.html","hash":"0417778a48800fce2cdb323101731b5d5fc644f2","modified":1558507231919},{"_id":"public/tags/locales/index.html","hash":"ca8ddde0156f7813dafd4396857b82d0bda75a3b","modified":1558507231919},{"_id":"public/tags/国际化/index.html","hash":"553aac7c0f5435a4e13bae610aaebe3bfb79a020","modified":1558507231919},{"_id":"public/tags/多语言/index.html","hash":"c1363d4b9e6482762c7908497070cd5ed0bc9a1e","modified":1558507231919},{"_id":"public/tags/Javascript/index.html","hash":"38fc1265f8ea1a846b8347f805c5712b49680d37","modified":1558507231919},{"_id":"public/tags/Testing/index.html","hash":"94726360ca498138a060357a84ccef5356db67f3","modified":1558507231919},{"_id":"public/2019/03/04/浅谈JS多语言框架/index.html","hash":"7d260bf64557297144c16b6ec49a9f04c0ff0842","modified":1558507231919},{"_id":"public/2019/02/28/React条件渲染组件: rc-if-else/index.html","hash":"bc2c24e832d3edbd3fd36177ad1615f385c3c422","modified":1558507231919},{"_id":"public/2018/12/06/《失控》读后感/index.html","hash":"e629e627453ebda15fb71baf5eeaec6dd5937f42","modified":1558507231919},{"_id":"public/2017/11/09/生命诞生的奥秘/index.html","hash":"4d7ee92f4367e098de70f9ffe15b7c4ea2eed3df","modified":1558507231919},{"_id":"public/2017/10/11/前端自动生成雪碧图/index.html","hash":"33cf8bbca0aedeb816b9d2259bc6bb657883d10f","modified":1558507231919},{"_id":"public/2017/10/11/大文件的分片上传/index.html","hash":"13687d7b17ca40ebcf50835b6e6028d16876826b","modified":1558507231919},{"_id":"public/2017/08/27/寒门在难出贵子？/index.html","hash":"03afa9a2e16c1ce578c4f1f29b3cd767ec9c582a","modified":1558507231919},{"_id":"public/archives/index.html","hash":"aaf037e32768fc6d47b2096d9d8161ac7ced0049","modified":1558507231919},{"_id":"public/index.html","hash":"afe64cb44fff34cb1bc6576c48b4551eb3783447","modified":1558507231919},{"_id":"public/2019/05/17/设计模式心得（持续更新）/index.html","hash":"ce2a0301717db7144b49dd7f0b03bc348729b4d5","modified":1558507231926},{"_id":"public/tags/设计模式/index.html","hash":"5d004ca54fe18a4e040dc272d58ec8c8543754d6","modified":1558507231926},{"_id":"public/2019/05/20/测试你的前端代码二-单元测试/index.html","hash":"106c7bf1aada278d4b865bc5e4fc438845e5456c","modified":1558507231926},{"_id":"public/2019/05/14/测试你的前端代码一-介绍/index.html","hash":"7088adb9c6c400a4f33d52b28b9164b9f29ab55c","modified":1558507231926},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1558507231932},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1558507231932},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1558507231932},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1558507231932},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1558507231932},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1558507231932},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1558507231932},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1558507231932},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1558507231933},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1558507231933},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1558507231933},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1558507231933},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1558507231933},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1558507231933},{"_id":"public/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1558507231933},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1558507231933},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1558507231933},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1558507231933},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1558507231933},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1558507231933},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1558507231933},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1558507231933},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1558507231933},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1558507231933},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1558507231933},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1558507231933},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1558507231934},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1558507231934},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1558507232771},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1558507232779},{"_id":"public/js/src/bootstrap.js","hash":"6117f97b4984b8e33f21c726132da64ba678e4ed","modified":1558507232794},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1558507232795},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1558507232796},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1558507232796},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1558507232796},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1558507232796},{"_id":"public/js/src/post-details.js","hash":"0693695a9512641daff63d99da772625a058ab18","modified":1558507232796},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1558507232796},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1558507232796},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1558507232796},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"7fd2f3e2773555392ef40df40cae3bedb884f17a","modified":1558507232796},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1558507232796},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1558507232796},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1558507232797},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1558507232797},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1558507232797},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1558507232797},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1558507232797},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1558507232797},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1558507232797},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1558507232797},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1558507232797},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1558507232797},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1558507232797},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1558507232797},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1558507232797},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1558507232797},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1558507232797},{"_id":"public/js/src/schemes/pisces.js","hash":"79da92119bc246fe05d1626ac98426a83ec90a94","modified":1558507232797},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1558507232797},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1558507232797},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1558507232798},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1558507232798},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1558507232798},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1558507232798},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1558507232798},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1558507232798},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1558507232798},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1558507232798},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1558507232798},{"_id":"public/css/main.css","hash":"a5f43a23f8bde988b088effe70ff16653d618c95","modified":1558507232798},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1558507232798},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1558507232798},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1558507232798},{"_id":"public/js/src/motion.js","hash":"dc0365b2fb315a8b43d3ef19b59d3a82a366fcc1","modified":1558507232806},{"_id":"public/js/src/utils.js","hash":"2917c39c75b14b6dab7e1c46ab4d87b4df9fcd5d","modified":1558507232806},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1558507232808},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1558507232809},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1558507232810},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1558507232811},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1558507232811},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1558507232811},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1558507232817},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1558507232822},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1558507232822},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1558507232837},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1558507232837},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1558507232838},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1558507232838},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1558507232838},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1558507232838},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1558507232838},{"_id":"public/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1558507232844},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1558507232844},{"_id":"public/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1558507232849},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1558507232850},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1558507232879},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1558507232881},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1558507232884},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1558507232898},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1558507232903}],"Category":[{"name":"Javascript","_id":"cjvyuyqe30002y9pjlb9e6kvd"},{"name":"读书","_id":"cjvyuyqeo000by9pj7kbb35uz"},{"name":"前端工程化","_id":"cjvyuyqeq000hy9pjoee6ceg5"},{"name":"随感","_id":"cjvyuyqer000ky9pjop0ydj8u"}],"Data":[],"Page":[],"Post":[{"title":"大文件的分片上传","date":"2017-10-11T03:30:35.000Z","_content":"\n在开发过程中遇到需要上传大文件的需求，但是大文件整个上传会导致服务器内存爆炸。\n\n#### 分片上传的思路\n利用[`blob.slice()`](https://developer.mozilla.org/en-US/docs/Web/API/Blob/slice)方法，根据指定的分片大小对文件进行切割，然后对切割得到的分片分开上传，上传可以指定并发数。服务器接受到所有分片之后，在把所有分片按照正确的顺序合并成完整的文件。\n\n#### 实现\n由于实现过程中，后端开发懒得去判断分片是否全部上传完毕，需要前端在分片全部上传完之后在发送一个请求通知后台合并分片。并且webupload对image 类型的文件不分片。最后封装webuploader实现如下：\n\n```js\nfunction upload(file, options) {\n    // default options\n    options = $.extend({\n        folder: '',\n        success: $.noop,\n        error: $.noop,\n        progress: $.noop\n    }, options);\n\n    var errorHandler = options.error;\n    var successHandler = options.success;\n    var progressHanlder = options.progress;\n    var fileMd5 = uuidv4();\n    var runtimeForRuid = new WebUploader.Runtime.Runtime();\n    var wuFile = new WebUploader.File(new WebUploader.Lib.File(WebUploader.guid('rt_'), file));\n    var chunkSize = 1 * 1024 * 1024;\n    var chunked = file.size > chunkSize;\n    // \n    var events = $.extend({\n        uploadBeforeSend: function(_, data) {\n            if (chunked) {\n                data.uuid = fileMd5;\n            }\n        },\n        uploadProgress: progressHanlder\n    }, file.type.indexOf('image') >= 0 || !chunked ? {\n        uploadSuccess: function(_, data) {\n            successHandler(data);\n        },\n        uploadError: function() {\n            errorHandler('上传失败');\n        }\n    } : {\n        uploadFinished: function() {\n            var file = uploader.getFiles()[0];\n            if (!file || file.type.indexOf('image') >= 0) {\n                return;\n            }\n\n            $.post('/public/stream-file/', {\n                csrf_token: bms.csrf_token,\n                chunk: -1,\n                uuid: fileMd5,\n                upload_folder: options.folder,\n                name: file.name\n            }, null, 'json').done(successHandler).fail(function() {\n                errorHandler('上传失败');\n            });\n        }\n    });\n    \n    var uploader = WebUploader.create({\n        fileNumLimit: 1,\n        chunked: chunked,\n        chunkSize: chunkSize,\n        prepareNextFile: true,\n        server: '/public/stream-file/',\n        fileVal: 'attachement',\n        formData: {\n            csrf_token: bms.token,\n            upload_folder: options.folder\n        }\n    });\n\n    $.each(events, function(name, handler) {\n        uploader.on(name, handler);\n    });\n\n    // 开始上传\n    uploader.addFiles(wuFile);\n    uploader.upload();\n    return uploader;\n}\n```","source":"_posts/大文件的分片上传.md","raw":"---\ntitle: 大文件的分片上传\ndate: 2017-10-11 11:30:35\ncategories: Javascript\ntags: \n    - WebUploader\n    - 分片上传\n---\n\n在开发过程中遇到需要上传大文件的需求，但是大文件整个上传会导致服务器内存爆炸。\n\n#### 分片上传的思路\n利用[`blob.slice()`](https://developer.mozilla.org/en-US/docs/Web/API/Blob/slice)方法，根据指定的分片大小对文件进行切割，然后对切割得到的分片分开上传，上传可以指定并发数。服务器接受到所有分片之后，在把所有分片按照正确的顺序合并成完整的文件。\n\n#### 实现\n由于实现过程中，后端开发懒得去判断分片是否全部上传完毕，需要前端在分片全部上传完之后在发送一个请求通知后台合并分片。并且webupload对image 类型的文件不分片。最后封装webuploader实现如下：\n\n```js\nfunction upload(file, options) {\n    // default options\n    options = $.extend({\n        folder: '',\n        success: $.noop,\n        error: $.noop,\n        progress: $.noop\n    }, options);\n\n    var errorHandler = options.error;\n    var successHandler = options.success;\n    var progressHanlder = options.progress;\n    var fileMd5 = uuidv4();\n    var runtimeForRuid = new WebUploader.Runtime.Runtime();\n    var wuFile = new WebUploader.File(new WebUploader.Lib.File(WebUploader.guid('rt_'), file));\n    var chunkSize = 1 * 1024 * 1024;\n    var chunked = file.size > chunkSize;\n    // \n    var events = $.extend({\n        uploadBeforeSend: function(_, data) {\n            if (chunked) {\n                data.uuid = fileMd5;\n            }\n        },\n        uploadProgress: progressHanlder\n    }, file.type.indexOf('image') >= 0 || !chunked ? {\n        uploadSuccess: function(_, data) {\n            successHandler(data);\n        },\n        uploadError: function() {\n            errorHandler('上传失败');\n        }\n    } : {\n        uploadFinished: function() {\n            var file = uploader.getFiles()[0];\n            if (!file || file.type.indexOf('image') >= 0) {\n                return;\n            }\n\n            $.post('/public/stream-file/', {\n                csrf_token: bms.csrf_token,\n                chunk: -1,\n                uuid: fileMd5,\n                upload_folder: options.folder,\n                name: file.name\n            }, null, 'json').done(successHandler).fail(function() {\n                errorHandler('上传失败');\n            });\n        }\n    });\n    \n    var uploader = WebUploader.create({\n        fileNumLimit: 1,\n        chunked: chunked,\n        chunkSize: chunkSize,\n        prepareNextFile: true,\n        server: '/public/stream-file/',\n        fileVal: 'attachement',\n        formData: {\n            csrf_token: bms.token,\n            upload_folder: options.folder\n        }\n    });\n\n    $.each(events, function(name, handler) {\n        uploader.on(name, handler);\n    });\n\n    // 开始上传\n    uploader.addFiles(wuFile);\n    uploader.upload();\n    return uploader;\n}\n```","slug":"大文件的分片上传","published":1,"updated":"2018-01-18T02:59:37.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvyuyqds0000y9pjhu5371r5","content":"<p>在开发过程中遇到需要上传大文件的需求，但是大文件整个上传会导致服务器内存爆炸。</p>\n<h4 id=\"分片上传的思路\"><a href=\"#分片上传的思路\" class=\"headerlink\" title=\"分片上传的思路\"></a>分片上传的思路</h4><p>利用<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Blob/slice\" target=\"_blank\" rel=\"noopener\"><code>blob.slice()</code></a>方法，根据指定的分片大小对文件进行切割，然后对切割得到的分片分开上传，上传可以指定并发数。服务器接受到所有分片之后，在把所有分片按照正确的顺序合并成完整的文件。</p>\n<h4 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h4><p>由于实现过程中，后端开发懒得去判断分片是否全部上传完毕，需要前端在分片全部上传完之后在发送一个请求通知后台合并分片。并且webupload对image 类型的文件不分片。最后封装webuploader实现如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">upload</span>(<span class=\"params\">file, options</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// default options</span></span><br><span class=\"line\">    options = $.extend(&#123;</span><br><span class=\"line\">        folder: <span class=\"string\">''</span>,</span><br><span class=\"line\">        success: $.noop,</span><br><span class=\"line\">        error: $.noop,</span><br><span class=\"line\">        progress: $.noop</span><br><span class=\"line\">    &#125;, options);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> errorHandler = options.error;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> successHandler = options.success;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> progressHanlder = options.progress;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> fileMd5 = uuidv4();</span><br><span class=\"line\">    <span class=\"keyword\">var</span> runtimeForRuid = <span class=\"keyword\">new</span> WebUploader.Runtime.Runtime();</span><br><span class=\"line\">    <span class=\"keyword\">var</span> wuFile = <span class=\"keyword\">new</span> WebUploader.File(<span class=\"keyword\">new</span> WebUploader.Lib.File(WebUploader.guid(<span class=\"string\">'rt_'</span>), file));</span><br><span class=\"line\">    <span class=\"keyword\">var</span> chunkSize = <span class=\"number\">1</span> * <span class=\"number\">1024</span> * <span class=\"number\">1024</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> chunked = file.size &gt; chunkSize;</span><br><span class=\"line\">    <span class=\"comment\">// </span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> events = $.extend(&#123;</span><br><span class=\"line\">        uploadBeforeSend: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">_, data</span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (chunked) &#123;</span><br><span class=\"line\">                data.uuid = fileMd5;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        uploadProgress: progressHanlder</span><br><span class=\"line\">    &#125;, file.type.indexOf(<span class=\"string\">'image'</span>) &gt;= <span class=\"number\">0</span> || !chunked ? &#123;</span><br><span class=\"line\">        uploadSuccess: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">_, data</span>) </span>&#123;</span><br><span class=\"line\">            successHandler(data);</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        uploadError: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            errorHandler(<span class=\"string\">'上传失败'</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; : &#123;</span><br><span class=\"line\">        uploadFinished: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> file = uploader.getFiles()[<span class=\"number\">0</span>];</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!file || file.type.indexOf(<span class=\"string\">'image'</span>) &gt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            $.post(<span class=\"string\">'/public/stream-file/'</span>, &#123;</span><br><span class=\"line\">                csrf_token: bms.csrf_token,</span><br><span class=\"line\">                chunk: <span class=\"number\">-1</span>,</span><br><span class=\"line\">                uuid: fileMd5,</span><br><span class=\"line\">                upload_folder: options.folder,</span><br><span class=\"line\">                name: file.name</span><br><span class=\"line\">            &#125;, <span class=\"literal\">null</span>, <span class=\"string\">'json'</span>).done(successHandler).fail(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">                errorHandler(<span class=\"string\">'上传失败'</span>);</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">var</span> uploader = WebUploader.create(&#123;</span><br><span class=\"line\">        fileNumLimit: <span class=\"number\">1</span>,</span><br><span class=\"line\">        chunked: chunked,</span><br><span class=\"line\">        chunkSize: chunkSize,</span><br><span class=\"line\">        prepareNextFile: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        server: <span class=\"string\">'/public/stream-file/'</span>,</span><br><span class=\"line\">        fileVal: <span class=\"string\">'attachement'</span>,</span><br><span class=\"line\">        formData: &#123;</span><br><span class=\"line\">            csrf_token: bms.token,</span><br><span class=\"line\">            upload_folder: options.folder</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    $.each(events, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">name, handler</span>) </span>&#123;</span><br><span class=\"line\">        uploader.on(name, handler);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 开始上传</span></span><br><span class=\"line\">    uploader.addFiles(wuFile);</span><br><span class=\"line\">    uploader.upload();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> uploader;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>在开发过程中遇到需要上传大文件的需求，但是大文件整个上传会导致服务器内存爆炸。</p>\n<h4 id=\"分片上传的思路\"><a href=\"#分片上传的思路\" class=\"headerlink\" title=\"分片上传的思路\"></a>分片上传的思路</h4><p>利用<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Blob/slice\" target=\"_blank\" rel=\"noopener\"><code>blob.slice()</code></a>方法，根据指定的分片大小对文件进行切割，然后对切割得到的分片分开上传，上传可以指定并发数。服务器接受到所有分片之后，在把所有分片按照正确的顺序合并成完整的文件。</p>\n<h4 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h4><p>由于实现过程中，后端开发懒得去判断分片是否全部上传完毕，需要前端在分片全部上传完之后在发送一个请求通知后台合并分片。并且webupload对image 类型的文件不分片。最后封装webuploader实现如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">upload</span>(<span class=\"params\">file, options</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// default options</span></span><br><span class=\"line\">    options = $.extend(&#123;</span><br><span class=\"line\">        folder: <span class=\"string\">''</span>,</span><br><span class=\"line\">        success: $.noop,</span><br><span class=\"line\">        error: $.noop,</span><br><span class=\"line\">        progress: $.noop</span><br><span class=\"line\">    &#125;, options);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> errorHandler = options.error;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> successHandler = options.success;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> progressHanlder = options.progress;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> fileMd5 = uuidv4();</span><br><span class=\"line\">    <span class=\"keyword\">var</span> runtimeForRuid = <span class=\"keyword\">new</span> WebUploader.Runtime.Runtime();</span><br><span class=\"line\">    <span class=\"keyword\">var</span> wuFile = <span class=\"keyword\">new</span> WebUploader.File(<span class=\"keyword\">new</span> WebUploader.Lib.File(WebUploader.guid(<span class=\"string\">'rt_'</span>), file));</span><br><span class=\"line\">    <span class=\"keyword\">var</span> chunkSize = <span class=\"number\">1</span> * <span class=\"number\">1024</span> * <span class=\"number\">1024</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> chunked = file.size &gt; chunkSize;</span><br><span class=\"line\">    <span class=\"comment\">// </span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> events = $.extend(&#123;</span><br><span class=\"line\">        uploadBeforeSend: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">_, data</span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (chunked) &#123;</span><br><span class=\"line\">                data.uuid = fileMd5;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        uploadProgress: progressHanlder</span><br><span class=\"line\">    &#125;, file.type.indexOf(<span class=\"string\">'image'</span>) &gt;= <span class=\"number\">0</span> || !chunked ? &#123;</span><br><span class=\"line\">        uploadSuccess: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">_, data</span>) </span>&#123;</span><br><span class=\"line\">            successHandler(data);</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        uploadError: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            errorHandler(<span class=\"string\">'上传失败'</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; : &#123;</span><br><span class=\"line\">        uploadFinished: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> file = uploader.getFiles()[<span class=\"number\">0</span>];</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!file || file.type.indexOf(<span class=\"string\">'image'</span>) &gt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            $.post(<span class=\"string\">'/public/stream-file/'</span>, &#123;</span><br><span class=\"line\">                csrf_token: bms.csrf_token,</span><br><span class=\"line\">                chunk: <span class=\"number\">-1</span>,</span><br><span class=\"line\">                uuid: fileMd5,</span><br><span class=\"line\">                upload_folder: options.folder,</span><br><span class=\"line\">                name: file.name</span><br><span class=\"line\">            &#125;, <span class=\"literal\">null</span>, <span class=\"string\">'json'</span>).done(successHandler).fail(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">                errorHandler(<span class=\"string\">'上传失败'</span>);</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">var</span> uploader = WebUploader.create(&#123;</span><br><span class=\"line\">        fileNumLimit: <span class=\"number\">1</span>,</span><br><span class=\"line\">        chunked: chunked,</span><br><span class=\"line\">        chunkSize: chunkSize,</span><br><span class=\"line\">        prepareNextFile: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        server: <span class=\"string\">'/public/stream-file/'</span>,</span><br><span class=\"line\">        fileVal: <span class=\"string\">'attachement'</span>,</span><br><span class=\"line\">        formData: &#123;</span><br><span class=\"line\">            csrf_token: bms.token,</span><br><span class=\"line\">            upload_folder: options.folder</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    $.each(events, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">name, handler</span>) </span>&#123;</span><br><span class=\"line\">        uploader.on(name, handler);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 开始上传</span></span><br><span class=\"line\">    uploader.addFiles(wuFile);</span><br><span class=\"line\">    uploader.upload();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> uploader;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"React条件渲染组件:rc-if-else","date":"2019-02-28T08:58:22.000Z","_content":"\n## 前言\n在做后台系统的时候，需要进行大量的内容权限控制，涉及到大量内容的显示和隐藏，写了不少的if-else，最后封装了一个条件渲染组件: rc-if-else，使用更简单、灵活，代码更加简洁\n\n## 普通写法\n这里只是写个简单的demo以做比较，当然还可以使用for或者其他的封装方式来优化代码，这里暂不讨论\n```js\nimport React from 'react';\n...\n\nrender() {\n    ...\n    return (\n        <Menu>\n            {\n                permission1 && permission2 && permission3  && permission4\n                    ? (\n                        <SubMenu>\n                            { permission1\n                                ? (\n                                    <Menu.Item key=\"home\">\n                                        <Icon name='menu1'></Icon>\n                                        <span>Menu1</span>\n                                    </Menu.Item>\n                                ) : null\n                            };\n                            { permission2\n                                ? (\n                                    <Menu.Item key=\"home\">\n                                        <Icon name='menu2'></Icon>\n                                        <span>Menu2</span>\n                                    </Menu.Item>\n                                ) : null\n                            };\n                            { permission3\n                                ? (\n                                    <Menu.Item key=\"home\">\n                                        <Icon name='menu3'></Icon>\n                                        <span>Menu3</span>\n                                    </Menu.Item>\n                                ) : null\n                            };\n                            { permission4\n                                ? (\n                                    <Menu.Item key=\"home\">\n                                        <Icon name='menu4'></Icon>\n                                        <span>Menu4</span>\n                                    </Menu.Item>\n                                ) : null\n                            };\n                        </SubMenu>\n                    ) : null\n            }\n            ...\n        </Menu>\n    );\n}\n\n```\n\n## 使用rc-if-else的写法\n使用[rc-if-else](https://npmjs.org/package/rc-if-else)之后，上面的代码可以这样写\n```js\nimport React from 'react';\nimport { If } from 'rc-if-else';\n...\n\nrender() {\n    ...\n    return (\n        <Menu>\n            <If condition={permission1 && permission2 && permission3  && permission4}>\n                <SubMenu key=\"React Demo\" title={<span><StyledIcon icons={[iconResource, iconResourceHover]} />React Demo</span>}>\n                    <If condition={permission1}>\n                        <Menu.Item key=\"home\">\n                            <Icon name='menu1'></Icon>\n                            <span>Menu1</span>\n                        </Menu.Item>\n                    </If>\n                    <If condition={permission2}>\n                        <Menu.Item key=\"home\">\n                            <Icon name='menu2'></Icon>\n                            <span>Menu2</span>\n                        </Menu.Item>\n                    </If>\n                    <If condition={permission3}>\n                        <Menu.Item key=\"home\">\n                            <Icon name='menu3'></Icon>\n                            <span>Menu3</span>\n                        </Menu.Item>\n                    </If>\n                    <If condition={permission4}>\n                        <Menu.Item key=\"home\">\n                            <Icon name='menu4'></Icon>\n                            <span>Menu4</span>\n                        </Menu.Item>\n                    </If>\n                </SubMenu>\n            </If>\n            ...\n        </Menu>\n    );\n}\n```\n\n## 安装\n欢迎大家安装使用\n```Bash\nnpm install --save rc-if-else\n```\n\n[![](https://nodei.co/npm/rc-if-else.png)](https://npmjs.org/package/rc-if-else)\n\n## 结语\n更多使用方法请看：[https://npmjs.org/package/rc-if-else](https://npmjs.org/package/rc-if-else)\n如果有更好的实现方式或疑问，欢迎评论留言\n","source":"_posts/React条件渲染组件: rc-if-else.md","raw":"---\ntitle: React条件渲染组件:rc-if-else\ncategories: Javascript\ndate: 2019-02-28 16:58:22\ntags:\n    - react\n    - conditional-rendering\n    - rc-if-else\n    - show-hide-element\n    - react-component\n---\n\n## 前言\n在做后台系统的时候，需要进行大量的内容权限控制，涉及到大量内容的显示和隐藏，写了不少的if-else，最后封装了一个条件渲染组件: rc-if-else，使用更简单、灵活，代码更加简洁\n\n## 普通写法\n这里只是写个简单的demo以做比较，当然还可以使用for或者其他的封装方式来优化代码，这里暂不讨论\n```js\nimport React from 'react';\n...\n\nrender() {\n    ...\n    return (\n        <Menu>\n            {\n                permission1 && permission2 && permission3  && permission4\n                    ? (\n                        <SubMenu>\n                            { permission1\n                                ? (\n                                    <Menu.Item key=\"home\">\n                                        <Icon name='menu1'></Icon>\n                                        <span>Menu1</span>\n                                    </Menu.Item>\n                                ) : null\n                            };\n                            { permission2\n                                ? (\n                                    <Menu.Item key=\"home\">\n                                        <Icon name='menu2'></Icon>\n                                        <span>Menu2</span>\n                                    </Menu.Item>\n                                ) : null\n                            };\n                            { permission3\n                                ? (\n                                    <Menu.Item key=\"home\">\n                                        <Icon name='menu3'></Icon>\n                                        <span>Menu3</span>\n                                    </Menu.Item>\n                                ) : null\n                            };\n                            { permission4\n                                ? (\n                                    <Menu.Item key=\"home\">\n                                        <Icon name='menu4'></Icon>\n                                        <span>Menu4</span>\n                                    </Menu.Item>\n                                ) : null\n                            };\n                        </SubMenu>\n                    ) : null\n            }\n            ...\n        </Menu>\n    );\n}\n\n```\n\n## 使用rc-if-else的写法\n使用[rc-if-else](https://npmjs.org/package/rc-if-else)之后，上面的代码可以这样写\n```js\nimport React from 'react';\nimport { If } from 'rc-if-else';\n...\n\nrender() {\n    ...\n    return (\n        <Menu>\n            <If condition={permission1 && permission2 && permission3  && permission4}>\n                <SubMenu key=\"React Demo\" title={<span><StyledIcon icons={[iconResource, iconResourceHover]} />React Demo</span>}>\n                    <If condition={permission1}>\n                        <Menu.Item key=\"home\">\n                            <Icon name='menu1'></Icon>\n                            <span>Menu1</span>\n                        </Menu.Item>\n                    </If>\n                    <If condition={permission2}>\n                        <Menu.Item key=\"home\">\n                            <Icon name='menu2'></Icon>\n                            <span>Menu2</span>\n                        </Menu.Item>\n                    </If>\n                    <If condition={permission3}>\n                        <Menu.Item key=\"home\">\n                            <Icon name='menu3'></Icon>\n                            <span>Menu3</span>\n                        </Menu.Item>\n                    </If>\n                    <If condition={permission4}>\n                        <Menu.Item key=\"home\">\n                            <Icon name='menu4'></Icon>\n                            <span>Menu4</span>\n                        </Menu.Item>\n                    </If>\n                </SubMenu>\n            </If>\n            ...\n        </Menu>\n    );\n}\n```\n\n## 安装\n欢迎大家安装使用\n```Bash\nnpm install --save rc-if-else\n```\n\n[![](https://nodei.co/npm/rc-if-else.png)](https://npmjs.org/package/rc-if-else)\n\n## 结语\n更多使用方法请看：[https://npmjs.org/package/rc-if-else](https://npmjs.org/package/rc-if-else)\n如果有更好的实现方式或疑问，欢迎评论留言\n","slug":"React条件渲染组件: rc-if-else","published":1,"updated":"2019-03-05T02:55:57.779Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvyuyqe00001y9pjs6t8mmd6","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>在做后台系统的时候，需要进行大量的内容权限控制，涉及到大量内容的显示和隐藏，写了不少的if-else，最后封装了一个条件渲染组件: rc-if-else，使用更简单、灵活，代码更加简洁</p>\n<h2 id=\"普通写法\"><a href=\"#普通写法\" class=\"headerlink\" title=\"普通写法\"></a>普通写法</h2><p>这里只是写个简单的demo以做比较，当然还可以使用for或者其他的封装方式来优化代码，这里暂不讨论<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React <span class=\"keyword\">from</span> <span class=\"string\">'react'</span>;</span><br><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\">render() &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">        &lt;Menu&gt;</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                permission1 &amp;&amp; permission2 &amp;&amp; permission3  &amp;&amp; permission4</span><br><span class=\"line\">                    ? (</span><br><span class=\"line\">                        &lt;SubMenu&gt;</span><br><span class=\"line\">                            &#123; permission1</span><br><span class=\"line\">                                ? (</span><br><span class=\"line\">                                    &lt;Menu.Item key=<span class=\"string\">\"home\"</span>&gt;</span><br><span class=\"line\">                                        &lt;Icon name=<span class=\"string\">'menu1'</span>&gt;&lt;/Icon&gt;</span><br><span class=\"line\">                                        &lt;span&gt;Menu1&lt;<span class=\"regexp\">/span&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">                                    &lt;/</span>Menu.Item&gt;</span><br><span class=\"line\">                                ) : <span class=\"literal\">null</span></span><br><span class=\"line\">                            &#125;;</span><br><span class=\"line\">                            &#123; permission2</span><br><span class=\"line\">                                ? (</span><br><span class=\"line\">                                    &lt;Menu.Item key=<span class=\"string\">\"home\"</span>&gt;</span><br><span class=\"line\">                                        &lt;Icon name=<span class=\"string\">'menu2'</span>&gt;&lt;/Icon&gt;</span><br><span class=\"line\">                                        &lt;span&gt;Menu2&lt;<span class=\"regexp\">/span&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">                                    &lt;/</span>Menu.Item&gt;</span><br><span class=\"line\">                                ) : <span class=\"literal\">null</span></span><br><span class=\"line\">                            &#125;;</span><br><span class=\"line\">                            &#123; permission3</span><br><span class=\"line\">                                ? (</span><br><span class=\"line\">                                    &lt;Menu.Item key=<span class=\"string\">\"home\"</span>&gt;</span><br><span class=\"line\">                                        &lt;Icon name=<span class=\"string\">'menu3'</span>&gt;&lt;/Icon&gt;</span><br><span class=\"line\">                                        &lt;span&gt;Menu3&lt;<span class=\"regexp\">/span&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">                                    &lt;/</span>Menu.Item&gt;</span><br><span class=\"line\">                                ) : <span class=\"literal\">null</span></span><br><span class=\"line\">                            &#125;;</span><br><span class=\"line\">                            &#123; permission4</span><br><span class=\"line\">                                ? (</span><br><span class=\"line\">                                    &lt;Menu.Item key=<span class=\"string\">\"home\"</span>&gt;</span><br><span class=\"line\">                                        &lt;Icon name=<span class=\"string\">'menu4'</span>&gt;&lt;/Icon&gt;</span><br><span class=\"line\">                                        &lt;span&gt;Menu4&lt;<span class=\"regexp\">/span&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">                                    &lt;/</span>Menu.Item&gt;</span><br><span class=\"line\">                                ) : <span class=\"literal\">null</span></span><br><span class=\"line\">                            &#125;;</span><br><span class=\"line\">                        &lt;<span class=\"regexp\">/SubMenu&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">                    ) : null</span></span><br><span class=\"line\"><span class=\"regexp\">            &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">            ...</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;/</span>Menu&gt;</span><br><span class=\"line\">    );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"使用rc-if-else的写法\"><a href=\"#使用rc-if-else的写法\" class=\"headerlink\" title=\"使用rc-if-else的写法\"></a>使用rc-if-else的写法</h2><p>使用<a href=\"https://npmjs.org/package/rc-if-else\" target=\"_blank\" rel=\"noopener\">rc-if-else</a>之后，上面的代码可以这样写<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React <span class=\"keyword\">from</span> <span class=\"string\">'react'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; If &#125; <span class=\"keyword\">from</span> <span class=\"string\">'rc-if-else'</span>;</span><br><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\">render() &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">        &lt;Menu&gt;</span><br><span class=\"line\">            &lt;If condition=&#123;permission1 &amp;&amp; permission2 &amp;&amp; permission3  &amp;&amp; permission4&#125;&gt;</span><br><span class=\"line\">                &lt;SubMenu key=<span class=\"string\">\"React Demo\"</span> title=&#123;&lt;span&gt;&lt;StyledIcon icons=&#123;[iconResource, iconResourceHover]&#125; /&gt;React Demo&lt;/span&gt;&#125;&gt;</span><br><span class=\"line\">                    &lt;If condition=&#123;permission1&#125;&gt;</span><br><span class=\"line\">                        &lt;Menu.Item key=<span class=\"string\">\"home\"</span>&gt;</span><br><span class=\"line\">                            &lt;Icon name=<span class=\"string\">'menu1'</span>&gt;&lt;/Icon&gt;</span><br><span class=\"line\">                            &lt;span&gt;Menu1&lt;<span class=\"regexp\">/span&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">                        &lt;/</span>Menu.Item&gt;</span><br><span class=\"line\">                    &lt;<span class=\"regexp\">/If&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">                    &lt;If condition=&#123;permission2&#125;&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">                        &lt;Menu.Item key=\"home\"&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">                            &lt;Icon name='menu2'&gt;&lt;/</span>Icon&gt;</span><br><span class=\"line\">                            &lt;span&gt;Menu2&lt;<span class=\"regexp\">/span&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">                        &lt;/</span>Menu.Item&gt;</span><br><span class=\"line\">                    &lt;<span class=\"regexp\">/If&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">                    &lt;If condition=&#123;permission3&#125;&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">                        &lt;Menu.Item key=\"home\"&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">                            &lt;Icon name='menu3'&gt;&lt;/</span>Icon&gt;</span><br><span class=\"line\">                            &lt;span&gt;Menu3&lt;<span class=\"regexp\">/span&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">                        &lt;/</span>Menu.Item&gt;</span><br><span class=\"line\">                    &lt;<span class=\"regexp\">/If&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">                    &lt;If condition=&#123;permission4&#125;&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">                        &lt;Menu.Item key=\"home\"&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">                            &lt;Icon name='menu4'&gt;&lt;/</span>Icon&gt;</span><br><span class=\"line\">                            &lt;span&gt;Menu4&lt;<span class=\"regexp\">/span&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">                        &lt;/</span>Menu.Item&gt;</span><br><span class=\"line\">                    &lt;<span class=\"regexp\">/If&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">                &lt;/</span>SubMenu&gt;</span><br><span class=\"line\">            &lt;<span class=\"regexp\">/If&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">            ...</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;/</span>Menu&gt;</span><br><span class=\"line\">    );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>欢迎大家安装使用<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install --save rc-if-else</span><br></pre></td></tr></table></figure></p>\n<p><a href=\"https://npmjs.org/package/rc-if-else\" target=\"_blank\" rel=\"noopener\"><img src=\"https://nodei.co/npm/rc-if-else.png\" alt=\"\"></a></p>\n<h2 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h2><p>更多使用方法请看：<a href=\"https://npmjs.org/package/rc-if-else\" target=\"_blank\" rel=\"noopener\">https://npmjs.org/package/rc-if-else</a><br>如果有更好的实现方式或疑问，欢迎评论留言</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>在做后台系统的时候，需要进行大量的内容权限控制，涉及到大量内容的显示和隐藏，写了不少的if-else，最后封装了一个条件渲染组件: rc-if-else，使用更简单、灵活，代码更加简洁</p>\n<h2 id=\"普通写法\"><a href=\"#普通写法\" class=\"headerlink\" title=\"普通写法\"></a>普通写法</h2><p>这里只是写个简单的demo以做比较，当然还可以使用for或者其他的封装方式来优化代码，这里暂不讨论<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React <span class=\"keyword\">from</span> <span class=\"string\">'react'</span>;</span><br><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\">render() &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">        &lt;Menu&gt;</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                permission1 &amp;&amp; permission2 &amp;&amp; permission3  &amp;&amp; permission4</span><br><span class=\"line\">                    ? (</span><br><span class=\"line\">                        &lt;SubMenu&gt;</span><br><span class=\"line\">                            &#123; permission1</span><br><span class=\"line\">                                ? (</span><br><span class=\"line\">                                    &lt;Menu.Item key=<span class=\"string\">\"home\"</span>&gt;</span><br><span class=\"line\">                                        &lt;Icon name=<span class=\"string\">'menu1'</span>&gt;&lt;/Icon&gt;</span><br><span class=\"line\">                                        &lt;span&gt;Menu1&lt;<span class=\"regexp\">/span&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">                                    &lt;/</span>Menu.Item&gt;</span><br><span class=\"line\">                                ) : <span class=\"literal\">null</span></span><br><span class=\"line\">                            &#125;;</span><br><span class=\"line\">                            &#123; permission2</span><br><span class=\"line\">                                ? (</span><br><span class=\"line\">                                    &lt;Menu.Item key=<span class=\"string\">\"home\"</span>&gt;</span><br><span class=\"line\">                                        &lt;Icon name=<span class=\"string\">'menu2'</span>&gt;&lt;/Icon&gt;</span><br><span class=\"line\">                                        &lt;span&gt;Menu2&lt;<span class=\"regexp\">/span&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">                                    &lt;/</span>Menu.Item&gt;</span><br><span class=\"line\">                                ) : <span class=\"literal\">null</span></span><br><span class=\"line\">                            &#125;;</span><br><span class=\"line\">                            &#123; permission3</span><br><span class=\"line\">                                ? (</span><br><span class=\"line\">                                    &lt;Menu.Item key=<span class=\"string\">\"home\"</span>&gt;</span><br><span class=\"line\">                                        &lt;Icon name=<span class=\"string\">'menu3'</span>&gt;&lt;/Icon&gt;</span><br><span class=\"line\">                                        &lt;span&gt;Menu3&lt;<span class=\"regexp\">/span&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">                                    &lt;/</span>Menu.Item&gt;</span><br><span class=\"line\">                                ) : <span class=\"literal\">null</span></span><br><span class=\"line\">                            &#125;;</span><br><span class=\"line\">                            &#123; permission4</span><br><span class=\"line\">                                ? (</span><br><span class=\"line\">                                    &lt;Menu.Item key=<span class=\"string\">\"home\"</span>&gt;</span><br><span class=\"line\">                                        &lt;Icon name=<span class=\"string\">'menu4'</span>&gt;&lt;/Icon&gt;</span><br><span class=\"line\">                                        &lt;span&gt;Menu4&lt;<span class=\"regexp\">/span&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">                                    &lt;/</span>Menu.Item&gt;</span><br><span class=\"line\">                                ) : <span class=\"literal\">null</span></span><br><span class=\"line\">                            &#125;;</span><br><span class=\"line\">                        &lt;<span class=\"regexp\">/SubMenu&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">                    ) : null</span></span><br><span class=\"line\"><span class=\"regexp\">            &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">            ...</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;/</span>Menu&gt;</span><br><span class=\"line\">    );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"使用rc-if-else的写法\"><a href=\"#使用rc-if-else的写法\" class=\"headerlink\" title=\"使用rc-if-else的写法\"></a>使用rc-if-else的写法</h2><p>使用<a href=\"https://npmjs.org/package/rc-if-else\" target=\"_blank\" rel=\"noopener\">rc-if-else</a>之后，上面的代码可以这样写<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React <span class=\"keyword\">from</span> <span class=\"string\">'react'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; If &#125; <span class=\"keyword\">from</span> <span class=\"string\">'rc-if-else'</span>;</span><br><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\">render() &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">        &lt;Menu&gt;</span><br><span class=\"line\">            &lt;If condition=&#123;permission1 &amp;&amp; permission2 &amp;&amp; permission3  &amp;&amp; permission4&#125;&gt;</span><br><span class=\"line\">                &lt;SubMenu key=<span class=\"string\">\"React Demo\"</span> title=&#123;&lt;span&gt;&lt;StyledIcon icons=&#123;[iconResource, iconResourceHover]&#125; /&gt;React Demo&lt;/span&gt;&#125;&gt;</span><br><span class=\"line\">                    &lt;If condition=&#123;permission1&#125;&gt;</span><br><span class=\"line\">                        &lt;Menu.Item key=<span class=\"string\">\"home\"</span>&gt;</span><br><span class=\"line\">                            &lt;Icon name=<span class=\"string\">'menu1'</span>&gt;&lt;/Icon&gt;</span><br><span class=\"line\">                            &lt;span&gt;Menu1&lt;<span class=\"regexp\">/span&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">                        &lt;/</span>Menu.Item&gt;</span><br><span class=\"line\">                    &lt;<span class=\"regexp\">/If&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">                    &lt;If condition=&#123;permission2&#125;&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">                        &lt;Menu.Item key=\"home\"&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">                            &lt;Icon name='menu2'&gt;&lt;/</span>Icon&gt;</span><br><span class=\"line\">                            &lt;span&gt;Menu2&lt;<span class=\"regexp\">/span&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">                        &lt;/</span>Menu.Item&gt;</span><br><span class=\"line\">                    &lt;<span class=\"regexp\">/If&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">                    &lt;If condition=&#123;permission3&#125;&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">                        &lt;Menu.Item key=\"home\"&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">                            &lt;Icon name='menu3'&gt;&lt;/</span>Icon&gt;</span><br><span class=\"line\">                            &lt;span&gt;Menu3&lt;<span class=\"regexp\">/span&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">                        &lt;/</span>Menu.Item&gt;</span><br><span class=\"line\">                    &lt;<span class=\"regexp\">/If&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">                    &lt;If condition=&#123;permission4&#125;&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">                        &lt;Menu.Item key=\"home\"&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">                            &lt;Icon name='menu4'&gt;&lt;/</span>Icon&gt;</span><br><span class=\"line\">                            &lt;span&gt;Menu4&lt;<span class=\"regexp\">/span&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">                        &lt;/</span>Menu.Item&gt;</span><br><span class=\"line\">                    &lt;<span class=\"regexp\">/If&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">                &lt;/</span>SubMenu&gt;</span><br><span class=\"line\">            &lt;<span class=\"regexp\">/If&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">            ...</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;/</span>Menu&gt;</span><br><span class=\"line\">    );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>欢迎大家安装使用<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install --save rc-if-else</span><br></pre></td></tr></table></figure></p>\n<p><a href=\"https://npmjs.org/package/rc-if-else\" target=\"_blank\" rel=\"noopener\"><img src=\"https://nodei.co/npm/rc-if-else.png\" alt=\"\"></a></p>\n<h2 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h2><p>更多使用方法请看：<a href=\"https://npmjs.org/package/rc-if-else\" target=\"_blank\" rel=\"noopener\">https://npmjs.org/package/rc-if-else</a><br>如果有更好的实现方式或疑问，欢迎评论留言</p>\n"},{"title":"《失控》读后感","date":"2018-12-06T01:56:26.000Z","_content":"\n## 书中观点\n\n书中首先列出了`进化体`这一个概念，`进化体`小到氢原子，大到智慧生命，甚至整个地球，太阳系，星系，宇宙，大的`进化体`由小的`进化体`组成，之所以叫`进化体`，是因为它有一个规律，就是`进化体`总是会趋向于进化成更大的`进化体`。\n\n`进化体`中没有区分生物和非生物的区别，生物和非生物的界限其实是模糊的，衔接的\n\n凯文凯利试图研究`进化体`进化的规律，窥探未来的秘密，他得出一个结论——未来人和机器将会组成一个更大的`进化体`，生命和非生命的界限将被打破。\n\n`进化体`的进化是不可控的，也是这本书叫做《失控》的原因。\n\n## 个人观点\n\n首先，我认为书中的观点只是从另一个层面讲述了`变化`的含义。我们听到`变化`，总觉得是不可预测的。\n\n下面我讲分以下几点讲述我对本书的感悟：\n\n1. 变化的必然性\n\n2. 外部条件对变化的诱导性\n\n3. 在个人行为中的变化必然性体现\n\n4. 在社会行为中的变化必然性体现\n\n5. 如何窥探未来的奥秘，比如什么行业将会最火，哪里的房地产将会升值，那个股票将会涨等。\n","source":"_posts/《失控》读后感.md","raw":"---\ntitle: 《失控》读后感\ndate: 2018-12-06 09:56:26\ncategories: 读书\ntags:\n    - 凯文凯利\n    - 失控\n---\n\n## 书中观点\n\n书中首先列出了`进化体`这一个概念，`进化体`小到氢原子，大到智慧生命，甚至整个地球，太阳系，星系，宇宙，大的`进化体`由小的`进化体`组成，之所以叫`进化体`，是因为它有一个规律，就是`进化体`总是会趋向于进化成更大的`进化体`。\n\n`进化体`中没有区分生物和非生物的区别，生物和非生物的界限其实是模糊的，衔接的\n\n凯文凯利试图研究`进化体`进化的规律，窥探未来的秘密，他得出一个结论——未来人和机器将会组成一个更大的`进化体`，生命和非生命的界限将被打破。\n\n`进化体`的进化是不可控的，也是这本书叫做《失控》的原因。\n\n## 个人观点\n\n首先，我认为书中的观点只是从另一个层面讲述了`变化`的含义。我们听到`变化`，总觉得是不可预测的。\n\n下面我讲分以下几点讲述我对本书的感悟：\n\n1. 变化的必然性\n\n2. 外部条件对变化的诱导性\n\n3. 在个人行为中的变化必然性体现\n\n4. 在社会行为中的变化必然性体现\n\n5. 如何窥探未来的奥秘，比如什么行业将会最火，哪里的房地产将会升值，那个股票将会涨等。\n","slug":"《失控》读后感","published":1,"updated":"2019-03-05T02:55:26.981Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvyuyqe60004y9pjbwxl2s0c","content":"<h2 id=\"书中观点\"><a href=\"#书中观点\" class=\"headerlink\" title=\"书中观点\"></a>书中观点</h2><p>书中首先列出了<code>进化体</code>这一个概念，<code>进化体</code>小到氢原子，大到智慧生命，甚至整个地球，太阳系，星系，宇宙，大的<code>进化体</code>由小的<code>进化体</code>组成，之所以叫<code>进化体</code>，是因为它有一个规律，就是<code>进化体</code>总是会趋向于进化成更大的<code>进化体</code>。</p>\n<p><code>进化体</code>中没有区分生物和非生物的区别，生物和非生物的界限其实是模糊的，衔接的</p>\n<p>凯文凯利试图研究<code>进化体</code>进化的规律，窥探未来的秘密，他得出一个结论——未来人和机器将会组成一个更大的<code>进化体</code>，生命和非生命的界限将被打破。</p>\n<p><code>进化体</code>的进化是不可控的，也是这本书叫做《失控》的原因。</p>\n<h2 id=\"个人观点\"><a href=\"#个人观点\" class=\"headerlink\" title=\"个人观点\"></a>个人观点</h2><p>首先，我认为书中的观点只是从另一个层面讲述了<code>变化</code>的含义。我们听到<code>变化</code>，总觉得是不可预测的。</p>\n<p>下面我讲分以下几点讲述我对本书的感悟：</p>\n<ol>\n<li><p>变化的必然性</p>\n</li>\n<li><p>外部条件对变化的诱导性</p>\n</li>\n<li><p>在个人行为中的变化必然性体现</p>\n</li>\n<li><p>在社会行为中的变化必然性体现</p>\n</li>\n<li><p>如何窥探未来的奥秘，比如什么行业将会最火，哪里的房地产将会升值，那个股票将会涨等。</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"书中观点\"><a href=\"#书中观点\" class=\"headerlink\" title=\"书中观点\"></a>书中观点</h2><p>书中首先列出了<code>进化体</code>这一个概念，<code>进化体</code>小到氢原子，大到智慧生命，甚至整个地球，太阳系，星系，宇宙，大的<code>进化体</code>由小的<code>进化体</code>组成，之所以叫<code>进化体</code>，是因为它有一个规律，就是<code>进化体</code>总是会趋向于进化成更大的<code>进化体</code>。</p>\n<p><code>进化体</code>中没有区分生物和非生物的区别，生物和非生物的界限其实是模糊的，衔接的</p>\n<p>凯文凯利试图研究<code>进化体</code>进化的规律，窥探未来的秘密，他得出一个结论——未来人和机器将会组成一个更大的<code>进化体</code>，生命和非生命的界限将被打破。</p>\n<p><code>进化体</code>的进化是不可控的，也是这本书叫做《失控》的原因。</p>\n<h2 id=\"个人观点\"><a href=\"#个人观点\" class=\"headerlink\" title=\"个人观点\"></a>个人观点</h2><p>首先，我认为书中的观点只是从另一个层面讲述了<code>变化</code>的含义。我们听到<code>变化</code>，总觉得是不可预测的。</p>\n<p>下面我讲分以下几点讲述我对本书的感悟：</p>\n<ol>\n<li><p>变化的必然性</p>\n</li>\n<li><p>外部条件对变化的诱导性</p>\n</li>\n<li><p>在个人行为中的变化必然性体现</p>\n</li>\n<li><p>在社会行为中的变化必然性体现</p>\n</li>\n<li><p>如何窥探未来的奥秘，比如什么行业将会最火，哪里的房地产将会升值，那个股票将会涨等。</p>\n</li>\n</ol>\n"},{"title":"前端自动生成雪碧图","date":"2017-10-11T14:56:36.000Z","_content":"\n在多页面开发过程中，经常涉及到雪碧图的合成，人工合成雪碧图不仅繁琐而且难以维护，下面介绍使用`gulp`和`less`实现自定义生成雪碧图的实现思路。\n\n#### 需求\n自动根据图片的名称生成相应的class`sprite-img-name`，在html中可以直接引用。\n例如，对于名称为`banner_logo`的图片，在html中这样写：\n\n```HTML\n<span class=\"sprite-banner-logo\"></span>\n```\n程序会根据图片的大小，和在雪碧图的位置自动写在生成的class`sprite-banner-logo`里面，开发过程中不用关系图片的大小和`background-position`，只需要在html写对class，就可以直接用图片啦。并且定下css命名规则为`dasherize`。超级方便，从此告别手动ps雪碧图和恶心的调整`background-position`。\n\n#### 实现\n多个页面的雪碧图分开生成的完整代码如下\n\n`gulp-task-spritesmith.js`:\n```js\nvar gulp = require('gulp');\nvar gutil = require('gulp-util');\nvar spritesmith = require('gulp.spritesmith');\nvar buffer = require('vinyl-buffer');\nvar imagemin = require('gulp-imagemin');\nvar merge2 = require('merge2');\nvar dasherize = require(\"underscore.string/dasherize\");\n\nvar basePath = '../static/'; // 静态目录路径\nvar sprites = [{ // 多页面雪碧图生成配置\n    name: 'home',\n    src: 'img/home/*.{png,jpg}'\n},{\n    name: 'about',\n    src: 'img/about/*.{png,jpg}'\n}];\n\n// 这里是打包代码\nfunction buildSprite(config, next) {\n    if (!config.src) {\n        gutil.log(gutil.colors.red(`错误：雪碧图打包配置${config.name}没有配置src`));\n        return;\n    }\n\n    var config = Object.assign({\n        padding: 2,\n        cssFormat: 'css',\n        imgName: `sprite_${config.name || config.index}.png`,\n        imgDest: 'project/img/sprite',\n        cssName: `_sprite_${config.name || config.index}.less`,\n        cssDest: 'project/css/module/sprite',\n        imgPath: `/static/project/img/sprite/sprite_${config.name || config.index}.png`,\n        cssOpts: {\n            cssSelector: function(sprite) {\n                return '.sprite-' + dasherize(sprite.name);\n            }\n        }\n    }, config);\n\n    var spriteData = gulp.src(basePath + config.src)\n        .pipe(spritesmith(config));\n\n    var imgStream = spriteData.img\n        .pipe(buffer())\n        .pipe(imagemin())\n        .pipe(gulp.dest(basePath + config.imgDest));\n\n    var cssStream = spriteData.css\n        .pipe(gulp.dest(basePath + config.cssDest));\n\n    return merge2(imgStream, cssStream);\n}\n\nmodule.exports = function(cb) {\n    var i = 0;\n\n    (function run() {\n        var config = sprites[i++];\n\n        if (config) {\n            buildSprite(config).on('end', run).resume();\n        } else {\n            cb();\n        }\n    })();\n};\n```\n\n`gulpfile.js`:\n```js\nvar gulp = require('gulp');\nvar spritesTask = require('./gulp-task-spritesmith');\n\ngulp.task('sprites', spritesTask);\n```\n\n---------------------------\n### 2017/11/15\n后记：在项目中使用的时候发现把整个模块的css都打包编译成css rules在html里面直接使用并不是最佳的实践，使用的时候要引入整个css，导致sprite一旦变化，会引起大量的css变更，而且如果只用到一个sprite，整个css都会被引入。之前这样做是因为想节省写css的工作，把css都定义好直接在html里面引用就可以。后来发现项目中大多数人竟然不喜欢这种方式，还是喜欢在less里面写自己的css来覆盖，真是白费心机了 - -！。后面的项目中还是直接用官方推荐的方式，把雪碧图都编译成一个个变量，需要的自己的引用相应的值吧，至于html里面css统一的问题，只要定一个规则，大家遵守就行了。\n","source":"_posts/前端自动生成雪碧图.md","raw":"---\ntitle: 前端自动生成雪碧图\ndate: 2017-10-11 22:56:36\ncategories: 前端工程化\ntags:\n    - gulp\n    - 雪碧图\n    - spritesmith\n---\n\n在多页面开发过程中，经常涉及到雪碧图的合成，人工合成雪碧图不仅繁琐而且难以维护，下面介绍使用`gulp`和`less`实现自定义生成雪碧图的实现思路。\n\n#### 需求\n自动根据图片的名称生成相应的class`sprite-img-name`，在html中可以直接引用。\n例如，对于名称为`banner_logo`的图片，在html中这样写：\n\n```HTML\n<span class=\"sprite-banner-logo\"></span>\n```\n程序会根据图片的大小，和在雪碧图的位置自动写在生成的class`sprite-banner-logo`里面，开发过程中不用关系图片的大小和`background-position`，只需要在html写对class，就可以直接用图片啦。并且定下css命名规则为`dasherize`。超级方便，从此告别手动ps雪碧图和恶心的调整`background-position`。\n\n#### 实现\n多个页面的雪碧图分开生成的完整代码如下\n\n`gulp-task-spritesmith.js`:\n```js\nvar gulp = require('gulp');\nvar gutil = require('gulp-util');\nvar spritesmith = require('gulp.spritesmith');\nvar buffer = require('vinyl-buffer');\nvar imagemin = require('gulp-imagemin');\nvar merge2 = require('merge2');\nvar dasherize = require(\"underscore.string/dasherize\");\n\nvar basePath = '../static/'; // 静态目录路径\nvar sprites = [{ // 多页面雪碧图生成配置\n    name: 'home',\n    src: 'img/home/*.{png,jpg}'\n},{\n    name: 'about',\n    src: 'img/about/*.{png,jpg}'\n}];\n\n// 这里是打包代码\nfunction buildSprite(config, next) {\n    if (!config.src) {\n        gutil.log(gutil.colors.red(`错误：雪碧图打包配置${config.name}没有配置src`));\n        return;\n    }\n\n    var config = Object.assign({\n        padding: 2,\n        cssFormat: 'css',\n        imgName: `sprite_${config.name || config.index}.png`,\n        imgDest: 'project/img/sprite',\n        cssName: `_sprite_${config.name || config.index}.less`,\n        cssDest: 'project/css/module/sprite',\n        imgPath: `/static/project/img/sprite/sprite_${config.name || config.index}.png`,\n        cssOpts: {\n            cssSelector: function(sprite) {\n                return '.sprite-' + dasherize(sprite.name);\n            }\n        }\n    }, config);\n\n    var spriteData = gulp.src(basePath + config.src)\n        .pipe(spritesmith(config));\n\n    var imgStream = spriteData.img\n        .pipe(buffer())\n        .pipe(imagemin())\n        .pipe(gulp.dest(basePath + config.imgDest));\n\n    var cssStream = spriteData.css\n        .pipe(gulp.dest(basePath + config.cssDest));\n\n    return merge2(imgStream, cssStream);\n}\n\nmodule.exports = function(cb) {\n    var i = 0;\n\n    (function run() {\n        var config = sprites[i++];\n\n        if (config) {\n            buildSprite(config).on('end', run).resume();\n        } else {\n            cb();\n        }\n    })();\n};\n```\n\n`gulpfile.js`:\n```js\nvar gulp = require('gulp');\nvar spritesTask = require('./gulp-task-spritesmith');\n\ngulp.task('sprites', spritesTask);\n```\n\n---------------------------\n### 2017/11/15\n后记：在项目中使用的时候发现把整个模块的css都打包编译成css rules在html里面直接使用并不是最佳的实践，使用的时候要引入整个css，导致sprite一旦变化，会引起大量的css变更，而且如果只用到一个sprite，整个css都会被引入。之前这样做是因为想节省写css的工作，把css都定义好直接在html里面引用就可以。后来发现项目中大多数人竟然不喜欢这种方式，还是喜欢在less里面写自己的css来覆盖，真是白费心机了 - -！。后面的项目中还是直接用官方推荐的方式，把雪碧图都编译成一个个变量，需要的自己的引用相应的值吧，至于html里面css统一的问题，只要定一个规则，大家遵守就行了。\n","slug":"前端自动生成雪碧图","published":1,"updated":"2019-03-05T02:52:42.546Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvyuyqeh0005y9pj9zhchk2g","content":"<p>在多页面开发过程中，经常涉及到雪碧图的合成，人工合成雪碧图不仅繁琐而且难以维护，下面介绍使用<code>gulp</code>和<code>less</code>实现自定义生成雪碧图的实现思路。</p>\n<h4 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h4><p>自动根据图片的名称生成相应的class<code>sprite-img-name</code>，在html中可以直接引用。<br>例如，对于名称为<code>banner_logo</code>的图片，在html中这样写：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"sprite-banner-logo\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>程序会根据图片的大小，和在雪碧图的位置自动写在生成的class<code>sprite-banner-logo</code>里面，开发过程中不用关系图片的大小和<code>background-position</code>，只需要在html写对class，就可以直接用图片啦。并且定下css命名规则为<code>dasherize</code>。超级方便，从此告别手动ps雪碧图和恶心的调整<code>background-position</code>。</p>\n<h4 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h4><p>多个页面的雪碧图分开生成的完整代码如下</p>\n<p><code>gulp-task-spritesmith.js</code>:<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> gulp = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> gutil = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-util'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> spritesmith = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp.spritesmith'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> buffer = <span class=\"built_in\">require</span>(<span class=\"string\">'vinyl-buffer'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> imagemin = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-imagemin'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> merge2 = <span class=\"built_in\">require</span>(<span class=\"string\">'merge2'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> dasherize = <span class=\"built_in\">require</span>(<span class=\"string\">\"underscore.string/dasherize\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> basePath = <span class=\"string\">'../static/'</span>; <span class=\"comment\">// 静态目录路径</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> sprites = [&#123; <span class=\"comment\">// 多页面雪碧图生成配置</span></span><br><span class=\"line\">    name: <span class=\"string\">'home'</span>,</span><br><span class=\"line\">    src: <span class=\"string\">'img/home/*.&#123;png,jpg&#125;'</span></span><br><span class=\"line\">&#125;,&#123;</span><br><span class=\"line\">    name: <span class=\"string\">'about'</span>,</span><br><span class=\"line\">    src: <span class=\"string\">'img/about/*.&#123;png,jpg&#125;'</span></span><br><span class=\"line\">&#125;];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 这里是打包代码</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">buildSprite</span>(<span class=\"params\">config, next</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!config.src) &#123;</span><br><span class=\"line\">        gutil.log(gutil.colors.red(<span class=\"string\">`错误：雪碧图打包配置<span class=\"subst\">$&#123;config.name&#125;</span>没有配置src`</span>));</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> config = <span class=\"built_in\">Object</span>.assign(&#123;</span><br><span class=\"line\">        padding: <span class=\"number\">2</span>,</span><br><span class=\"line\">        cssFormat: <span class=\"string\">'css'</span>,</span><br><span class=\"line\">        imgName: <span class=\"string\">`sprite_<span class=\"subst\">$&#123;config.name || config.index&#125;</span>.png`</span>,</span><br><span class=\"line\">        imgDest: <span class=\"string\">'project/img/sprite'</span>,</span><br><span class=\"line\">        cssName: <span class=\"string\">`_sprite_<span class=\"subst\">$&#123;config.name || config.index&#125;</span>.less`</span>,</span><br><span class=\"line\">        cssDest: <span class=\"string\">'project/css/module/sprite'</span>,</span><br><span class=\"line\">        imgPath: <span class=\"string\">`/static/project/img/sprite/sprite_<span class=\"subst\">$&#123;config.name || config.index&#125;</span>.png`</span>,</span><br><span class=\"line\">        cssOpts: &#123;</span><br><span class=\"line\">            cssSelector: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">sprite</span>) </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"string\">'.sprite-'</span> + dasherize(sprite.name);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;, config);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> spriteData = gulp.src(basePath + config.src)</span><br><span class=\"line\">        .pipe(spritesmith(config));</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> imgStream = spriteData.img</span><br><span class=\"line\">        .pipe(buffer())</span><br><span class=\"line\">        .pipe(imagemin())</span><br><span class=\"line\">        .pipe(gulp.dest(basePath + config.imgDest));</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> cssStream = spriteData.css</span><br><span class=\"line\">        .pipe(gulp.dest(basePath + config.cssDest));</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> merge2(imgStream, cssStream);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">cb</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    (<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">run</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> config = sprites[i++];</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (config) &#123;</span><br><span class=\"line\">            buildSprite(config).on(<span class=\"string\">'end'</span>, run).resume();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            cb();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)();</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<p><code>gulpfile.js</code>:<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> gulp = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> spritesTask = <span class=\"built_in\">require</span>(<span class=\"string\">'./gulp-task-spritesmith'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">gulp.task(<span class=\"string\">'sprites'</span>, spritesTask);</span><br></pre></td></tr></table></figure></p>\n<hr>\n<h3 id=\"2017-11-15\"><a href=\"#2017-11-15\" class=\"headerlink\" title=\"2017/11/15\"></a>2017/11/15</h3><p>后记：在项目中使用的时候发现把整个模块的css都打包编译成css rules在html里面直接使用并不是最佳的实践，使用的时候要引入整个css，导致sprite一旦变化，会引起大量的css变更，而且如果只用到一个sprite，整个css都会被引入。之前这样做是因为想节省写css的工作，把css都定义好直接在html里面引用就可以。后来发现项目中大多数人竟然不喜欢这种方式，还是喜欢在less里面写自己的css来覆盖，真是白费心机了 - -！。后面的项目中还是直接用官方推荐的方式，把雪碧图都编译成一个个变量，需要的自己的引用相应的值吧，至于html里面css统一的问题，只要定一个规则，大家遵守就行了。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>在多页面开发过程中，经常涉及到雪碧图的合成，人工合成雪碧图不仅繁琐而且难以维护，下面介绍使用<code>gulp</code>和<code>less</code>实现自定义生成雪碧图的实现思路。</p>\n<h4 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h4><p>自动根据图片的名称生成相应的class<code>sprite-img-name</code>，在html中可以直接引用。<br>例如，对于名称为<code>banner_logo</code>的图片，在html中这样写：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"sprite-banner-logo\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>程序会根据图片的大小，和在雪碧图的位置自动写在生成的class<code>sprite-banner-logo</code>里面，开发过程中不用关系图片的大小和<code>background-position</code>，只需要在html写对class，就可以直接用图片啦。并且定下css命名规则为<code>dasherize</code>。超级方便，从此告别手动ps雪碧图和恶心的调整<code>background-position</code>。</p>\n<h4 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h4><p>多个页面的雪碧图分开生成的完整代码如下</p>\n<p><code>gulp-task-spritesmith.js</code>:<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> gulp = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> gutil = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-util'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> spritesmith = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp.spritesmith'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> buffer = <span class=\"built_in\">require</span>(<span class=\"string\">'vinyl-buffer'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> imagemin = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-imagemin'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> merge2 = <span class=\"built_in\">require</span>(<span class=\"string\">'merge2'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> dasherize = <span class=\"built_in\">require</span>(<span class=\"string\">\"underscore.string/dasherize\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> basePath = <span class=\"string\">'../static/'</span>; <span class=\"comment\">// 静态目录路径</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> sprites = [&#123; <span class=\"comment\">// 多页面雪碧图生成配置</span></span><br><span class=\"line\">    name: <span class=\"string\">'home'</span>,</span><br><span class=\"line\">    src: <span class=\"string\">'img/home/*.&#123;png,jpg&#125;'</span></span><br><span class=\"line\">&#125;,&#123;</span><br><span class=\"line\">    name: <span class=\"string\">'about'</span>,</span><br><span class=\"line\">    src: <span class=\"string\">'img/about/*.&#123;png,jpg&#125;'</span></span><br><span class=\"line\">&#125;];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 这里是打包代码</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">buildSprite</span>(<span class=\"params\">config, next</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!config.src) &#123;</span><br><span class=\"line\">        gutil.log(gutil.colors.red(<span class=\"string\">`错误：雪碧图打包配置<span class=\"subst\">$&#123;config.name&#125;</span>没有配置src`</span>));</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> config = <span class=\"built_in\">Object</span>.assign(&#123;</span><br><span class=\"line\">        padding: <span class=\"number\">2</span>,</span><br><span class=\"line\">        cssFormat: <span class=\"string\">'css'</span>,</span><br><span class=\"line\">        imgName: <span class=\"string\">`sprite_<span class=\"subst\">$&#123;config.name || config.index&#125;</span>.png`</span>,</span><br><span class=\"line\">        imgDest: <span class=\"string\">'project/img/sprite'</span>,</span><br><span class=\"line\">        cssName: <span class=\"string\">`_sprite_<span class=\"subst\">$&#123;config.name || config.index&#125;</span>.less`</span>,</span><br><span class=\"line\">        cssDest: <span class=\"string\">'project/css/module/sprite'</span>,</span><br><span class=\"line\">        imgPath: <span class=\"string\">`/static/project/img/sprite/sprite_<span class=\"subst\">$&#123;config.name || config.index&#125;</span>.png`</span>,</span><br><span class=\"line\">        cssOpts: &#123;</span><br><span class=\"line\">            cssSelector: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">sprite</span>) </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"string\">'.sprite-'</span> + dasherize(sprite.name);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;, config);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> spriteData = gulp.src(basePath + config.src)</span><br><span class=\"line\">        .pipe(spritesmith(config));</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> imgStream = spriteData.img</span><br><span class=\"line\">        .pipe(buffer())</span><br><span class=\"line\">        .pipe(imagemin())</span><br><span class=\"line\">        .pipe(gulp.dest(basePath + config.imgDest));</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> cssStream = spriteData.css</span><br><span class=\"line\">        .pipe(gulp.dest(basePath + config.cssDest));</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> merge2(imgStream, cssStream);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">cb</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    (<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">run</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> config = sprites[i++];</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (config) &#123;</span><br><span class=\"line\">            buildSprite(config).on(<span class=\"string\">'end'</span>, run).resume();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            cb();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)();</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<p><code>gulpfile.js</code>:<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> gulp = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> spritesTask = <span class=\"built_in\">require</span>(<span class=\"string\">'./gulp-task-spritesmith'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">gulp.task(<span class=\"string\">'sprites'</span>, spritesTask);</span><br></pre></td></tr></table></figure></p>\n<hr>\n<h3 id=\"2017-11-15\"><a href=\"#2017-11-15\" class=\"headerlink\" title=\"2017/11/15\"></a>2017/11/15</h3><p>后记：在项目中使用的时候发现把整个模块的css都打包编译成css rules在html里面直接使用并不是最佳的实践，使用的时候要引入整个css，导致sprite一旦变化，会引起大量的css变更，而且如果只用到一个sprite，整个css都会被引入。之前这样做是因为想节省写css的工作，把css都定义好直接在html里面引用就可以。后来发现项目中大多数人竟然不喜欢这种方式，还是喜欢在less里面写自己的css来覆盖，真是白费心机了 - -！。后面的项目中还是直接用官方推荐的方式，把雪碧图都编译成一个个变量，需要的自己的引用相应的值吧，至于html里面css统一的问题，只要定一个规则，大家遵守就行了。</p>\n"},{"title":"寒门在难出贵子？","date":"2017-08-27T15:45:22.000Z","_content":"　　前段时间在微博看到一篇文章《寒门在难出贵子》，引起了大家热烈的讨论，作者举了不少例子，网友也给出了各种理由。看完各种意见，我想起了“读书无用论”，不管我多不想承认，但这却是真实存在的社会现状。\n　　不少人指出产生这种现象的原因之一在于富裕的家庭的教育条件优于一般家庭。但是别忘记了一种最为重要的因素---天赋。难道后天良好的教育就能够塑造出天赋吗？有钱就可以躺赢吗？我们十几亿人里就没有几个足球天才吗？你们遇到了天赋异禀的人，你们有因为别人家里贫穷而看不起别人吗？在我们的讨论里，一个家庭良好的孩子几岁就投入多少位数的钱啦，一个家庭良好的孩子又学了音乐、跳舞、唱歌啦，富裕的家庭拥有良好的教育，这不是正常不过的事吗，拿来举证分析问题让人感觉只会用钱来思考。金钱至上的观念里，天赋不值一提，奋斗没有意义。这真是一种悲哀。\n　　《为什么寒门在难出贵子》看起来好像是很吊，很有深度的话题，引人好奇，忍不住发表自己的看法，但是以“寒门”这种本身就带有歧视性词语来做标题，讨论来讨论去还不是钱的问题，又带了一波金钱至上的风气。一般有学识的人都不会这么写，我都怀疑是不是什么标题党，骗点击和流量的，哈哈。\n　　不是说什么寒门不寒门，为什么我们的许多天才无用武之地，才是我们应该分析的。\n","source":"_posts/寒门在难出贵子？.md","raw":"---\ntitle: 寒门在难出贵子？\ndate: 2017-08-27 23:45:22\ncategories: 随感\ntags:\n    - 感情\n    - 价值观\n    - 思想\n---\n　　前段时间在微博看到一篇文章《寒门在难出贵子》，引起了大家热烈的讨论，作者举了不少例子，网友也给出了各种理由。看完各种意见，我想起了“读书无用论”，不管我多不想承认，但这却是真实存在的社会现状。\n　　不少人指出产生这种现象的原因之一在于富裕的家庭的教育条件优于一般家庭。但是别忘记了一种最为重要的因素---天赋。难道后天良好的教育就能够塑造出天赋吗？有钱就可以躺赢吗？我们十几亿人里就没有几个足球天才吗？你们遇到了天赋异禀的人，你们有因为别人家里贫穷而看不起别人吗？在我们的讨论里，一个家庭良好的孩子几岁就投入多少位数的钱啦，一个家庭良好的孩子又学了音乐、跳舞、唱歌啦，富裕的家庭拥有良好的教育，这不是正常不过的事吗，拿来举证分析问题让人感觉只会用钱来思考。金钱至上的观念里，天赋不值一提，奋斗没有意义。这真是一种悲哀。\n　　《为什么寒门在难出贵子》看起来好像是很吊，很有深度的话题，引人好奇，忍不住发表自己的看法，但是以“寒门”这种本身就带有歧视性词语来做标题，讨论来讨论去还不是钱的问题，又带了一波金钱至上的风气。一般有学识的人都不会这么写，我都怀疑是不是什么标题党，骗点击和流量的，哈哈。\n　　不是说什么寒门不寒门，为什么我们的许多天才无用武之地，才是我们应该分析的。\n","slug":"寒门在难出贵子？","published":1,"updated":"2019-03-05T02:57:03.281Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvyuyqei0006y9pjftdhrrdl","content":"<p>　　前段时间在微博看到一篇文章《寒门在难出贵子》，引起了大家热烈的讨论，作者举了不少例子，网友也给出了各种理由。看完各种意见，我想起了“读书无用论”，不管我多不想承认，但这却是真实存在的社会现状。<br>　　不少人指出产生这种现象的原因之一在于富裕的家庭的教育条件优于一般家庭。但是别忘记了一种最为重要的因素—天赋。难道后天良好的教育就能够塑造出天赋吗？有钱就可以躺赢吗？我们十几亿人里就没有几个足球天才吗？你们遇到了天赋异禀的人，你们有因为别人家里贫穷而看不起别人吗？在我们的讨论里，一个家庭良好的孩子几岁就投入多少位数的钱啦，一个家庭良好的孩子又学了音乐、跳舞、唱歌啦，富裕的家庭拥有良好的教育，这不是正常不过的事吗，拿来举证分析问题让人感觉只会用钱来思考。金钱至上的观念里，天赋不值一提，奋斗没有意义。这真是一种悲哀。<br>　　《为什么寒门在难出贵子》看起来好像是很吊，很有深度的话题，引人好奇，忍不住发表自己的看法，但是以“寒门”这种本身就带有歧视性词语来做标题，讨论来讨论去还不是钱的问题，又带了一波金钱至上的风气。一般有学识的人都不会这么写，我都怀疑是不是什么标题党，骗点击和流量的，哈哈。<br>　　不是说什么寒门不寒门，为什么我们的许多天才无用武之地，才是我们应该分析的。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>　　前段时间在微博看到一篇文章《寒门在难出贵子》，引起了大家热烈的讨论，作者举了不少例子，网友也给出了各种理由。看完各种意见，我想起了“读书无用论”，不管我多不想承认，但这却是真实存在的社会现状。<br>　　不少人指出产生这种现象的原因之一在于富裕的家庭的教育条件优于一般家庭。但是别忘记了一种最为重要的因素—天赋。难道后天良好的教育就能够塑造出天赋吗？有钱就可以躺赢吗？我们十几亿人里就没有几个足球天才吗？你们遇到了天赋异禀的人，你们有因为别人家里贫穷而看不起别人吗？在我们的讨论里，一个家庭良好的孩子几岁就投入多少位数的钱啦，一个家庭良好的孩子又学了音乐、跳舞、唱歌啦，富裕的家庭拥有良好的教育，这不是正常不过的事吗，拿来举证分析问题让人感觉只会用钱来思考。金钱至上的观念里，天赋不值一提，奋斗没有意义。这真是一种悲哀。<br>　　《为什么寒门在难出贵子》看起来好像是很吊，很有深度的话题，引人好奇，忍不住发表自己的看法，但是以“寒门”这种本身就带有歧视性词语来做标题，讨论来讨论去还不是钱的问题，又带了一波金钱至上的风气。一般有学识的人都不会这么写，我都怀疑是不是什么标题党，骗点击和流量的，哈哈。<br>　　不是说什么寒门不寒门，为什么我们的许多天才无用武之地，才是我们应该分析的。</p>\n"},{"title":"生命诞生的奥秘","date":"2017-11-09T05:40:45.000Z","_content":"\n近些天老是想到，自然界都是公平，各种东西会不断的被平衡，就像物理书上讲的浓度高的和浓度低的两种东西会不断渗透直到平衡。但是人类的作用似乎跟自然界的作用相反，总是把东西极端化，破坏自然界的平衡。我在想生物形成之初，自然界一定是由于某种目的产生了生物，很大的可能就是为了平衡某种东西。但是目前看来，人类的作用恰恰相反。但是，如果说我们的意识其实也是自然界的一种规律，是自然界发展的产物，我们现在各种看似破坏的自然界的行为其实是自然界的安排，是为了平衡某种我们没有意识到东西。我们并没有超脱，并没有高高在上，人类只是自然界发展的一种附属产物，一种工具，我们存在其实也是符合自然规律罢了。往这方面想，是不是就有可能得到生命诞生的奥秘。\n","source":"_posts/生命诞生的奥秘.md","raw":"---\ntitle: 生命诞生的奥秘\ndate: 2017-11-09 13:40:45\ncategories: 随感\ntags:\n    - 奇思妙想\n    - 瞎想\n---\n\n近些天老是想到，自然界都是公平，各种东西会不断的被平衡，就像物理书上讲的浓度高的和浓度低的两种东西会不断渗透直到平衡。但是人类的作用似乎跟自然界的作用相反，总是把东西极端化，破坏自然界的平衡。我在想生物形成之初，自然界一定是由于某种目的产生了生物，很大的可能就是为了平衡某种东西。但是目前看来，人类的作用恰恰相反。但是，如果说我们的意识其实也是自然界的一种规律，是自然界发展的产物，我们现在各种看似破坏的自然界的行为其实是自然界的安排，是为了平衡某种我们没有意识到东西。我们并没有超脱，并没有高高在上，人类只是自然界发展的一种附属产物，一种工具，我们存在其实也是符合自然规律罢了。往这方面想，是不是就有可能得到生命诞生的奥秘。\n","slug":"生命诞生的奥秘","published":1,"updated":"2019-03-05T02:59:27.363Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvyuyqem0009y9pjhcn27ynp","content":"<p>近些天老是想到，自然界都是公平，各种东西会不断的被平衡，就像物理书上讲的浓度高的和浓度低的两种东西会不断渗透直到平衡。但是人类的作用似乎跟自然界的作用相反，总是把东西极端化，破坏自然界的平衡。我在想生物形成之初，自然界一定是由于某种目的产生了生物，很大的可能就是为了平衡某种东西。但是目前看来，人类的作用恰恰相反。但是，如果说我们的意识其实也是自然界的一种规律，是自然界发展的产物，我们现在各种看似破坏的自然界的行为其实是自然界的安排，是为了平衡某种我们没有意识到东西。我们并没有超脱，并没有高高在上，人类只是自然界发展的一种附属产物，一种工具，我们存在其实也是符合自然规律罢了。往这方面想，是不是就有可能得到生命诞生的奥秘。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>近些天老是想到，自然界都是公平，各种东西会不断的被平衡，就像物理书上讲的浓度高的和浓度低的两种东西会不断渗透直到平衡。但是人类的作用似乎跟自然界的作用相反，总是把东西极端化，破坏自然界的平衡。我在想生物形成之初，自然界一定是由于某种目的产生了生物，很大的可能就是为了平衡某种东西。但是目前看来，人类的作用恰恰相反。但是，如果说我们的意识其实也是自然界的一种规律，是自然界发展的产物，我们现在各种看似破坏的自然界的行为其实是自然界的安排，是为了平衡某种我们没有意识到东西。我们并没有超脱，并没有高高在上，人类只是自然界发展的一种附属产物，一种工具，我们存在其实也是符合自然规律罢了。往这方面想，是不是就有可能得到生命诞生的奥秘。</p>\n"},{"title":"设计模式心得（持续更新）","date":"2019-05-17T09:59:55.000Z","_content":"\n## 工厂模式\n\n最佳实践为，工厂类只负责创建，并且接受具体实现类的主动注册，把与具体实现的耦合降到零。\n","source":"_posts/设计模式心得（持续更新）.md","raw":"---\ntitle: 设计模式心得（持续更新）\ndate: 2019-05-17 17:59:55\ntags:\n    - 设计模式\n---\n\n## 工厂模式\n\n最佳实践为，工厂类只负责创建，并且接受具体实现类的主动注册，把与具体实现的耦合降到零。\n","slug":"设计模式心得（持续更新）","published":1,"updated":"2019-05-20T03:04:50.240Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvyuyqen000ay9pjofkv7z1x","content":"<h2 id=\"工厂模式\"><a href=\"#工厂模式\" class=\"headerlink\" title=\"工厂模式\"></a>工厂模式</h2><p>最佳实践为，工厂类只负责创建，并且接受具体实现类的主动注册，把与具体实现的耦合降到零。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"工厂模式\"><a href=\"#工厂模式\" class=\"headerlink\" title=\"工厂模式\"></a>工厂模式</h2><p>最佳实践为，工厂类只负责创建，并且接受具体实现类的主动注册，把与具体实现的耦合降到零。</p>\n"},{"title":"浅谈JS多语言框架","date":"2019-03-04T09:40:52.000Z","_content":"## 一、Locales\n我们经常在网上看到的一些支持多语言的网站或者插件 (例如`jquery-ui`)，设置多语言的都会看到例如`en`、 `en_US`、`zh_CN`等。 这些其实就是描述一种语言具体信息的集合, 用下划线`_`或者断线`-`分割, 最前面部分通常是指语言, 比如英语、 中文、日语等。第二部分通常是指国家或者地区，比如美国英语(`en-US`)、阿根廷英语(`es-AR`)。一般只用到这两个信息就够了，当然后面还可以写更多描述的信息，具体描述信息请参考 [BCP 47](https://tools.ietf.org/html/bcp47)。\n虽然全世界语言有很多种，但是大部分网站其实只需要实现其中少数的几种就可以了。\n\n## 二、判断用户需要什么语言\n- 在浏览器让用户明确选择语言的类型，再根据用户选择跳转到相应语言的页面`（推荐）`\n- 服务器通过http请求头`Accept-Language`来判断用户语言类型\n- 客户端通过`navigator.language`或`navigator.browserLanguage`来判断用户语言类型\n\n\n## 三、框架\n\n### 1. format.js and window.intl\n[formatjs](https://formatjs.io/)，好像是`window.intl`的polyfill，如果没有`window.intl`才会加载，使用示例：\n\n```js\n// 静态字符串\n\"Hello everyone\"\n// 带参数的字符串\n\"Hello {who}\"\n// 带参数类型的字符串\n\"I have {numCats, number} cats.\"\n// 带参数类型的类型的字符串\n\"Almost {pctBlack, number, percent} of them are black.\"\n// 自定义参数类型\nformats = {\n    number: {\n        usd: { style: 'currency', currency: 'USD' }\n    }\n};\n// 带自定义类型的字符串\n\"Your total is {total, number, usd}\"\n// 有多种情况的字符串(select，根据条件)\n`{gender, select,\n    male {He}\n    female {She}\n    other {They}\n} will respond shortly.`\n// 有多种情况的字符串(plural，根据数量)\n`Cart: {itemCount} {itemCount, plural,\n    one {item}\n    other {items}\n}`\n// 有多种情况的字符串(selectordinal，根据顺序)\n`It's my cat's {year, selectordinal,\n    one {#st}\n    two {#nd}\n    few {#rd}\n    other {#th}\n} birthday!`\n```\n在`react`中使用:\n```js\nimport {IntlProvider, FormattedMessage} from 'react-intl';\n...\n\nrender() {\n    ...\n\n    return (\n        <IntlProvider locale=\"en\">\n            <p>\n                <FormattedMessage\n                    id=\"welcome\"\n                    defaultMessage={`Hello {name}, you have {unreadCount, number} {unreadCount, plural,\n                      one {message}\n                      other {messages}\n                    }`}\n                    values={{name: <b>{name}</b>, unreadCount}}\n                />\n            </p>\n        </IntlProvider>\n    );\n}\n```\n\n### 2. jQuery.I18n.js\n[jquery.i18n](https://github.com/wikimedia/jquery.i18n)(`i18n: internationalization缩写，中间18个字母`)，配置文件为基于`json`格式的文件，大概如下\n\n#### 单个语言的配置文件：\n```json\n{\n    \"@metadata\": {\n        \"authors\": [\n            \"Me\"\n        ],\n        \"last-updated\": \"2016-09-21\",\n        \"locale\": \"en\",\n        \"message-documentation\": \"qqq\"\n    },\n    \"appname-title\": \"Example Application\",\n    \"appname-sub-title\": \"An example application with jquery.i18n\"\n}\n```\n\n#### 多个语言的放在一起的配置文件：\n```json\n{\n    \"@metadata\": {\n        \"authors\": [\n            \"Me\"\n        ],\n        \"last-updated\": \"2016-09-21\",\n        \"message-documentation\": \"qqq\"\n    },\n    \"en\": {\n        \"appname-title\": \"Example Application\"\n    },\n    \"ru\": {\n        \"appname-title\": \"Ð¢ÐµÑÑ‚Ð¾Ð²Ð¾Ðµ Ð¿Ñ€Ð¸Ð»Ð¾Ð¶ÐµÐ½Ð¸Ðµ\"\n    },\n    \"//\": \"动态加载配置文件（此行为json注释）\",\n    \"en_US\": \"en_US.yml\"\n}\n\n```\n#### demo：\n```html\n<!-- 需要指定lang=\"en\" -->\n<html lang=\"en\" dir=\"ltr\">\n    <head>...</head>\n    <body>\n        <a href=\"#\" class=\"lang-switch\" data-locale=\"en\">English</a> |\n        <a href=\"#\" class=\"lang-switch\" data-locale=\"ru\">Русский</a>\n        <h1 data-i18n=\"welcome\"></h1>\n        <p id=\"messages\"></p>\n        <script>\n            jQuery(document).ready(function() {\n                var update_texts = function() {\n                    $('body').i18n();\n                };\n                $.i18n().load({\n                    'en': {\n                        'welcome': 'Welcome!',\n                        'message_from': '$1 has send you $2 {{plural:$2|message|messages}}. {{gender:$3|He|She}} is waiting for your response!'\n                    },\n                    'ru': {\n                        'welcome': 'Ð”Ð¾Ð±Ñ€Ð¾ Ð¿Ð¾Ð¶Ð°Ð»Ð¾Ð²Ð°Ñ‚ÑŒ!',\n                        'message_from': '$1 {{gender:$3|Ð¾Ñ‚Ð¿Ñ€Ð°Ð²Ð¸Ð»|Ð¾Ñ‚Ð¿Ñ€Ð°Ð²Ð¸Ð»Ð°}} Ð²Ð°Ð¼ $2 {{plural:$2|ÑÐ¾Ð¾Ð±Ñ‰ÐµÐ½Ð¸Ðµ|ÑÐ¾Ð¾Ð±Ñ‰ÐµÐ½Ð¸Ð¹|ÑÐ¾Ð¾Ð±Ñ‰ÐµÐ½Ð¸Ñ}}. {{gender:$3|ÐžÐ½|ÐžÐ½Ð°}} Ð¶Ð´Ñ‘Ñ‚ Ð¾Ñ‚Ð²ÐµÑ‚Ð°!'\n                    }\n                });\n                update_texts();\n                // 点击切换语言\n                $('.lang-switch').click(function(e) {\n                    e.preventDefault();\n                    $.i18n().locale = $(this).data('locale');\n                    update_texts();\n                });\n            });\n        </script>\n    </body>\n</html>\n```\n\n### 3. Polyglot.js\n\n[polyglot](https://github.com/airbnb/polyglot.js)，体积小，用法如下：\n\n```js\n// 设置所有的字符串\npolyglot.extend({\n    // pluralization\n    \"num_cars\": \"%{smart_count} car |||| %{smart_count} cars\",\n    \"hello\": \"Hello\",\n    \"hello_name\": \"Hello, %{name}.\"\n    \"nav\": {\n        \"sidebar\": {\n            \"welcome\": \"Welcome\"\n        }\n    }\n});\n// 取字符串\npolyglot.t(\"hello_name\", {name: \"John\"});\npolyglot.t(\"nav.sidebar.welcome\");\npolyglot.locale(\"de\");\n```\n```html\n...\n\n<script src=\"polyglot/polyglot.js\"></script>\n<script src=\"polyglot/main-polyglot.js\"></script>\n<script src=\"common/jquery.js\"></script>\n<script src=\"common/underscore.js\"></script>\n<script type=\"text/template\" id=\"main-content\">\n   <p><%= hello %></p>\n   <small><%= unread %></small>\n</script>\n<script>\n jQuery(document).ready(function() {\n    var polyglot = new Polyglot({\n        phrases: {\n            \"hello\": \"Hello, %{name}!\",\n            \"unread\": \"You have %{smart_count} unread message |||| You have %{smart_count} unread messages\"\n        }\n    });\n    var main_content_temp = _.template($('#main-content').html());\n    $('body').prepend(main_content_temp({\n        hello: polyglot.t('hello', {name: 'John'}),\n        unread: polyglot.t('unread', {smart_count: 2})\n    }));\n});\n</script>\n\n...\n```\n\n### 4. Globalize.js\n[globalize.js](https://github.com/globalizejs/globalize)，实例如下\n```html\n...\n\n<body>\n    <h1 id=\"welcome\"></h1>\n    <p id=\"earnings\"></p>\n    <script>\n        jQuery(document).ready(function() {\n            // step 1\n            Globalize.loadMessages({\n                \"en\": {\n                    'welcome': 'Welcome, {name}!',\n                    'welcome_0': 'Welcome, {0}!',\n                    'earned': 'Today is {date} and you\\'ve earned {amount}!'\n                }\n            });\n            // step 2\n            var globalize = new Globalize(\"en\");\n            // step 3\n            var welcome_message = globalize.messageFormatter('welcome');\n            $('#welcome').text( welcome_message({name: 'John'}) );\n            $('#earnings').text(\n                globalize.messageFormatter('earned')({\n                    amount: globalize.formatCurrency(500.5, 'USD'),\n                    date: globalize.formatDate( new Date(), {\n                        datetime: \"medium\"\n                    })\n                })\n            )\n        });\n    </script>\n</body>\n\n ...\n```\n\n## 四、总结\n部分库会提供对一些特定类型字符串(`时间日期格式、金钱格式、长度单位等`)进行转换的功能，体积就会大一点，，如`format.js`、`globalize.js`，小一点的库`polyglot.js`、`jquery.i18n`则没有这种功能。根据我们项目的需求，个人还是比较倾向于`globalize.js`，插件功能比较丰富一点，兼容性比较好，功能插件化，用不到不需要引入，用得到时候可以快速拿过来使用。\n\n##### 需要注意的是：\n1. 几乎所有的框架使用的字符串模板格式都参考了[ICU Message](http://userguide.icu-project.org/formatparse/messages)语法。\n2. 不管你使用哪种库，都需要你事先准备好翻译好的所有文字信息，框架`不会`自动帮你翻译。\n\n##### 参考链接\n1. https://marcoscaceres.github.io/jsi18n/\n2. https://phraseapp.com/blog/posts/step-step-guide-javascript-localization/\n3. https://tools.ietf.org/html/bcp47\n","source":"_posts/浅谈JS多语言框架.md","raw":"---\ntitle: 浅谈JS多语言框架\ndate: 2019-03-04 17:40:52\ncategories: Javascript\ntags:\n    - js框架\n    - locales\n    - 国际化\n    - 多语言\n---\n## 一、Locales\n我们经常在网上看到的一些支持多语言的网站或者插件 (例如`jquery-ui`)，设置多语言的都会看到例如`en`、 `en_US`、`zh_CN`等。 这些其实就是描述一种语言具体信息的集合, 用下划线`_`或者断线`-`分割, 最前面部分通常是指语言, 比如英语、 中文、日语等。第二部分通常是指国家或者地区，比如美国英语(`en-US`)、阿根廷英语(`es-AR`)。一般只用到这两个信息就够了，当然后面还可以写更多描述的信息，具体描述信息请参考 [BCP 47](https://tools.ietf.org/html/bcp47)。\n虽然全世界语言有很多种，但是大部分网站其实只需要实现其中少数的几种就可以了。\n\n## 二、判断用户需要什么语言\n- 在浏览器让用户明确选择语言的类型，再根据用户选择跳转到相应语言的页面`（推荐）`\n- 服务器通过http请求头`Accept-Language`来判断用户语言类型\n- 客户端通过`navigator.language`或`navigator.browserLanguage`来判断用户语言类型\n\n\n## 三、框架\n\n### 1. format.js and window.intl\n[formatjs](https://formatjs.io/)，好像是`window.intl`的polyfill，如果没有`window.intl`才会加载，使用示例：\n\n```js\n// 静态字符串\n\"Hello everyone\"\n// 带参数的字符串\n\"Hello {who}\"\n// 带参数类型的字符串\n\"I have {numCats, number} cats.\"\n// 带参数类型的类型的字符串\n\"Almost {pctBlack, number, percent} of them are black.\"\n// 自定义参数类型\nformats = {\n    number: {\n        usd: { style: 'currency', currency: 'USD' }\n    }\n};\n// 带自定义类型的字符串\n\"Your total is {total, number, usd}\"\n// 有多种情况的字符串(select，根据条件)\n`{gender, select,\n    male {He}\n    female {She}\n    other {They}\n} will respond shortly.`\n// 有多种情况的字符串(plural，根据数量)\n`Cart: {itemCount} {itemCount, plural,\n    one {item}\n    other {items}\n}`\n// 有多种情况的字符串(selectordinal，根据顺序)\n`It's my cat's {year, selectordinal,\n    one {#st}\n    two {#nd}\n    few {#rd}\n    other {#th}\n} birthday!`\n```\n在`react`中使用:\n```js\nimport {IntlProvider, FormattedMessage} from 'react-intl';\n...\n\nrender() {\n    ...\n\n    return (\n        <IntlProvider locale=\"en\">\n            <p>\n                <FormattedMessage\n                    id=\"welcome\"\n                    defaultMessage={`Hello {name}, you have {unreadCount, number} {unreadCount, plural,\n                      one {message}\n                      other {messages}\n                    }`}\n                    values={{name: <b>{name}</b>, unreadCount}}\n                />\n            </p>\n        </IntlProvider>\n    );\n}\n```\n\n### 2. jQuery.I18n.js\n[jquery.i18n](https://github.com/wikimedia/jquery.i18n)(`i18n: internationalization缩写，中间18个字母`)，配置文件为基于`json`格式的文件，大概如下\n\n#### 单个语言的配置文件：\n```json\n{\n    \"@metadata\": {\n        \"authors\": [\n            \"Me\"\n        ],\n        \"last-updated\": \"2016-09-21\",\n        \"locale\": \"en\",\n        \"message-documentation\": \"qqq\"\n    },\n    \"appname-title\": \"Example Application\",\n    \"appname-sub-title\": \"An example application with jquery.i18n\"\n}\n```\n\n#### 多个语言的放在一起的配置文件：\n```json\n{\n    \"@metadata\": {\n        \"authors\": [\n            \"Me\"\n        ],\n        \"last-updated\": \"2016-09-21\",\n        \"message-documentation\": \"qqq\"\n    },\n    \"en\": {\n        \"appname-title\": \"Example Application\"\n    },\n    \"ru\": {\n        \"appname-title\": \"Ð¢ÐµÑÑ‚Ð¾Ð²Ð¾Ðµ Ð¿Ñ€Ð¸Ð»Ð¾Ð¶ÐµÐ½Ð¸Ðµ\"\n    },\n    \"//\": \"动态加载配置文件（此行为json注释）\",\n    \"en_US\": \"en_US.yml\"\n}\n\n```\n#### demo：\n```html\n<!-- 需要指定lang=\"en\" -->\n<html lang=\"en\" dir=\"ltr\">\n    <head>...</head>\n    <body>\n        <a href=\"#\" class=\"lang-switch\" data-locale=\"en\">English</a> |\n        <a href=\"#\" class=\"lang-switch\" data-locale=\"ru\">Русский</a>\n        <h1 data-i18n=\"welcome\"></h1>\n        <p id=\"messages\"></p>\n        <script>\n            jQuery(document).ready(function() {\n                var update_texts = function() {\n                    $('body').i18n();\n                };\n                $.i18n().load({\n                    'en': {\n                        'welcome': 'Welcome!',\n                        'message_from': '$1 has send you $2 {{plural:$2|message|messages}}. {{gender:$3|He|She}} is waiting for your response!'\n                    },\n                    'ru': {\n                        'welcome': 'Ð”Ð¾Ð±Ñ€Ð¾ Ð¿Ð¾Ð¶Ð°Ð»Ð¾Ð²Ð°Ñ‚ÑŒ!',\n                        'message_from': '$1 {{gender:$3|Ð¾Ñ‚Ð¿Ñ€Ð°Ð²Ð¸Ð»|Ð¾Ñ‚Ð¿Ñ€Ð°Ð²Ð¸Ð»Ð°}} Ð²Ð°Ð¼ $2 {{plural:$2|ÑÐ¾Ð¾Ð±Ñ‰ÐµÐ½Ð¸Ðµ|ÑÐ¾Ð¾Ð±Ñ‰ÐµÐ½Ð¸Ð¹|ÑÐ¾Ð¾Ð±Ñ‰ÐµÐ½Ð¸Ñ}}. {{gender:$3|ÐžÐ½|ÐžÐ½Ð°}} Ð¶Ð´Ñ‘Ñ‚ Ð¾Ñ‚Ð²ÐµÑ‚Ð°!'\n                    }\n                });\n                update_texts();\n                // 点击切换语言\n                $('.lang-switch').click(function(e) {\n                    e.preventDefault();\n                    $.i18n().locale = $(this).data('locale');\n                    update_texts();\n                });\n            });\n        </script>\n    </body>\n</html>\n```\n\n### 3. Polyglot.js\n\n[polyglot](https://github.com/airbnb/polyglot.js)，体积小，用法如下：\n\n```js\n// 设置所有的字符串\npolyglot.extend({\n    // pluralization\n    \"num_cars\": \"%{smart_count} car |||| %{smart_count} cars\",\n    \"hello\": \"Hello\",\n    \"hello_name\": \"Hello, %{name}.\"\n    \"nav\": {\n        \"sidebar\": {\n            \"welcome\": \"Welcome\"\n        }\n    }\n});\n// 取字符串\npolyglot.t(\"hello_name\", {name: \"John\"});\npolyglot.t(\"nav.sidebar.welcome\");\npolyglot.locale(\"de\");\n```\n```html\n...\n\n<script src=\"polyglot/polyglot.js\"></script>\n<script src=\"polyglot/main-polyglot.js\"></script>\n<script src=\"common/jquery.js\"></script>\n<script src=\"common/underscore.js\"></script>\n<script type=\"text/template\" id=\"main-content\">\n   <p><%= hello %></p>\n   <small><%= unread %></small>\n</script>\n<script>\n jQuery(document).ready(function() {\n    var polyglot = new Polyglot({\n        phrases: {\n            \"hello\": \"Hello, %{name}!\",\n            \"unread\": \"You have %{smart_count} unread message |||| You have %{smart_count} unread messages\"\n        }\n    });\n    var main_content_temp = _.template($('#main-content').html());\n    $('body').prepend(main_content_temp({\n        hello: polyglot.t('hello', {name: 'John'}),\n        unread: polyglot.t('unread', {smart_count: 2})\n    }));\n});\n</script>\n\n...\n```\n\n### 4. Globalize.js\n[globalize.js](https://github.com/globalizejs/globalize)，实例如下\n```html\n...\n\n<body>\n    <h1 id=\"welcome\"></h1>\n    <p id=\"earnings\"></p>\n    <script>\n        jQuery(document).ready(function() {\n            // step 1\n            Globalize.loadMessages({\n                \"en\": {\n                    'welcome': 'Welcome, {name}!',\n                    'welcome_0': 'Welcome, {0}!',\n                    'earned': 'Today is {date} and you\\'ve earned {amount}!'\n                }\n            });\n            // step 2\n            var globalize = new Globalize(\"en\");\n            // step 3\n            var welcome_message = globalize.messageFormatter('welcome');\n            $('#welcome').text( welcome_message({name: 'John'}) );\n            $('#earnings').text(\n                globalize.messageFormatter('earned')({\n                    amount: globalize.formatCurrency(500.5, 'USD'),\n                    date: globalize.formatDate( new Date(), {\n                        datetime: \"medium\"\n                    })\n                })\n            )\n        });\n    </script>\n</body>\n\n ...\n```\n\n## 四、总结\n部分库会提供对一些特定类型字符串(`时间日期格式、金钱格式、长度单位等`)进行转换的功能，体积就会大一点，，如`format.js`、`globalize.js`，小一点的库`polyglot.js`、`jquery.i18n`则没有这种功能。根据我们项目的需求，个人还是比较倾向于`globalize.js`，插件功能比较丰富一点，兼容性比较好，功能插件化，用不到不需要引入，用得到时候可以快速拿过来使用。\n\n##### 需要注意的是：\n1. 几乎所有的框架使用的字符串模板格式都参考了[ICU Message](http://userguide.icu-project.org/formatparse/messages)语法。\n2. 不管你使用哪种库，都需要你事先准备好翻译好的所有文字信息，框架`不会`自动帮你翻译。\n\n##### 参考链接\n1. https://marcoscaceres.github.io/jsi18n/\n2. https://phraseapp.com/blog/posts/step-step-guide-javascript-localization/\n3. https://tools.ietf.org/html/bcp47\n","slug":"浅谈JS多语言框架","published":1,"updated":"2019-03-05T02:58:13.642Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvyuyqg4001jy9pjo8wd8zw4","content":"<h2 id=\"一、Locales\"><a href=\"#一、Locales\" class=\"headerlink\" title=\"一、Locales\"></a>一、Locales</h2><p>我们经常在网上看到的一些支持多语言的网站或者插件 (例如<code>jquery-ui</code>)，设置多语言的都会看到例如<code>en</code>、 <code>en_US</code>、<code>zh_CN</code>等。 这些其实就是描述一种语言具体信息的集合, 用下划线<code>_</code>或者断线<code>-</code>分割, 最前面部分通常是指语言, 比如英语、 中文、日语等。第二部分通常是指国家或者地区，比如美国英语(<code>en-US</code>)、阿根廷英语(<code>es-AR</code>)。一般只用到这两个信息就够了，当然后面还可以写更多描述的信息，具体描述信息请参考 <a href=\"https://tools.ietf.org/html/bcp47\" target=\"_blank\" rel=\"noopener\">BCP 47</a>。<br>虽然全世界语言有很多种，但是大部分网站其实只需要实现其中少数的几种就可以了。</p>\n<h2 id=\"二、判断用户需要什么语言\"><a href=\"#二、判断用户需要什么语言\" class=\"headerlink\" title=\"二、判断用户需要什么语言\"></a>二、判断用户需要什么语言</h2><ul>\n<li>在浏览器让用户明确选择语言的类型，再根据用户选择跳转到相应语言的页面<code>（推荐）</code></li>\n<li>服务器通过http请求头<code>Accept-Language</code>来判断用户语言类型</li>\n<li>客户端通过<code>navigator.language</code>或<code>navigator.browserLanguage</code>来判断用户语言类型</li>\n</ul>\n<h2 id=\"三、框架\"><a href=\"#三、框架\" class=\"headerlink\" title=\"三、框架\"></a>三、框架</h2><h3 id=\"1-format-js-and-window-intl\"><a href=\"#1-format-js-and-window-intl\" class=\"headerlink\" title=\"1. format.js and window.intl\"></a>1. format.js and window.intl</h3><p><a href=\"https://formatjs.io/\" target=\"_blank\" rel=\"noopener\">formatjs</a>，好像是<code>window.intl</code>的polyfill，如果没有<code>window.intl</code>才会加载，使用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 静态字符串</span></span><br><span class=\"line\"><span class=\"string\">\"Hello everyone\"</span></span><br><span class=\"line\"><span class=\"comment\">// 带参数的字符串</span></span><br><span class=\"line\"><span class=\"string\">\"Hello &#123;who&#125;\"</span></span><br><span class=\"line\"><span class=\"comment\">// 带参数类型的字符串</span></span><br><span class=\"line\"><span class=\"string\">\"I have &#123;numCats, number&#125; cats.\"</span></span><br><span class=\"line\"><span class=\"comment\">// 带参数类型的类型的字符串</span></span><br><span class=\"line\"><span class=\"string\">\"Almost &#123;pctBlack, number, percent&#125; of them are black.\"</span></span><br><span class=\"line\"><span class=\"comment\">// 自定义参数类型</span></span><br><span class=\"line\">formats = &#123;</span><br><span class=\"line\">    number: &#123;</span><br><span class=\"line\">        usd: &#123; <span class=\"attr\">style</span>: <span class=\"string\">'currency'</span>, <span class=\"attr\">currency</span>: <span class=\"string\">'USD'</span> &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"comment\">// 带自定义类型的字符串</span></span><br><span class=\"line\"><span class=\"string\">\"Your total is &#123;total, number, usd&#125;\"</span></span><br><span class=\"line\"><span class=\"comment\">// 有多种情况的字符串(select，根据条件)</span></span><br><span class=\"line\"><span class=\"string\">`&#123;gender, select,</span></span><br><span class=\"line\"><span class=\"string\">    male &#123;He&#125;</span></span><br><span class=\"line\"><span class=\"string\">    female &#123;She&#125;</span></span><br><span class=\"line\"><span class=\"string\">    other &#123;They&#125;</span></span><br><span class=\"line\"><span class=\"string\">&#125; will respond shortly.`</span></span><br><span class=\"line\"><span class=\"comment\">// 有多种情况的字符串(plural，根据数量)</span></span><br><span class=\"line\"><span class=\"string\">`Cart: &#123;itemCount&#125; &#123;itemCount, plural,</span></span><br><span class=\"line\"><span class=\"string\">    one &#123;item&#125;</span></span><br><span class=\"line\"><span class=\"string\">    other &#123;items&#125;</span></span><br><span class=\"line\"><span class=\"string\">&#125;`</span></span><br><span class=\"line\"><span class=\"comment\">// 有多种情况的字符串(selectordinal，根据顺序)</span></span><br><span class=\"line\"><span class=\"string\">`It's my cat's &#123;year, selectordinal,</span></span><br><span class=\"line\"><span class=\"string\">    one &#123;#st&#125;</span></span><br><span class=\"line\"><span class=\"string\">    two &#123;#nd&#125;</span></span><br><span class=\"line\"><span class=\"string\">    few &#123;#rd&#125;</span></span><br><span class=\"line\"><span class=\"string\">    other &#123;#th&#125;</span></span><br><span class=\"line\"><span class=\"string\">&#125; birthday!`</span></span><br></pre></td></tr></table></figure>\n<p>在<code>react</code>中使用:<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123;IntlProvider, FormattedMessage&#125; <span class=\"keyword\">from</span> <span class=\"string\">'react-intl'</span>;</span><br><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\">render() &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">        &lt;IntlProvider locale=<span class=\"string\">\"en\"</span>&gt;</span><br><span class=\"line\">            &lt;p&gt;</span><br><span class=\"line\">                &lt;FormattedMessage</span><br><span class=\"line\">                    id=<span class=\"string\">\"welcome\"</span></span><br><span class=\"line\">                    defaultMessage=&#123;<span class=\"string\">`Hello &#123;name&#125;, you have &#123;unreadCount, number&#125; &#123;unreadCount, plural,</span></span><br><span class=\"line\"><span class=\"string\">                      one &#123;message&#125;</span></span><br><span class=\"line\"><span class=\"string\">                      other &#123;messages&#125;</span></span><br><span class=\"line\"><span class=\"string\">                    &#125;`</span>&#125;</span><br><span class=\"line\">                    values=&#123;&#123;<span class=\"attr\">name</span>: <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">b</span>&gt;</span>&#123;name&#125;<span class=\"tag\">&lt;/<span class=\"name\">b</span>&gt;</span></span>, unreadCount&#125;&#125;</span><br><span class=\"line\">                /&gt;</span><br><span class=\"line\">            &lt;<span class=\"regexp\">/p&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;/</span>IntlProvider&gt;</span><br><span class=\"line\">    );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"2-jQuery-I18n-js\"><a href=\"#2-jQuery-I18n-js\" class=\"headerlink\" title=\"2. jQuery.I18n.js\"></a>2. jQuery.I18n.js</h3><p><a href=\"https://github.com/wikimedia/jquery.i18n\" target=\"_blank\" rel=\"noopener\">jquery.i18n</a>(<code>i18n: internationalization缩写，中间18个字母</code>)，配置文件为基于<code>json</code>格式的文件，大概如下</p>\n<h4 id=\"单个语言的配置文件：\"><a href=\"#单个语言的配置文件：\" class=\"headerlink\" title=\"单个语言的配置文件：\"></a>单个语言的配置文件：</h4><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">\"@metadata\"</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">\"authors\"</span>: [</span><br><span class=\"line\">            <span class=\"string\">\"Me\"</span></span><br><span class=\"line\">        ],</span><br><span class=\"line\">        <span class=\"attr\">\"last-updated\"</span>: <span class=\"string\">\"2016-09-21\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"locale\"</span>: <span class=\"string\">\"en\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"message-documentation\"</span>: <span class=\"string\">\"qqq\"</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">\"appname-title\"</span>: <span class=\"string\">\"Example Application\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"appname-sub-title\"</span>: <span class=\"string\">\"An example application with jquery.i18n\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"多个语言的放在一起的配置文件：\"><a href=\"#多个语言的放在一起的配置文件：\" class=\"headerlink\" title=\"多个语言的放在一起的配置文件：\"></a>多个语言的放在一起的配置文件：</h4><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">\"@metadata\"</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">\"authors\"</span>: [</span><br><span class=\"line\">            <span class=\"string\">\"Me\"</span></span><br><span class=\"line\">        ],</span><br><span class=\"line\">        <span class=\"attr\">\"last-updated\"</span>: <span class=\"string\">\"2016-09-21\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"message-documentation\"</span>: <span class=\"string\">\"qqq\"</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">\"en\"</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">\"appname-title\"</span>: <span class=\"string\">\"Example Application\"</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">\"ru\"</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">\"appname-title\"</span>: <span class=\"string\">\"Ð¢ÐµÑÑ‚Ð¾Ð²Ð¾Ðµ Ð¿Ñ€Ð¸Ð»Ð¾Ð¶ÐµÐ½Ð¸Ðµ\"</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">\"//\"</span>: <span class=\"string\">\"动态加载配置文件（此行为json注释）\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"en_US\"</span>: <span class=\"string\">\"en_US.yml\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"demo：\"><a href=\"#demo：\" class=\"headerlink\" title=\"demo：\"></a>demo：</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 需要指定lang=\"en\" --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span> <span class=\"attr\">dir</span>=<span class=\"string\">\"ltr\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span>...<span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"lang-switch\"</span> <span class=\"attr\">data-locale</span>=<span class=\"string\">\"en\"</span>&gt;</span>English<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> |</span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"lang-switch\"</span> <span class=\"attr\">data-locale</span>=<span class=\"string\">\"ru\"</span>&gt;</span>Русский<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">data-i18n</span>=<span class=\"string\">\"welcome\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">id</span>=<span class=\"string\">\"messages\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">            jQuery(<span class=\"built_in\">document</span>).ready(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">var</span> update_texts = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    $(<span class=\"string\">'body'</span>).i18n();</span></span><br><span class=\"line\"><span class=\"undefined\">                &#125;;</span></span><br><span class=\"line\"><span class=\"javascript\">                $.i18n().load(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"string\">'en'</span>: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"string\">'welcome'</span>: <span class=\"string\">'Welcome!'</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"string\">'message_from'</span>: <span class=\"string\">'$1 has send you $2 &#123;&#123;plural:$2|message|messages&#125;&#125;. &#123;&#123;gender:$3|He|She&#125;&#125; is waiting for your response!'</span></span></span><br><span class=\"line\"><span class=\"undefined\">                    &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"string\">'ru'</span>: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"string\">'welcome'</span>: <span class=\"string\">'Ð”Ð¾Ð±Ñ€Ð¾ Ð¿Ð¾Ð¶Ð°Ð»Ð¾Ð²Ð°Ñ‚ÑŒ!'</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"string\">'message_from'</span>: <span class=\"string\">'$1 &#123;&#123;gender:$3|Ð¾Ñ‚Ð¿Ñ€Ð°Ð²Ð¸Ð»|Ð¾Ñ‚Ð¿Ñ€Ð°Ð²Ð¸Ð»Ð°&#125;&#125; Ð²Ð°Ð¼ $2 &#123;&#123;plural:$2|ÑÐ¾Ð¾Ð±Ñ‰ÐµÐ½Ð¸Ðµ|ÑÐ¾Ð¾Ð±Ñ‰ÐµÐ½Ð¸Ð¹|ÑÐ¾Ð¾Ð±Ñ‰ÐµÐ½Ð¸Ñ&#125;&#125;. &#123;&#123;gender:$3|ÐžÐ½|ÐžÐ½Ð°&#125;&#125; Ð¶Ð´Ñ‘Ñ‚ Ð¾Ñ‚Ð²ÐµÑ‚Ð°!'</span></span></span><br><span class=\"line\"><span class=\"undefined\">                    &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">                &#125;);</span></span><br><span class=\"line\"><span class=\"undefined\">                update_texts();</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"comment\">// 点击切换语言</span></span></span><br><span class=\"line\"><span class=\"javascript\">                $(<span class=\"string\">'.lang-switch'</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">                    e.preventDefault();</span></span><br><span class=\"line\"><span class=\"javascript\">                    $.i18n().locale = $(<span class=\"keyword\">this</span>).data(<span class=\"string\">'locale'</span>);</span></span><br><span class=\"line\"><span class=\"undefined\">                    update_texts();</span></span><br><span class=\"line\"><span class=\"undefined\">                &#125;);</span></span><br><span class=\"line\"><span class=\"undefined\">            &#125;);</span></span><br><span class=\"line\"><span class=\"undefined\">        </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"3-Polyglot-js\"><a href=\"#3-Polyglot-js\" class=\"headerlink\" title=\"3. Polyglot.js\"></a>3. Polyglot.js</h3><p><a href=\"https://github.com/airbnb/polyglot.js\" target=\"_blank\" rel=\"noopener\">polyglot</a>，体积小，用法如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 设置所有的字符串</span></span><br><span class=\"line\">polyglot.extend(&#123;</span><br><span class=\"line\">    <span class=\"comment\">// pluralization</span></span><br><span class=\"line\">    <span class=\"string\">\"num_cars\"</span>: <span class=\"string\">\"%&#123;smart_count&#125; car |||| %&#123;smart_count&#125; cars\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"hello\"</span>: <span class=\"string\">\"Hello\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"hello_name\"</span>: <span class=\"string\">\"Hello, %&#123;name&#125;.\"</span></span><br><span class=\"line\">    <span class=\"string\">\"nav\"</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">\"sidebar\"</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">\"welcome\"</span>: <span class=\"string\">\"Welcome\"</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// 取字符串</span></span><br><span class=\"line\">polyglot.t(<span class=\"string\">\"hello_name\"</span>, &#123;<span class=\"attr\">name</span>: <span class=\"string\">\"John\"</span>&#125;);</span><br><span class=\"line\">polyglot.t(<span class=\"string\">\"nav.sidebar.welcome\"</span>);</span><br><span class=\"line\">polyglot.locale(<span class=\"string\">\"de\"</span>);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"polyglot/polyglot.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"polyglot/main-polyglot.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"common/jquery.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"common/underscore.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/template\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"main-content\"</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"xml\">   <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">hello</span> %&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">   <span class=\"tag\">&lt;<span class=\"name\">small</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">unread</span> %&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">small</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\"> jQuery(<span class=\"built_in\">document</span>).ready(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">var</span> polyglot = <span class=\"keyword\">new</span> Polyglot(&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">        phrases: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"string\">\"hello\"</span>: <span class=\"string\">\"Hello, %&#123;name&#125;!\"</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"string\">\"unread\"</span>: <span class=\"string\">\"You have %&#123;smart_count&#125; unread message |||| You have %&#123;smart_count&#125; unread messages\"</span></span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;);</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">var</span> main_content_temp = _.template($(<span class=\"string\">'#main-content'</span>).html());</span></span><br><span class=\"line\"><span class=\"javascript\">    $(<span class=\"string\">'body'</span>).prepend(main_content_temp(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        hello: polyglot.t(<span class=\"string\">'hello'</span>, &#123;<span class=\"attr\">name</span>: <span class=\"string\">'John'</span>&#125;),</span></span><br><span class=\"line\"><span class=\"javascript\">        unread: polyglot.t(<span class=\"string\">'unread'</span>, &#123;<span class=\"attr\">smart_count</span>: <span class=\"number\">2</span>&#125;)</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;));</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;);</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-Globalize-js\"><a href=\"#4-Globalize-js\" class=\"headerlink\" title=\"4. Globalize.js\"></a>4. Globalize.js</h3><p><a href=\"https://github.com/globalizejs/globalize\" target=\"_blank\" rel=\"noopener\">globalize.js</a>，实例如下<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">\"welcome\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">id</span>=<span class=\"string\">\"earnings\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">        jQuery(<span class=\"built_in\">document</span>).ready(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// step 1</span></span></span><br><span class=\"line\"><span class=\"undefined\">            Globalize.loadMessages(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"string\">\"en\"</span>: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"string\">'welcome'</span>: <span class=\"string\">'Welcome, &#123;name&#125;!'</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"string\">'welcome_0'</span>: <span class=\"string\">'Welcome, &#123;0&#125;!'</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"string\">'earned'</span>: <span class=\"string\">'Today is &#123;date&#125; and you\\'ve earned &#123;amount&#125;!'</span></span></span><br><span class=\"line\"><span class=\"undefined\">                &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">            &#125;);</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// step 2</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">var</span> globalize = <span class=\"keyword\">new</span> Globalize(<span class=\"string\">\"en\"</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// step 3</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">var</span> welcome_message = globalize.messageFormatter(<span class=\"string\">'welcome'</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">            $(<span class=\"string\">'#welcome'</span>).text( welcome_message(&#123;<span class=\"attr\">name</span>: <span class=\"string\">'John'</span>&#125;) );</span></span><br><span class=\"line\"><span class=\"javascript\">            $(<span class=\"string\">'#earnings'</span>).text(</span></span><br><span class=\"line\"><span class=\"javascript\">                globalize.messageFormatter(<span class=\"string\">'earned'</span>)(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    amount: globalize.formatCurrency(<span class=\"number\">500.5</span>, <span class=\"string\">'USD'</span>),</span></span><br><span class=\"line\"><span class=\"javascript\">                    date: globalize.formatDate( <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(), &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                        datetime: <span class=\"string\">\"medium\"</span></span></span><br><span class=\"line\"><span class=\"undefined\">                    &#125;)</span></span><br><span class=\"line\"><span class=\"undefined\">                &#125;)</span></span><br><span class=\"line\"><span class=\"undefined\">            )</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;);</span></span><br><span class=\"line\"><span class=\"undefined\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"> ...</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"四、总结\"><a href=\"#四、总结\" class=\"headerlink\" title=\"四、总结\"></a>四、总结</h2><p>部分库会提供对一些特定类型字符串(<code>时间日期格式、金钱格式、长度单位等</code>)进行转换的功能，体积就会大一点，，如<code>format.js</code>、<code>globalize.js</code>，小一点的库<code>polyglot.js</code>、<code>jquery.i18n</code>则没有这种功能。根据我们项目的需求，个人还是比较倾向于<code>globalize.js</code>，插件功能比较丰富一点，兼容性比较好，功能插件化，用不到不需要引入，用得到时候可以快速拿过来使用。</p>\n<h5 id=\"需要注意的是：\"><a href=\"#需要注意的是：\" class=\"headerlink\" title=\"需要注意的是：\"></a>需要注意的是：</h5><ol>\n<li>几乎所有的框架使用的字符串模板格式都参考了<a href=\"http://userguide.icu-project.org/formatparse/messages\" target=\"_blank\" rel=\"noopener\">ICU Message</a>语法。</li>\n<li>不管你使用哪种库，都需要你事先准备好翻译好的所有文字信息，框架<code>不会</code>自动帮你翻译。</li>\n</ol>\n<h5 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h5><ol>\n<li><a href=\"https://marcoscaceres.github.io/jsi18n/\" target=\"_blank\" rel=\"noopener\">https://marcoscaceres.github.io/jsi18n/</a></li>\n<li><a href=\"https://phraseapp.com/blog/posts/step-step-guide-javascript-localization/\" target=\"_blank\" rel=\"noopener\">https://phraseapp.com/blog/posts/step-step-guide-javascript-localization/</a></li>\n<li><a href=\"https://tools.ietf.org/html/bcp47\" target=\"_blank\" rel=\"noopener\">https://tools.ietf.org/html/bcp47</a></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"一、Locales\"><a href=\"#一、Locales\" class=\"headerlink\" title=\"一、Locales\"></a>一、Locales</h2><p>我们经常在网上看到的一些支持多语言的网站或者插件 (例如<code>jquery-ui</code>)，设置多语言的都会看到例如<code>en</code>、 <code>en_US</code>、<code>zh_CN</code>等。 这些其实就是描述一种语言具体信息的集合, 用下划线<code>_</code>或者断线<code>-</code>分割, 最前面部分通常是指语言, 比如英语、 中文、日语等。第二部分通常是指国家或者地区，比如美国英语(<code>en-US</code>)、阿根廷英语(<code>es-AR</code>)。一般只用到这两个信息就够了，当然后面还可以写更多描述的信息，具体描述信息请参考 <a href=\"https://tools.ietf.org/html/bcp47\" target=\"_blank\" rel=\"noopener\">BCP 47</a>。<br>虽然全世界语言有很多种，但是大部分网站其实只需要实现其中少数的几种就可以了。</p>\n<h2 id=\"二、判断用户需要什么语言\"><a href=\"#二、判断用户需要什么语言\" class=\"headerlink\" title=\"二、判断用户需要什么语言\"></a>二、判断用户需要什么语言</h2><ul>\n<li>在浏览器让用户明确选择语言的类型，再根据用户选择跳转到相应语言的页面<code>（推荐）</code></li>\n<li>服务器通过http请求头<code>Accept-Language</code>来判断用户语言类型</li>\n<li>客户端通过<code>navigator.language</code>或<code>navigator.browserLanguage</code>来判断用户语言类型</li>\n</ul>\n<h2 id=\"三、框架\"><a href=\"#三、框架\" class=\"headerlink\" title=\"三、框架\"></a>三、框架</h2><h3 id=\"1-format-js-and-window-intl\"><a href=\"#1-format-js-and-window-intl\" class=\"headerlink\" title=\"1. format.js and window.intl\"></a>1. format.js and window.intl</h3><p><a href=\"https://formatjs.io/\" target=\"_blank\" rel=\"noopener\">formatjs</a>，好像是<code>window.intl</code>的polyfill，如果没有<code>window.intl</code>才会加载，使用示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 静态字符串</span></span><br><span class=\"line\"><span class=\"string\">\"Hello everyone\"</span></span><br><span class=\"line\"><span class=\"comment\">// 带参数的字符串</span></span><br><span class=\"line\"><span class=\"string\">\"Hello &#123;who&#125;\"</span></span><br><span class=\"line\"><span class=\"comment\">// 带参数类型的字符串</span></span><br><span class=\"line\"><span class=\"string\">\"I have &#123;numCats, number&#125; cats.\"</span></span><br><span class=\"line\"><span class=\"comment\">// 带参数类型的类型的字符串</span></span><br><span class=\"line\"><span class=\"string\">\"Almost &#123;pctBlack, number, percent&#125; of them are black.\"</span></span><br><span class=\"line\"><span class=\"comment\">// 自定义参数类型</span></span><br><span class=\"line\">formats = &#123;</span><br><span class=\"line\">    number: &#123;</span><br><span class=\"line\">        usd: &#123; <span class=\"attr\">style</span>: <span class=\"string\">'currency'</span>, <span class=\"attr\">currency</span>: <span class=\"string\">'USD'</span> &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"comment\">// 带自定义类型的字符串</span></span><br><span class=\"line\"><span class=\"string\">\"Your total is &#123;total, number, usd&#125;\"</span></span><br><span class=\"line\"><span class=\"comment\">// 有多种情况的字符串(select，根据条件)</span></span><br><span class=\"line\"><span class=\"string\">`&#123;gender, select,</span></span><br><span class=\"line\"><span class=\"string\">    male &#123;He&#125;</span></span><br><span class=\"line\"><span class=\"string\">    female &#123;She&#125;</span></span><br><span class=\"line\"><span class=\"string\">    other &#123;They&#125;</span></span><br><span class=\"line\"><span class=\"string\">&#125; will respond shortly.`</span></span><br><span class=\"line\"><span class=\"comment\">// 有多种情况的字符串(plural，根据数量)</span></span><br><span class=\"line\"><span class=\"string\">`Cart: &#123;itemCount&#125; &#123;itemCount, plural,</span></span><br><span class=\"line\"><span class=\"string\">    one &#123;item&#125;</span></span><br><span class=\"line\"><span class=\"string\">    other &#123;items&#125;</span></span><br><span class=\"line\"><span class=\"string\">&#125;`</span></span><br><span class=\"line\"><span class=\"comment\">// 有多种情况的字符串(selectordinal，根据顺序)</span></span><br><span class=\"line\"><span class=\"string\">`It's my cat's &#123;year, selectordinal,</span></span><br><span class=\"line\"><span class=\"string\">    one &#123;#st&#125;</span></span><br><span class=\"line\"><span class=\"string\">    two &#123;#nd&#125;</span></span><br><span class=\"line\"><span class=\"string\">    few &#123;#rd&#125;</span></span><br><span class=\"line\"><span class=\"string\">    other &#123;#th&#125;</span></span><br><span class=\"line\"><span class=\"string\">&#125; birthday!`</span></span><br></pre></td></tr></table></figure>\n<p>在<code>react</code>中使用:<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123;IntlProvider, FormattedMessage&#125; <span class=\"keyword\">from</span> <span class=\"string\">'react-intl'</span>;</span><br><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\">render() &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">        &lt;IntlProvider locale=<span class=\"string\">\"en\"</span>&gt;</span><br><span class=\"line\">            &lt;p&gt;</span><br><span class=\"line\">                &lt;FormattedMessage</span><br><span class=\"line\">                    id=<span class=\"string\">\"welcome\"</span></span><br><span class=\"line\">                    defaultMessage=&#123;<span class=\"string\">`Hello &#123;name&#125;, you have &#123;unreadCount, number&#125; &#123;unreadCount, plural,</span></span><br><span class=\"line\"><span class=\"string\">                      one &#123;message&#125;</span></span><br><span class=\"line\"><span class=\"string\">                      other &#123;messages&#125;</span></span><br><span class=\"line\"><span class=\"string\">                    &#125;`</span>&#125;</span><br><span class=\"line\">                    values=&#123;&#123;<span class=\"attr\">name</span>: <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">b</span>&gt;</span>&#123;name&#125;<span class=\"tag\">&lt;/<span class=\"name\">b</span>&gt;</span></span>, unreadCount&#125;&#125;</span><br><span class=\"line\">                /&gt;</span><br><span class=\"line\">            &lt;<span class=\"regexp\">/p&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;/</span>IntlProvider&gt;</span><br><span class=\"line\">    );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"2-jQuery-I18n-js\"><a href=\"#2-jQuery-I18n-js\" class=\"headerlink\" title=\"2. jQuery.I18n.js\"></a>2. jQuery.I18n.js</h3><p><a href=\"https://github.com/wikimedia/jquery.i18n\" target=\"_blank\" rel=\"noopener\">jquery.i18n</a>(<code>i18n: internationalization缩写，中间18个字母</code>)，配置文件为基于<code>json</code>格式的文件，大概如下</p>\n<h4 id=\"单个语言的配置文件：\"><a href=\"#单个语言的配置文件：\" class=\"headerlink\" title=\"单个语言的配置文件：\"></a>单个语言的配置文件：</h4><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">\"@metadata\"</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">\"authors\"</span>: [</span><br><span class=\"line\">            <span class=\"string\">\"Me\"</span></span><br><span class=\"line\">        ],</span><br><span class=\"line\">        <span class=\"attr\">\"last-updated\"</span>: <span class=\"string\">\"2016-09-21\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"locale\"</span>: <span class=\"string\">\"en\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"message-documentation\"</span>: <span class=\"string\">\"qqq\"</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">\"appname-title\"</span>: <span class=\"string\">\"Example Application\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"appname-sub-title\"</span>: <span class=\"string\">\"An example application with jquery.i18n\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"多个语言的放在一起的配置文件：\"><a href=\"#多个语言的放在一起的配置文件：\" class=\"headerlink\" title=\"多个语言的放在一起的配置文件：\"></a>多个语言的放在一起的配置文件：</h4><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">\"@metadata\"</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">\"authors\"</span>: [</span><br><span class=\"line\">            <span class=\"string\">\"Me\"</span></span><br><span class=\"line\">        ],</span><br><span class=\"line\">        <span class=\"attr\">\"last-updated\"</span>: <span class=\"string\">\"2016-09-21\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"message-documentation\"</span>: <span class=\"string\">\"qqq\"</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">\"en\"</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">\"appname-title\"</span>: <span class=\"string\">\"Example Application\"</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">\"ru\"</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">\"appname-title\"</span>: <span class=\"string\">\"Ð¢ÐµÑÑ‚Ð¾Ð²Ð¾Ðµ Ð¿Ñ€Ð¸Ð»Ð¾Ð¶ÐµÐ½Ð¸Ðµ\"</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">\"//\"</span>: <span class=\"string\">\"动态加载配置文件（此行为json注释）\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"en_US\"</span>: <span class=\"string\">\"en_US.yml\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"demo：\"><a href=\"#demo：\" class=\"headerlink\" title=\"demo：\"></a>demo：</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 需要指定lang=\"en\" --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span> <span class=\"attr\">dir</span>=<span class=\"string\">\"ltr\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span>...<span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"lang-switch\"</span> <span class=\"attr\">data-locale</span>=<span class=\"string\">\"en\"</span>&gt;</span>English<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> |</span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"lang-switch\"</span> <span class=\"attr\">data-locale</span>=<span class=\"string\">\"ru\"</span>&gt;</span>Русский<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">data-i18n</span>=<span class=\"string\">\"welcome\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">id</span>=<span class=\"string\">\"messages\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">            jQuery(<span class=\"built_in\">document</span>).ready(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"keyword\">var</span> update_texts = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    $(<span class=\"string\">'body'</span>).i18n();</span></span><br><span class=\"line\"><span class=\"undefined\">                &#125;;</span></span><br><span class=\"line\"><span class=\"javascript\">                $.i18n().load(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"string\">'en'</span>: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"string\">'welcome'</span>: <span class=\"string\">'Welcome!'</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"string\">'message_from'</span>: <span class=\"string\">'$1 has send you $2 &#123;&#123;plural:$2|message|messages&#125;&#125;. &#123;&#123;gender:$3|He|She&#125;&#125; is waiting for your response!'</span></span></span><br><span class=\"line\"><span class=\"undefined\">                    &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"string\">'ru'</span>: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"string\">'welcome'</span>: <span class=\"string\">'Ð”Ð¾Ð±Ñ€Ð¾ Ð¿Ð¾Ð¶Ð°Ð»Ð¾Ð²Ð°Ñ‚ÑŒ!'</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                        <span class=\"string\">'message_from'</span>: <span class=\"string\">'$1 &#123;&#123;gender:$3|Ð¾Ñ‚Ð¿Ñ€Ð°Ð²Ð¸Ð»|Ð¾Ñ‚Ð¿Ñ€Ð°Ð²Ð¸Ð»Ð°&#125;&#125; Ð²Ð°Ð¼ $2 &#123;&#123;plural:$2|ÑÐ¾Ð¾Ð±Ñ‰ÐµÐ½Ð¸Ðµ|ÑÐ¾Ð¾Ð±Ñ‰ÐµÐ½Ð¸Ð¹|ÑÐ¾Ð¾Ð±Ñ‰ÐµÐ½Ð¸Ñ&#125;&#125;. &#123;&#123;gender:$3|ÐžÐ½|ÐžÐ½Ð°&#125;&#125; Ð¶Ð´Ñ‘Ñ‚ Ð¾Ñ‚Ð²ÐµÑ‚Ð°!'</span></span></span><br><span class=\"line\"><span class=\"undefined\">                    &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">                &#125;);</span></span><br><span class=\"line\"><span class=\"undefined\">                update_texts();</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"comment\">// 点击切换语言</span></span></span><br><span class=\"line\"><span class=\"javascript\">                $(<span class=\"string\">'.lang-switch'</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">                    e.preventDefault();</span></span><br><span class=\"line\"><span class=\"javascript\">                    $.i18n().locale = $(<span class=\"keyword\">this</span>).data(<span class=\"string\">'locale'</span>);</span></span><br><span class=\"line\"><span class=\"undefined\">                    update_texts();</span></span><br><span class=\"line\"><span class=\"undefined\">                &#125;);</span></span><br><span class=\"line\"><span class=\"undefined\">            &#125;);</span></span><br><span class=\"line\"><span class=\"undefined\">        </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"3-Polyglot-js\"><a href=\"#3-Polyglot-js\" class=\"headerlink\" title=\"3. Polyglot.js\"></a>3. Polyglot.js</h3><p><a href=\"https://github.com/airbnb/polyglot.js\" target=\"_blank\" rel=\"noopener\">polyglot</a>，体积小，用法如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 设置所有的字符串</span></span><br><span class=\"line\">polyglot.extend(&#123;</span><br><span class=\"line\">    <span class=\"comment\">// pluralization</span></span><br><span class=\"line\">    <span class=\"string\">\"num_cars\"</span>: <span class=\"string\">\"%&#123;smart_count&#125; car |||| %&#123;smart_count&#125; cars\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"hello\"</span>: <span class=\"string\">\"Hello\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"hello_name\"</span>: <span class=\"string\">\"Hello, %&#123;name&#125;.\"</span></span><br><span class=\"line\">    <span class=\"string\">\"nav\"</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">\"sidebar\"</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">\"welcome\"</span>: <span class=\"string\">\"Welcome\"</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// 取字符串</span></span><br><span class=\"line\">polyglot.t(<span class=\"string\">\"hello_name\"</span>, &#123;<span class=\"attr\">name</span>: <span class=\"string\">\"John\"</span>&#125;);</span><br><span class=\"line\">polyglot.t(<span class=\"string\">\"nav.sidebar.welcome\"</span>);</span><br><span class=\"line\">polyglot.locale(<span class=\"string\">\"de\"</span>);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"polyglot/polyglot.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"polyglot/main-polyglot.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"common/jquery.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"common/underscore.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/template\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"main-content\"</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"xml\">   <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">hello</span> %&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">   <span class=\"tag\">&lt;<span class=\"name\">small</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">unread</span> %&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">small</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\"> jQuery(<span class=\"built_in\">document</span>).ready(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">var</span> polyglot = <span class=\"keyword\">new</span> Polyglot(&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">        phrases: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"string\">\"hello\"</span>: <span class=\"string\">\"Hello, %&#123;name&#125;!\"</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"string\">\"unread\"</span>: <span class=\"string\">\"You have %&#123;smart_count&#125; unread message |||| You have %&#123;smart_count&#125; unread messages\"</span></span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;);</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">var</span> main_content_temp = _.template($(<span class=\"string\">'#main-content'</span>).html());</span></span><br><span class=\"line\"><span class=\"javascript\">    $(<span class=\"string\">'body'</span>).prepend(main_content_temp(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        hello: polyglot.t(<span class=\"string\">'hello'</span>, &#123;<span class=\"attr\">name</span>: <span class=\"string\">'John'</span>&#125;),</span></span><br><span class=\"line\"><span class=\"javascript\">        unread: polyglot.t(<span class=\"string\">'unread'</span>, &#123;<span class=\"attr\">smart_count</span>: <span class=\"number\">2</span>&#125;)</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;));</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;);</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-Globalize-js\"><a href=\"#4-Globalize-js\" class=\"headerlink\" title=\"4. Globalize.js\"></a>4. Globalize.js</h3><p><a href=\"https://github.com/globalizejs/globalize\" target=\"_blank\" rel=\"noopener\">globalize.js</a>，实例如下<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">\"welcome\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">id</span>=<span class=\"string\">\"earnings\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">        jQuery(<span class=\"built_in\">document</span>).ready(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// step 1</span></span></span><br><span class=\"line\"><span class=\"undefined\">            Globalize.loadMessages(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                <span class=\"string\">\"en\"</span>: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"string\">'welcome'</span>: <span class=\"string\">'Welcome, &#123;name&#125;!'</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"string\">'welcome_0'</span>: <span class=\"string\">'Welcome, &#123;0&#125;!'</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"string\">'earned'</span>: <span class=\"string\">'Today is &#123;date&#125; and you\\'ve earned &#123;amount&#125;!'</span></span></span><br><span class=\"line\"><span class=\"undefined\">                &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">            &#125;);</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// step 2</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">var</span> globalize = <span class=\"keyword\">new</span> Globalize(<span class=\"string\">\"en\"</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">// step 3</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">var</span> welcome_message = globalize.messageFormatter(<span class=\"string\">'welcome'</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">            $(<span class=\"string\">'#welcome'</span>).text( welcome_message(&#123;<span class=\"attr\">name</span>: <span class=\"string\">'John'</span>&#125;) );</span></span><br><span class=\"line\"><span class=\"javascript\">            $(<span class=\"string\">'#earnings'</span>).text(</span></span><br><span class=\"line\"><span class=\"javascript\">                globalize.messageFormatter(<span class=\"string\">'earned'</span>)(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                    amount: globalize.formatCurrency(<span class=\"number\">500.5</span>, <span class=\"string\">'USD'</span>),</span></span><br><span class=\"line\"><span class=\"javascript\">                    date: globalize.formatDate( <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(), &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                        datetime: <span class=\"string\">\"medium\"</span></span></span><br><span class=\"line\"><span class=\"undefined\">                    &#125;)</span></span><br><span class=\"line\"><span class=\"undefined\">                &#125;)</span></span><br><span class=\"line\"><span class=\"undefined\">            )</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;);</span></span><br><span class=\"line\"><span class=\"undefined\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"> ...</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"四、总结\"><a href=\"#四、总结\" class=\"headerlink\" title=\"四、总结\"></a>四、总结</h2><p>部分库会提供对一些特定类型字符串(<code>时间日期格式、金钱格式、长度单位等</code>)进行转换的功能，体积就会大一点，，如<code>format.js</code>、<code>globalize.js</code>，小一点的库<code>polyglot.js</code>、<code>jquery.i18n</code>则没有这种功能。根据我们项目的需求，个人还是比较倾向于<code>globalize.js</code>，插件功能比较丰富一点，兼容性比较好，功能插件化，用不到不需要引入，用得到时候可以快速拿过来使用。</p>\n<h5 id=\"需要注意的是：\"><a href=\"#需要注意的是：\" class=\"headerlink\" title=\"需要注意的是：\"></a>需要注意的是：</h5><ol>\n<li>几乎所有的框架使用的字符串模板格式都参考了<a href=\"http://userguide.icu-project.org/formatparse/messages\" target=\"_blank\" rel=\"noopener\">ICU Message</a>语法。</li>\n<li>不管你使用哪种库，都需要你事先准备好翻译好的所有文字信息，框架<code>不会</code>自动帮你翻译。</li>\n</ol>\n<h5 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h5><ol>\n<li><a href=\"https://marcoscaceres.github.io/jsi18n/\" target=\"_blank\" rel=\"noopener\">https://marcoscaceres.github.io/jsi18n/</a></li>\n<li><a href=\"https://phraseapp.com/blog/posts/step-step-guide-javascript-localization/\" target=\"_blank\" rel=\"noopener\">https://phraseapp.com/blog/posts/step-step-guide-javascript-localization/</a></li>\n<li><a href=\"https://tools.ietf.org/html/bcp47\" target=\"_blank\" rel=\"noopener\">https://tools.ietf.org/html/bcp47</a></li>\n</ol>\n"},{"title":"测试你的前端代码一(介绍)","date":"2019-05-14T01:32:15.000Z","_content":"\n前段时间，有一个刚入坑前端的妹子打电话问我：如何测试她的项目代码？我告诉她，测试是一个非常复杂而庞大的话题，在电话里说不清楚。我答应她帮她在网上找点学习资料。\n\n然后我就坐在电脑面前开始goggle。我找了非常之多的相关的文章，我挑了一篇给她，但是对这篇文章的深度和讨论的东西不是非常的满意。我几乎找不到一篇全面的，适合新手入门的前端测试知识的文章。也几乎找不到一篇同时兼顾理论和实践，完全为测试而写的文章。\n\n所以我决定写一篇。这篇是我这个系列的第一部分。一共有以下几个部分：\n\n- 介绍\n- [单元测试](https://hackernoon.com/testing-your-frontend-code-part-ii-unit-testing-1d05f8d50859#.xf5q3crth)\n- [E2E测试（end-to-end测试）](https://hackernoon.com/testing-your-frontend-code-part-iii-e2e-testing-e9261b56475)\n- [集成测试（integration testing）](https://hackernoon.com/testing-your-frontend-code-part-iv-integration-testing-f1f4609dc4d9)\n- [可视化测试（visual testing）](https://medium.com/@giltayar/testing-your-frontend-code-part-v-visual-testing-935864cfb5c7)\n\n为了这个系列的内容，我写了一个简单的应用——[计算器](http://frontend-testing.surge.sh/)——用来当做测试的例子。[源码](https://github.com/giltayar/frontend-testing)。\n\n## 什么是测试？\n\n测试，我认为就是写代码。然后用这些代码来检查你写的app代码（生产环境代码）运行结果是否符合预期。有些人喜欢把这个概念等同于TDD（测试驱动开发或者测试驱动架构），但其实[TDD](https://en.wikipedia.org/wiki/Test-driven_development)只是测试方法的一种具体实践，在这个实践方案中，测试用例会先于app代码的编写，并且后续都围绕测试用例去设计和开发程序。\n\n坦白说，我认为测试用例先写或者后写其实都无足轻重，它们最终的目的都是让码农们可以有信心说一句：我的程序可以提测了。由于我所崇敬的几位大神在觉得测试是程序开发中必要而且非常重要的东西，这也是我写这篇文章的另一个原因。\n\nTDD和其他测试的区别，有兴趣的请移步[这里](https://martinfowler.com/articles/is-tdd-dead/)，但是我建议观看完本系列文章之后再去阅读。\n\n## 为什么要测试？\n\n其实我并没有打算去论证为什么要测试，如果你觉得你不需要测试的话，那就别测试。但是你最好有心里准备——你可能要对同一个功能和代码，一遍又一遍的人工测试。这些你记得昨天刚修复过得的小bug会一次又一次的出现以至于你夜不能寐。发布这样的代码到生产环境，将会是一场惊心动魄的冒险之旅。但是，我从来都不喜欢强迫观点——到底要不要测试取决于你自己怎么看。\n\n## 测试的分类\n\n有一个一直困扰着大部分人（特别是对于那些刚接触前端的萌新来说）测试方法的种类太多了，一头雾水，如果你稍微研究过这个领域，你肯定听说过下面这些词语：unit tests（单元测试）, acceptance tests（验收测试）, integration tests（集成测试）, end to end tests（端对端测试）, component tests（组件测试）, and service tests（服务测试）.\n\n更惨的是，几个人在对这些概念侃侃而谈的时候，他们的理解跟别人说的完全不一样。\n\n其实对于我而言，概念并不是重点，因为没有一个百分之百准确的概念来涵盖这些所有的种类，但是所有的测试种类都居于这两者中间：单元测试和端对端测试（下文简称E2E测试）。\n\n## 测试的分类的范围划分\n\n拿最简单的单元测试来说。单元测试就是指按照一个个“单元”来编写测试代码的方法。那么什么是一个“单元”呢？其实要看你用的编程语言。它有可能是一个函数(function)，一个模块(module)，一个包(package)，一个类(class)，甚至一个对象(object)（比如像Javascript和Scala这类语言）。在Javascript中，通常是指一个类或者一个模块（拿npm或者commomjs规范来说，一个“模块”就是一个文件的代码）。\n\n最重要的事情是单元之间是分开测试的。这非常适合用来测试一些算法，函数（比如一个计算字符串长度的函数），和包含一系列验证函数的类。\n\n这类代码用单元测试来做非常容易，因为它们之间不存在依赖性。但是如果我要测试的单元依赖于其他单元呢？这个时候有两种方法：两个单元放一块测试或者模拟(mock)另一个模块。\n\n思考一下，如果我们两个单元一块测试，那它还是一个“单元”测试吗？这里就是第一个容易产生歧义的地方，较真的人可能会说这不是单元测试。但是要我来说，我不管什么单元不单元的，叫什么不重要，你可以叫它集成测试，两个单元的测试，或者其他你喜欢的名字都可以，但这些都不是我讨论的重点。\n\n上面说到模拟(mock)另一个模块，可能很多人脑海中没有一个具体的场景，我们来举一个列子，请看下面代码：\n\n```js\nexports.writeSumToFile = (a, b, fileSumWriter) => {\n  const sum = a + b\n\n  fileSumWriter(sum)\n}\n```\n\n这个单元有一个名为`writeSumToFile`的函数，它接受两个数字和一个函数作为参数，然后计算出结果并写到一个文件里面。\n\n但是注意，函数本身不会去做`write`操作，在里面又使用了另一个单元的方法`fileSumWriter`来执行这个操作。\n\n为了测试这个单元，我们可以传入真正的`fileSumWriter`函数，或者，我们可以传入一个不具有写操作的函数去模拟一下就够了。\n\n当我们传一个模拟的数据到一个函数中的时候，这个时候它是一个真正意义上的单元测试。但是如果我们把这两个单元放一起测试，许多人就不那么认为了。\n\n大家怎么命名这都不是重点。\n\n现在，我们为我们的代码写完了单元测试，接下来就是E2E测试(app级别测试)了。E2E测试所有一切可以测试的东西，以确保所有程序在生产环境都保持着一致性。\n\n这就是所有测试种类的两个极端。在两个极端中间就渐变式的分布着各种测试种类。在两中极端中，越来越多的代码被测试，越来越少的代码被模拟。\n\n有些人喜欢把介于这两者中间的测试叫做“集成测试”，但是在TDD的开发者眼里，集成测试又是另一种完全不同概念，这个我们以后也会讨论到。我们暂且先把这种比单元测试测得多，但是却比E2E测试少的测试叫做“集成测试”。\n\n那我们怎么在这两者之间去做取舍呢？很多人都认为说有一个金字塔递减的测试原则：多一些单元测试，少一些集成测试，尽量别有E2E测试。这个问题我们留到这系列文章的最后进行讨论，因为我们首先要先了解了什么是单元测试、集成测试和E2E测试，这些我们都会在这个系列中一一探讨。\n\n接下来的几篇文章中我们将依次讨论单元测试，集成测试和E2E测试，最后我们还将讨论开发者在测试中的一些常见问题——到底要写多少测试才算合格和测试中的一些注意事项。\n\n为了更好的阐述我的观点，我写了一个非常简单的应用——[计算器（Calculator）](http://frontend-testing.surge.sh/)——我将用它来展示如何开展测试。[源码地址](https://github.com/giltayar/frontend-testing)。注意现在它还没有完成它的测试，但是我们会在接下来的文章中逐步完善这个应用的测试。\n\n讨论单元测试的部分，我将会在下一周发表。\n\n## 可视化测试\n\n有一个叫做Applitools的公司做的事情很有意思，他们生产一些工具帮助我们把前端代码的测试可视化，自动化的检查当CSS，JS或者HTML变化的时候你的组件仍旧可以按预期一样运行，尽量别出现一些意外的事情。他们刚刚发布一个可以可视化`React Storybook`里所有测试的工具，而且不需要编写任何额外的代码。\n\n这款工具确实很不错，如果你也在使用react，并且有兴趣，可以免费试试：[传送门](http://testautomation.applitools.com/post/170337956797/visually-testing-react-components-using-the-eyes?utm_source=SOF&utm_medium=GT)。\n\n原文地址：https://medium.com/@giltayar/testing-your-frontend-code-part-i-introduction-7e307eac4446\n","source":"_posts/测试你的前端代码一-介绍.md","raw":"---\ntitle: 测试你的前端代码一(介绍)\ndate: 2019-05-14 09:32:15\ncategories: Javascript\ntags:\n    - Javascript\n    - Testing\n---\n\n前段时间，有一个刚入坑前端的妹子打电话问我：如何测试她的项目代码？我告诉她，测试是一个非常复杂而庞大的话题，在电话里说不清楚。我答应她帮她在网上找点学习资料。\n\n然后我就坐在电脑面前开始goggle。我找了非常之多的相关的文章，我挑了一篇给她，但是对这篇文章的深度和讨论的东西不是非常的满意。我几乎找不到一篇全面的，适合新手入门的前端测试知识的文章。也几乎找不到一篇同时兼顾理论和实践，完全为测试而写的文章。\n\n所以我决定写一篇。这篇是我这个系列的第一部分。一共有以下几个部分：\n\n- 介绍\n- [单元测试](https://hackernoon.com/testing-your-frontend-code-part-ii-unit-testing-1d05f8d50859#.xf5q3crth)\n- [E2E测试（end-to-end测试）](https://hackernoon.com/testing-your-frontend-code-part-iii-e2e-testing-e9261b56475)\n- [集成测试（integration testing）](https://hackernoon.com/testing-your-frontend-code-part-iv-integration-testing-f1f4609dc4d9)\n- [可视化测试（visual testing）](https://medium.com/@giltayar/testing-your-frontend-code-part-v-visual-testing-935864cfb5c7)\n\n为了这个系列的内容，我写了一个简单的应用——[计算器](http://frontend-testing.surge.sh/)——用来当做测试的例子。[源码](https://github.com/giltayar/frontend-testing)。\n\n## 什么是测试？\n\n测试，我认为就是写代码。然后用这些代码来检查你写的app代码（生产环境代码）运行结果是否符合预期。有些人喜欢把这个概念等同于TDD（测试驱动开发或者测试驱动架构），但其实[TDD](https://en.wikipedia.org/wiki/Test-driven_development)只是测试方法的一种具体实践，在这个实践方案中，测试用例会先于app代码的编写，并且后续都围绕测试用例去设计和开发程序。\n\n坦白说，我认为测试用例先写或者后写其实都无足轻重，它们最终的目的都是让码农们可以有信心说一句：我的程序可以提测了。由于我所崇敬的几位大神在觉得测试是程序开发中必要而且非常重要的东西，这也是我写这篇文章的另一个原因。\n\nTDD和其他测试的区别，有兴趣的请移步[这里](https://martinfowler.com/articles/is-tdd-dead/)，但是我建议观看完本系列文章之后再去阅读。\n\n## 为什么要测试？\n\n其实我并没有打算去论证为什么要测试，如果你觉得你不需要测试的话，那就别测试。但是你最好有心里准备——你可能要对同一个功能和代码，一遍又一遍的人工测试。这些你记得昨天刚修复过得的小bug会一次又一次的出现以至于你夜不能寐。发布这样的代码到生产环境，将会是一场惊心动魄的冒险之旅。但是，我从来都不喜欢强迫观点——到底要不要测试取决于你自己怎么看。\n\n## 测试的分类\n\n有一个一直困扰着大部分人（特别是对于那些刚接触前端的萌新来说）测试方法的种类太多了，一头雾水，如果你稍微研究过这个领域，你肯定听说过下面这些词语：unit tests（单元测试）, acceptance tests（验收测试）, integration tests（集成测试）, end to end tests（端对端测试）, component tests（组件测试）, and service tests（服务测试）.\n\n更惨的是，几个人在对这些概念侃侃而谈的时候，他们的理解跟别人说的完全不一样。\n\n其实对于我而言，概念并不是重点，因为没有一个百分之百准确的概念来涵盖这些所有的种类，但是所有的测试种类都居于这两者中间：单元测试和端对端测试（下文简称E2E测试）。\n\n## 测试的分类的范围划分\n\n拿最简单的单元测试来说。单元测试就是指按照一个个“单元”来编写测试代码的方法。那么什么是一个“单元”呢？其实要看你用的编程语言。它有可能是一个函数(function)，一个模块(module)，一个包(package)，一个类(class)，甚至一个对象(object)（比如像Javascript和Scala这类语言）。在Javascript中，通常是指一个类或者一个模块（拿npm或者commomjs规范来说，一个“模块”就是一个文件的代码）。\n\n最重要的事情是单元之间是分开测试的。这非常适合用来测试一些算法，函数（比如一个计算字符串长度的函数），和包含一系列验证函数的类。\n\n这类代码用单元测试来做非常容易，因为它们之间不存在依赖性。但是如果我要测试的单元依赖于其他单元呢？这个时候有两种方法：两个单元放一块测试或者模拟(mock)另一个模块。\n\n思考一下，如果我们两个单元一块测试，那它还是一个“单元”测试吗？这里就是第一个容易产生歧义的地方，较真的人可能会说这不是单元测试。但是要我来说，我不管什么单元不单元的，叫什么不重要，你可以叫它集成测试，两个单元的测试，或者其他你喜欢的名字都可以，但这些都不是我讨论的重点。\n\n上面说到模拟(mock)另一个模块，可能很多人脑海中没有一个具体的场景，我们来举一个列子，请看下面代码：\n\n```js\nexports.writeSumToFile = (a, b, fileSumWriter) => {\n  const sum = a + b\n\n  fileSumWriter(sum)\n}\n```\n\n这个单元有一个名为`writeSumToFile`的函数，它接受两个数字和一个函数作为参数，然后计算出结果并写到一个文件里面。\n\n但是注意，函数本身不会去做`write`操作，在里面又使用了另一个单元的方法`fileSumWriter`来执行这个操作。\n\n为了测试这个单元，我们可以传入真正的`fileSumWriter`函数，或者，我们可以传入一个不具有写操作的函数去模拟一下就够了。\n\n当我们传一个模拟的数据到一个函数中的时候，这个时候它是一个真正意义上的单元测试。但是如果我们把这两个单元放一起测试，许多人就不那么认为了。\n\n大家怎么命名这都不是重点。\n\n现在，我们为我们的代码写完了单元测试，接下来就是E2E测试(app级别测试)了。E2E测试所有一切可以测试的东西，以确保所有程序在生产环境都保持着一致性。\n\n这就是所有测试种类的两个极端。在两个极端中间就渐变式的分布着各种测试种类。在两中极端中，越来越多的代码被测试，越来越少的代码被模拟。\n\n有些人喜欢把介于这两者中间的测试叫做“集成测试”，但是在TDD的开发者眼里，集成测试又是另一种完全不同概念，这个我们以后也会讨论到。我们暂且先把这种比单元测试测得多，但是却比E2E测试少的测试叫做“集成测试”。\n\n那我们怎么在这两者之间去做取舍呢？很多人都认为说有一个金字塔递减的测试原则：多一些单元测试，少一些集成测试，尽量别有E2E测试。这个问题我们留到这系列文章的最后进行讨论，因为我们首先要先了解了什么是单元测试、集成测试和E2E测试，这些我们都会在这个系列中一一探讨。\n\n接下来的几篇文章中我们将依次讨论单元测试，集成测试和E2E测试，最后我们还将讨论开发者在测试中的一些常见问题——到底要写多少测试才算合格和测试中的一些注意事项。\n\n为了更好的阐述我的观点，我写了一个非常简单的应用——[计算器（Calculator）](http://frontend-testing.surge.sh/)——我将用它来展示如何开展测试。[源码地址](https://github.com/giltayar/frontend-testing)。注意现在它还没有完成它的测试，但是我们会在接下来的文章中逐步完善这个应用的测试。\n\n讨论单元测试的部分，我将会在下一周发表。\n\n## 可视化测试\n\n有一个叫做Applitools的公司做的事情很有意思，他们生产一些工具帮助我们把前端代码的测试可视化，自动化的检查当CSS，JS或者HTML变化的时候你的组件仍旧可以按预期一样运行，尽量别出现一些意外的事情。他们刚刚发布一个可以可视化`React Storybook`里所有测试的工具，而且不需要编写任何额外的代码。\n\n这款工具确实很不错，如果你也在使用react，并且有兴趣，可以免费试试：[传送门](http://testautomation.applitools.com/post/170337956797/visually-testing-react-components-using-the-eyes?utm_source=SOF&utm_medium=GT)。\n\n原文地址：https://medium.com/@giltayar/testing-your-frontend-code-part-i-introduction-7e307eac4446\n","slug":"测试你的前端代码一-介绍","published":1,"updated":"2019-05-20T03:06:21.767Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvyuyqg7001ky9pjx5efvcct","content":"<p>前段时间，有一个刚入坑前端的妹子打电话问我：如何测试她的项目代码？我告诉她，测试是一个非常复杂而庞大的话题，在电话里说不清楚。我答应她帮她在网上找点学习资料。</p>\n<p>然后我就坐在电脑面前开始goggle。我找了非常之多的相关的文章，我挑了一篇给她，但是对这篇文章的深度和讨论的东西不是非常的满意。我几乎找不到一篇全面的，适合新手入门的前端测试知识的文章。也几乎找不到一篇同时兼顾理论和实践，完全为测试而写的文章。</p>\n<p>所以我决定写一篇。这篇是我这个系列的第一部分。一共有以下几个部分：</p>\n<ul>\n<li>介绍</li>\n<li><a href=\"https://hackernoon.com/testing-your-frontend-code-part-ii-unit-testing-1d05f8d50859#.xf5q3crth\" target=\"_blank\" rel=\"noopener\">单元测试</a></li>\n<li><a href=\"https://hackernoon.com/testing-your-frontend-code-part-iii-e2e-testing-e9261b56475\" target=\"_blank\" rel=\"noopener\">E2E测试（end-to-end测试）</a></li>\n<li><a href=\"https://hackernoon.com/testing-your-frontend-code-part-iv-integration-testing-f1f4609dc4d9\" target=\"_blank\" rel=\"noopener\">集成测试（integration testing）</a></li>\n<li><a href=\"https://medium.com/@giltayar/testing-your-frontend-code-part-v-visual-testing-935864cfb5c7\" target=\"_blank\" rel=\"noopener\">可视化测试（visual testing）</a></li>\n</ul>\n<p>为了这个系列的内容，我写了一个简单的应用——<a href=\"http://frontend-testing.surge.sh/\" target=\"_blank\" rel=\"noopener\">计算器</a>——用来当做测试的例子。<a href=\"https://github.com/giltayar/frontend-testing\" target=\"_blank\" rel=\"noopener\">源码</a>。</p>\n<h2 id=\"什么是测试？\"><a href=\"#什么是测试？\" class=\"headerlink\" title=\"什么是测试？\"></a>什么是测试？</h2><p>测试，我认为就是写代码。然后用这些代码来检查你写的app代码（生产环境代码）运行结果是否符合预期。有些人喜欢把这个概念等同于TDD（测试驱动开发或者测试驱动架构），但其实<a href=\"https://en.wikipedia.org/wiki/Test-driven_development\" target=\"_blank\" rel=\"noopener\">TDD</a>只是测试方法的一种具体实践，在这个实践方案中，测试用例会先于app代码的编写，并且后续都围绕测试用例去设计和开发程序。</p>\n<p>坦白说，我认为测试用例先写或者后写其实都无足轻重，它们最终的目的都是让码农们可以有信心说一句：我的程序可以提测了。由于我所崇敬的几位大神在觉得测试是程序开发中必要而且非常重要的东西，这也是我写这篇文章的另一个原因。</p>\n<p>TDD和其他测试的区别，有兴趣的请移步<a href=\"https://martinfowler.com/articles/is-tdd-dead/\" target=\"_blank\" rel=\"noopener\">这里</a>，但是我建议观看完本系列文章之后再去阅读。</p>\n<h2 id=\"为什么要测试？\"><a href=\"#为什么要测试？\" class=\"headerlink\" title=\"为什么要测试？\"></a>为什么要测试？</h2><p>其实我并没有打算去论证为什么要测试，如果你觉得你不需要测试的话，那就别测试。但是你最好有心里准备——你可能要对同一个功能和代码，一遍又一遍的人工测试。这些你记得昨天刚修复过得的小bug会一次又一次的出现以至于你夜不能寐。发布这样的代码到生产环境，将会是一场惊心动魄的冒险之旅。但是，我从来都不喜欢强迫观点——到底要不要测试取决于你自己怎么看。</p>\n<h2 id=\"测试的分类\"><a href=\"#测试的分类\" class=\"headerlink\" title=\"测试的分类\"></a>测试的分类</h2><p>有一个一直困扰着大部分人（特别是对于那些刚接触前端的萌新来说）测试方法的种类太多了，一头雾水，如果你稍微研究过这个领域，你肯定听说过下面这些词语：unit tests（单元测试）, acceptance tests（验收测试）, integration tests（集成测试）, end to end tests（端对端测试）, component tests（组件测试）, and service tests（服务测试）.</p>\n<p>更惨的是，几个人在对这些概念侃侃而谈的时候，他们的理解跟别人说的完全不一样。</p>\n<p>其实对于我而言，概念并不是重点，因为没有一个百分之百准确的概念来涵盖这些所有的种类，但是所有的测试种类都居于这两者中间：单元测试和端对端测试（下文简称E2E测试）。</p>\n<h2 id=\"测试的分类的范围划分\"><a href=\"#测试的分类的范围划分\" class=\"headerlink\" title=\"测试的分类的范围划分\"></a>测试的分类的范围划分</h2><p>拿最简单的单元测试来说。单元测试就是指按照一个个“单元”来编写测试代码的方法。那么什么是一个“单元”呢？其实要看你用的编程语言。它有可能是一个函数(function)，一个模块(module)，一个包(package)，一个类(class)，甚至一个对象(object)（比如像Javascript和Scala这类语言）。在Javascript中，通常是指一个类或者一个模块（拿npm或者commomjs规范来说，一个“模块”就是一个文件的代码）。</p>\n<p>最重要的事情是单元之间是分开测试的。这非常适合用来测试一些算法，函数（比如一个计算字符串长度的函数），和包含一系列验证函数的类。</p>\n<p>这类代码用单元测试来做非常容易，因为它们之间不存在依赖性。但是如果我要测试的单元依赖于其他单元呢？这个时候有两种方法：两个单元放一块测试或者模拟(mock)另一个模块。</p>\n<p>思考一下，如果我们两个单元一块测试，那它还是一个“单元”测试吗？这里就是第一个容易产生歧义的地方，较真的人可能会说这不是单元测试。但是要我来说，我不管什么单元不单元的，叫什么不重要，你可以叫它集成测试，两个单元的测试，或者其他你喜欢的名字都可以，但这些都不是我讨论的重点。</p>\n<p>上面说到模拟(mock)另一个模块，可能很多人脑海中没有一个具体的场景，我们来举一个列子，请看下面代码：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exports.writeSumToFile = <span class=\"function\">(<span class=\"params\">a, b, fileSumWriter</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> sum = a + b</span><br><span class=\"line\"></span><br><span class=\"line\">  fileSumWriter(sum)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这个单元有一个名为<code>writeSumToFile</code>的函数，它接受两个数字和一个函数作为参数，然后计算出结果并写到一个文件里面。</p>\n<p>但是注意，函数本身不会去做<code>write</code>操作，在里面又使用了另一个单元的方法<code>fileSumWriter</code>来执行这个操作。</p>\n<p>为了测试这个单元，我们可以传入真正的<code>fileSumWriter</code>函数，或者，我们可以传入一个不具有写操作的函数去模拟一下就够了。</p>\n<p>当我们传一个模拟的数据到一个函数中的时候，这个时候它是一个真正意义上的单元测试。但是如果我们把这两个单元放一起测试，许多人就不那么认为了。</p>\n<p>大家怎么命名这都不是重点。</p>\n<p>现在，我们为我们的代码写完了单元测试，接下来就是E2E测试(app级别测试)了。E2E测试所有一切可以测试的东西，以确保所有程序在生产环境都保持着一致性。</p>\n<p>这就是所有测试种类的两个极端。在两个极端中间就渐变式的分布着各种测试种类。在两中极端中，越来越多的代码被测试，越来越少的代码被模拟。</p>\n<p>有些人喜欢把介于这两者中间的测试叫做“集成测试”，但是在TDD的开发者眼里，集成测试又是另一种完全不同概念，这个我们以后也会讨论到。我们暂且先把这种比单元测试测得多，但是却比E2E测试少的测试叫做“集成测试”。</p>\n<p>那我们怎么在这两者之间去做取舍呢？很多人都认为说有一个金字塔递减的测试原则：多一些单元测试，少一些集成测试，尽量别有E2E测试。这个问题我们留到这系列文章的最后进行讨论，因为我们首先要先了解了什么是单元测试、集成测试和E2E测试，这些我们都会在这个系列中一一探讨。</p>\n<p>接下来的几篇文章中我们将依次讨论单元测试，集成测试和E2E测试，最后我们还将讨论开发者在测试中的一些常见问题——到底要写多少测试才算合格和测试中的一些注意事项。</p>\n<p>为了更好的阐述我的观点，我写了一个非常简单的应用——<a href=\"http://frontend-testing.surge.sh/\" target=\"_blank\" rel=\"noopener\">计算器（Calculator）</a>——我将用它来展示如何开展测试。<a href=\"https://github.com/giltayar/frontend-testing\" target=\"_blank\" rel=\"noopener\">源码地址</a>。注意现在它还没有完成它的测试，但是我们会在接下来的文章中逐步完善这个应用的测试。</p>\n<p>讨论单元测试的部分，我将会在下一周发表。</p>\n<h2 id=\"可视化测试\"><a href=\"#可视化测试\" class=\"headerlink\" title=\"可视化测试\"></a>可视化测试</h2><p>有一个叫做Applitools的公司做的事情很有意思，他们生产一些工具帮助我们把前端代码的测试可视化，自动化的检查当CSS，JS或者HTML变化的时候你的组件仍旧可以按预期一样运行，尽量别出现一些意外的事情。他们刚刚发布一个可以可视化<code>React Storybook</code>里所有测试的工具，而且不需要编写任何额外的代码。</p>\n<p>这款工具确实很不错，如果你也在使用react，并且有兴趣，可以免费试试：<a href=\"http://testautomation.applitools.com/post/170337956797/visually-testing-react-components-using-the-eyes?utm_source=SOF&amp;utm_medium=GT\" target=\"_blank\" rel=\"noopener\">传送门</a>。</p>\n<p>原文地址：<a href=\"https://medium.com/@giltayar/testing-your-frontend-code-part-i-introduction-7e307eac4446\" target=\"_blank\" rel=\"noopener\">https://medium.com/@giltayar/testing-your-frontend-code-part-i-introduction-7e307eac4446</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>前段时间，有一个刚入坑前端的妹子打电话问我：如何测试她的项目代码？我告诉她，测试是一个非常复杂而庞大的话题，在电话里说不清楚。我答应她帮她在网上找点学习资料。</p>\n<p>然后我就坐在电脑面前开始goggle。我找了非常之多的相关的文章，我挑了一篇给她，但是对这篇文章的深度和讨论的东西不是非常的满意。我几乎找不到一篇全面的，适合新手入门的前端测试知识的文章。也几乎找不到一篇同时兼顾理论和实践，完全为测试而写的文章。</p>\n<p>所以我决定写一篇。这篇是我这个系列的第一部分。一共有以下几个部分：</p>\n<ul>\n<li>介绍</li>\n<li><a href=\"https://hackernoon.com/testing-your-frontend-code-part-ii-unit-testing-1d05f8d50859#.xf5q3crth\" target=\"_blank\" rel=\"noopener\">单元测试</a></li>\n<li><a href=\"https://hackernoon.com/testing-your-frontend-code-part-iii-e2e-testing-e9261b56475\" target=\"_blank\" rel=\"noopener\">E2E测试（end-to-end测试）</a></li>\n<li><a href=\"https://hackernoon.com/testing-your-frontend-code-part-iv-integration-testing-f1f4609dc4d9\" target=\"_blank\" rel=\"noopener\">集成测试（integration testing）</a></li>\n<li><a href=\"https://medium.com/@giltayar/testing-your-frontend-code-part-v-visual-testing-935864cfb5c7\" target=\"_blank\" rel=\"noopener\">可视化测试（visual testing）</a></li>\n</ul>\n<p>为了这个系列的内容，我写了一个简单的应用——<a href=\"http://frontend-testing.surge.sh/\" target=\"_blank\" rel=\"noopener\">计算器</a>——用来当做测试的例子。<a href=\"https://github.com/giltayar/frontend-testing\" target=\"_blank\" rel=\"noopener\">源码</a>。</p>\n<h2 id=\"什么是测试？\"><a href=\"#什么是测试？\" class=\"headerlink\" title=\"什么是测试？\"></a>什么是测试？</h2><p>测试，我认为就是写代码。然后用这些代码来检查你写的app代码（生产环境代码）运行结果是否符合预期。有些人喜欢把这个概念等同于TDD（测试驱动开发或者测试驱动架构），但其实<a href=\"https://en.wikipedia.org/wiki/Test-driven_development\" target=\"_blank\" rel=\"noopener\">TDD</a>只是测试方法的一种具体实践，在这个实践方案中，测试用例会先于app代码的编写，并且后续都围绕测试用例去设计和开发程序。</p>\n<p>坦白说，我认为测试用例先写或者后写其实都无足轻重，它们最终的目的都是让码农们可以有信心说一句：我的程序可以提测了。由于我所崇敬的几位大神在觉得测试是程序开发中必要而且非常重要的东西，这也是我写这篇文章的另一个原因。</p>\n<p>TDD和其他测试的区别，有兴趣的请移步<a href=\"https://martinfowler.com/articles/is-tdd-dead/\" target=\"_blank\" rel=\"noopener\">这里</a>，但是我建议观看完本系列文章之后再去阅读。</p>\n<h2 id=\"为什么要测试？\"><a href=\"#为什么要测试？\" class=\"headerlink\" title=\"为什么要测试？\"></a>为什么要测试？</h2><p>其实我并没有打算去论证为什么要测试，如果你觉得你不需要测试的话，那就别测试。但是你最好有心里准备——你可能要对同一个功能和代码，一遍又一遍的人工测试。这些你记得昨天刚修复过得的小bug会一次又一次的出现以至于你夜不能寐。发布这样的代码到生产环境，将会是一场惊心动魄的冒险之旅。但是，我从来都不喜欢强迫观点——到底要不要测试取决于你自己怎么看。</p>\n<h2 id=\"测试的分类\"><a href=\"#测试的分类\" class=\"headerlink\" title=\"测试的分类\"></a>测试的分类</h2><p>有一个一直困扰着大部分人（特别是对于那些刚接触前端的萌新来说）测试方法的种类太多了，一头雾水，如果你稍微研究过这个领域，你肯定听说过下面这些词语：unit tests（单元测试）, acceptance tests（验收测试）, integration tests（集成测试）, end to end tests（端对端测试）, component tests（组件测试）, and service tests（服务测试）.</p>\n<p>更惨的是，几个人在对这些概念侃侃而谈的时候，他们的理解跟别人说的完全不一样。</p>\n<p>其实对于我而言，概念并不是重点，因为没有一个百分之百准确的概念来涵盖这些所有的种类，但是所有的测试种类都居于这两者中间：单元测试和端对端测试（下文简称E2E测试）。</p>\n<h2 id=\"测试的分类的范围划分\"><a href=\"#测试的分类的范围划分\" class=\"headerlink\" title=\"测试的分类的范围划分\"></a>测试的分类的范围划分</h2><p>拿最简单的单元测试来说。单元测试就是指按照一个个“单元”来编写测试代码的方法。那么什么是一个“单元”呢？其实要看你用的编程语言。它有可能是一个函数(function)，一个模块(module)，一个包(package)，一个类(class)，甚至一个对象(object)（比如像Javascript和Scala这类语言）。在Javascript中，通常是指一个类或者一个模块（拿npm或者commomjs规范来说，一个“模块”就是一个文件的代码）。</p>\n<p>最重要的事情是单元之间是分开测试的。这非常适合用来测试一些算法，函数（比如一个计算字符串长度的函数），和包含一系列验证函数的类。</p>\n<p>这类代码用单元测试来做非常容易，因为它们之间不存在依赖性。但是如果我要测试的单元依赖于其他单元呢？这个时候有两种方法：两个单元放一块测试或者模拟(mock)另一个模块。</p>\n<p>思考一下，如果我们两个单元一块测试，那它还是一个“单元”测试吗？这里就是第一个容易产生歧义的地方，较真的人可能会说这不是单元测试。但是要我来说，我不管什么单元不单元的，叫什么不重要，你可以叫它集成测试，两个单元的测试，或者其他你喜欢的名字都可以，但这些都不是我讨论的重点。</p>\n<p>上面说到模拟(mock)另一个模块，可能很多人脑海中没有一个具体的场景，我们来举一个列子，请看下面代码：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exports.writeSumToFile = <span class=\"function\">(<span class=\"params\">a, b, fileSumWriter</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> sum = a + b</span><br><span class=\"line\"></span><br><span class=\"line\">  fileSumWriter(sum)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这个单元有一个名为<code>writeSumToFile</code>的函数，它接受两个数字和一个函数作为参数，然后计算出结果并写到一个文件里面。</p>\n<p>但是注意，函数本身不会去做<code>write</code>操作，在里面又使用了另一个单元的方法<code>fileSumWriter</code>来执行这个操作。</p>\n<p>为了测试这个单元，我们可以传入真正的<code>fileSumWriter</code>函数，或者，我们可以传入一个不具有写操作的函数去模拟一下就够了。</p>\n<p>当我们传一个模拟的数据到一个函数中的时候，这个时候它是一个真正意义上的单元测试。但是如果我们把这两个单元放一起测试，许多人就不那么认为了。</p>\n<p>大家怎么命名这都不是重点。</p>\n<p>现在，我们为我们的代码写完了单元测试，接下来就是E2E测试(app级别测试)了。E2E测试所有一切可以测试的东西，以确保所有程序在生产环境都保持着一致性。</p>\n<p>这就是所有测试种类的两个极端。在两个极端中间就渐变式的分布着各种测试种类。在两中极端中，越来越多的代码被测试，越来越少的代码被模拟。</p>\n<p>有些人喜欢把介于这两者中间的测试叫做“集成测试”，但是在TDD的开发者眼里，集成测试又是另一种完全不同概念，这个我们以后也会讨论到。我们暂且先把这种比单元测试测得多，但是却比E2E测试少的测试叫做“集成测试”。</p>\n<p>那我们怎么在这两者之间去做取舍呢？很多人都认为说有一个金字塔递减的测试原则：多一些单元测试，少一些集成测试，尽量别有E2E测试。这个问题我们留到这系列文章的最后进行讨论，因为我们首先要先了解了什么是单元测试、集成测试和E2E测试，这些我们都会在这个系列中一一探讨。</p>\n<p>接下来的几篇文章中我们将依次讨论单元测试，集成测试和E2E测试，最后我们还将讨论开发者在测试中的一些常见问题——到底要写多少测试才算合格和测试中的一些注意事项。</p>\n<p>为了更好的阐述我的观点，我写了一个非常简单的应用——<a href=\"http://frontend-testing.surge.sh/\" target=\"_blank\" rel=\"noopener\">计算器（Calculator）</a>——我将用它来展示如何开展测试。<a href=\"https://github.com/giltayar/frontend-testing\" target=\"_blank\" rel=\"noopener\">源码地址</a>。注意现在它还没有完成它的测试，但是我们会在接下来的文章中逐步完善这个应用的测试。</p>\n<p>讨论单元测试的部分，我将会在下一周发表。</p>\n<h2 id=\"可视化测试\"><a href=\"#可视化测试\" class=\"headerlink\" title=\"可视化测试\"></a>可视化测试</h2><p>有一个叫做Applitools的公司做的事情很有意思，他们生产一些工具帮助我们把前端代码的测试可视化，自动化的检查当CSS，JS或者HTML变化的时候你的组件仍旧可以按预期一样运行，尽量别出现一些意外的事情。他们刚刚发布一个可以可视化<code>React Storybook</code>里所有测试的工具，而且不需要编写任何额外的代码。</p>\n<p>这款工具确实很不错，如果你也在使用react，并且有兴趣，可以免费试试：<a href=\"http://testautomation.applitools.com/post/170337956797/visually-testing-react-components-using-the-eyes?utm_source=SOF&amp;utm_medium=GT\" target=\"_blank\" rel=\"noopener\">传送门</a>。</p>\n<p>原文地址：<a href=\"https://medium.com/@giltayar/testing-your-frontend-code-part-i-introduction-7e307eac4446\" target=\"_blank\" rel=\"noopener\">https://medium.com/@giltayar/testing-your-frontend-code-part-i-introduction-7e307eac4446</a></p>\n"},{"title":"测试你的前端代码二(单元测试)","date":"2019-05-20T03:05:30.000Z","_content":"\n## 单元测试\n\n就像我们在上一章说的那样，单元测试是指用来测试代码单元的代码，这个单元可以是函数，模块或者类。许多人认为测试大部分应该是单元测试，我不这么认为，但这样认为也没有错——就像我在文章中反复强调的那样，你怎么去测试代码并不重要，只要你写的测试代码能让你有足够的信心把你的代码发布到生产环境就可以。\n\n先不管你写了多少的单元测试，单元测试是写起来最简单，最容易理解的一种，原因是单元测试通常都是天生的函数性质——输入值来启动这个单元，运行逻辑，然后检查这个单元的输出（拿函数来说，输入指的是给函数传参，输出指的就是返回值）。\n\n此外，你应该严格要求自己，把代码写成一个个独立单元，而不需要依赖其他单元。\n\n## 手把手单元测试\n\n废话不多说——我们开始手把手教你写单元测试，测试的目标是[计算器](http://frontend-testing.surge.sh/)的[代码](https://github.com/qinyuanbin/frontend-testing)。这是一个react应用，有两个组件`keypad`（键盘）和`display`（结果显示器）。他们是两个没有依赖的，不同的react单元，我们将会讲解如何测试它们。\n\n（如果你看了代码之后困惑为什么我没有使用`jsx`，是因为我不想编译。Node和大多数浏览器都完整支持ES6，那我为什么不直接运行我的代码呢？是的，我明确知道我的代码不会运行在IE浏览器上，这个项目可以这样做，但是在其他真实的项目中，我会加入编译的步骤）。\n\n当我点击一个数字（例如：‘1’，‘5’`）或者一个操作符（例如：‘+’, ‘=’）的时候，就需要有代码来处理这些操作。这个代码在哪里呢？按照[惯例](https://medium.com/@dan_abramov/smart-and-dumb-components-7ca2f9a7c7d0)来说，我把我的组件分为展示组件（keypad和display）和容器组件（app，这是本应用中唯一一个有状态（state）的组件，也是唯一一个包含业务逻辑的组件）。\n\n## “计算”模块\n\n用来实现计算逻辑的模块“calculator”是一个单独的模块，并且不依赖react。这个模块用来做单元测试非常完美！最理想的单测应该是不包含I/O操作和UI依赖的。你应该在你的应用逻辑中尽量多的抽取这样的模块——没有I/O操作和UI依赖的模块。\n\n可能有人会困惑，web开发又不涉及文件，数据库等这些操作，I/O操作是指什么？文件，数据库我们确实是没有，但是我们有ajax请求，本地存储，DOM的access和manipulation等。我认为，任何涉及到浏览器api的操作都可以说是是I/O操作。\n\n我是如何从react组件中分离计算器逻辑的呢？在这个例子中非常容易实现。它的逻辑就是一些简单算法（加减乘除），我把这些代码统一放到一个calculator模块中。\n\n这个模块非常非常简单——它可以接受计算器状态（一个对象），一个字符（可以是数字或者加减乘除）和返回最新的计算器状态。如果你使用了Redux，这个和Redux的reducer模式非常类似（如果你没有使用redux也没有关系）。如果你永远通过前一个计算器状态来计算出新的状态，那我们怎么获取第一个状态呢？其实很简单简单——当你初始化计算器的时候，这个模块也向外暴露了一个initialState的变量。计算机状态是对外不透明的——它包含了一个display字段，用来展示计算器app的显示状态。\n\n如果你没有耐心去看全部的代码，那么请你看看程序的入口，这是最重要的部分，甚至比算法的细节都还要重要。\n```js\nmodule.exports.initialState = { display: '0', initial: true }\n\nmodule.exports.nextState = (calculatorState, character) => {\n  if (isDigit(character)) {\n    return addDigit(calculatorState, character)\n  } else if (isOperator(character)) {\n    return addOperator(calculatorState, character)\n  } else if (isEqualSign(character)) {\n    return compute(calculatorState)\n  } else {\n    return calculatorState\n  }\n}\n\n//....\n```\n\n算法实现并不是那么重要，真正重要的是这个模块对外暴露的接口非常的简单——只需要一个state，就可以知道下一个状态是什么。\n\n其实我们在[test-calculator.js](https://github.com/qinyuanbin/frontend-testing/blob/master/test/unit/test-calculator.js)里面就是这么写的，在这里我们全面测试了这个程序入口的逻辑，虽然你认为这个逻辑不是很重要。那么我们是怎么测试它的呢？我们通常使用测试框架。我们使用了当前最流行的测试框架[Mocha](https://www.npmjs.com/package/mocha)。你也可以使用任何你喜欢的框架，例如Jest，Jasmine， Tape或者其他。\n\n## 用Mocha进行单元测试\n\n所有的测试框架都大同小异——你在测试文件里面写好一些测试代码，然后测试框架负责执行这些文件。执行测试文件的指令我们通常称为`命令`。\n\n当你使用npm安装了Mocha之后就可以通过脚本命令行运行“mocha”命令。细心的同学会发现，在`package.json`的script的test部分，你可以看到以下代码\n```json\n\"scripts\": {\n...\n    \"test\": \"mocha 'test/**/test-*.js' && eslint test lib\",\n...\n},\n```\n\n这个命令会执行所有的test目录下面的所有test-开头的文件。所以如果你clone了这个计算器app，并且运行了npm install，就可以运行npm test执行测试。\n\n（顺便说一下，把测试目录放在项目的*根目录*是一个行业惯例，所以你要别人认为你很专业的话，你也应该遵守这个惯例。）\n\n当你运行了之后，你将会看到以下结果：\n\n![](https://cdn-images-1.medium.com/max/800/1*ZCXpZVRMgzZsCnaQMRZO4Q.png)\n\n如果有测试用例没有测试通过，你会看到一些显眼的红色错误，显眼到你无法容忍这些红色错误的存在，你恨不得马上修复它。\n\n我们继续看一段代码:\n```js\nconst {describe, it} = require('mocha')\nconst {expect} = require('chai')\nconst calculator = require('../../lib/calculator')\n\ndescribe('calculator', function () {\n  const stream = (characters, calculatorState = calculator.initialState) =>\n    !characters\n      ? calculatorState\n      : stream(characters.slice(1),\n               calculator.nextState(calculatorState, characters[0]))\n\n  it('should show initial display correctly', () => {\n    expect(calculator.initialState.display).to.equal('0')\n  })\n  it('should replace 0 in initialState', () => {\n    expect(stream('4').display).to.equal('4')\n  })\n//...\n```\n\n我们最先import了mocha，这是一个断言库（expect）（我们稍后会解释什么是断言库）。我们只需要import我们测试中将要使用的函数describe，it和expect。\n\n然后，import我们想要测试的代码——`calculator.js'。\n\n然后是一些测试代码，它们使用了it函数来描述。例如，\n\n```js\nit('should show initial display correctly', () => {\n    expect(calculator.initialState.display).to.equal('0')\n})\n```\n\nit函数接受一个描述本次测试内容的字符串，还有一个参数是包含了测试代码的函数。*但是it函数不可以单独使用*——它必须放在describe里面。\n\n测试函数里面应该写什么东西呢？答案是随便写。在本次示例中，我们测试了initial state的结果等于0。怎么做呢？我们可以这么做：\n```js\nif (calculator.initialState.display !== '0')\n  throw 'failed'\n```\n\n这个代码将会被畅通无阻的运行！如果一个测试抛出一个异常，证明这个测试没有通过。就这么简单。但是断言库（expect）使得这一些都变得更加的简单，因为它提供了一系列的辅助函数来帮助我们实现测试逻辑——比如测试一个数组或者对象是否与另一个相等。\n\n这就是单元测试的要领——运行一个或者一些函数（如果你喜欢OOP，你还可以实例化一个对象，并调用它的一些方法），然后比较运行结果与预期的结果是否一致。\n\n## 编写可以测试的代码单元\n\n这个看起来是不是很简单？复杂的测试不叫单元测试——把代码从复杂的逻辑中抽取出来，使之可以方便的单元测试是一门*艺术*。*这些可以单元测试的代码跟其他模块几乎没有依赖关系，也没有I/O操作。*最难的是，我们习惯于把逻辑代码，I/O操作，和UI代码混在一起写。但是我们依然有办法，而且有无数的相关技术来教我们如何去做。例如，如果你有一些校验字段合法性的代码，把它拆成一个包含校验逻辑的模块然后测试。\n\n## 测试在NodeJS环境下运行？\n\n请注意一个非常离谱的事情——单元测试只能运行在NodeJS环境下！但是我们的计算器app却运行在浏览器环境，我们使用NodeJS来执行我们的测试，包含生产环境的代码测试。\n\n这样做会不会有什么问题？其实是因为我们的代码是“同构”的。这就意味着在浏览器和NodeJS它都可以运行。它是怎么做到这一点的呢？如果你编写的代码不包含任何I/O操作，意味着你不需要浏览器环境，在NodeJS运行当然没有问题。特别是当你代码里面使用了`require`，`require`在NodeJS或者webpack等打包工具都可以支持。如果你看一下`package.json`，你会发现我们使用了webpack来处理这个情况——打包使用`require`的代码：\n```json\n\"scripts\": {\n   \"build\": \"webpack && cp public/* dist\",\n   ...\n}\n```\n\n可以看到我们的代码使用了`require`来import react和其他模块，通过NodeJS和webpack的处理，我们就可以在浏览器和NodeJS下运行我们的代码——NodeJS对`require`天然就支持，webpack按照了`require`的规范来把所有的模块打包到一个大的js文件中，然后在html中通过`<script src>`标签将代码引入浏览器中执行。\n\n## 在浏览器下执行单元测试\n\n顺便说一下，我们可以使用另一个框架，[karma](https://karma-runner.github.io/1.0/index.html)，在浏览器环境下来运行我们的mocha代码，但是我却斗胆的说一句，如果单元测试可以运行在Nodejs环境（今天我们编写在NodeJS或者浏览器下运行的代码都非常的容易），就应该选择运行在NodeJS环境，因为这样更加容易运行和debug。并且如果不需要编译，它们运行得更快。\n\n但没有在浏览器运行的我们测试确实存在一个问题——我们没有办法知道在浏览器下运行会不会有其他的bug。浏览器和NodeJS可能会存在一些不一致的地方，导致我们的代码出问题。\n\n## 下一篇预告\n\n我们将会聊聊E2E测试——在真实环境浏览器中测试我们的代码！敬请期待下周的[如何编写E2E测试代码](https://medium.com/@giltayar/testing-your-frontend-code-part-iii-e2e-testing-e9261b56475#.mxjfj94jh)。\n\n## 总结\n\n我们这周都讲了一些啥东西呢？\n\n- 我们演示如何使用了Mocha（还有Chai）来创建单元测试。\n\n- 我们还解释了什么是单元测试——测试单元的代码，独立于其他模块的代码。\n\n- 我们还讲到了如何使我们的模块尽可能的独立于其他模块，万一有依赖，我们应该去模拟这个模块来继续单元测试，或者使用集成测试。\n\n- 我们还理解了单元测试是一个同构的代码，所以它可以运行在NodeJS。我们还理解了怎么去编译同构的代码——没有I/O操作，使用`require`作为他们import模块的手段，使用webpack去编译所有的模块，使得它们可以在浏览器环境下运行。\n","source":"_posts/测试你的前端代码二-单元测试.md","raw":"---\ntitle: 测试你的前端代码二(单元测试)\ndate: 2019-05-20 11:05:30\ntags:\n    - Javascript\n    - Testing\n---\n\n## 单元测试\n\n就像我们在上一章说的那样，单元测试是指用来测试代码单元的代码，这个单元可以是函数，模块或者类。许多人认为测试大部分应该是单元测试，我不这么认为，但这样认为也没有错——就像我在文章中反复强调的那样，你怎么去测试代码并不重要，只要你写的测试代码能让你有足够的信心把你的代码发布到生产环境就可以。\n\n先不管你写了多少的单元测试，单元测试是写起来最简单，最容易理解的一种，原因是单元测试通常都是天生的函数性质——输入值来启动这个单元，运行逻辑，然后检查这个单元的输出（拿函数来说，输入指的是给函数传参，输出指的就是返回值）。\n\n此外，你应该严格要求自己，把代码写成一个个独立单元，而不需要依赖其他单元。\n\n## 手把手单元测试\n\n废话不多说——我们开始手把手教你写单元测试，测试的目标是[计算器](http://frontend-testing.surge.sh/)的[代码](https://github.com/qinyuanbin/frontend-testing)。这是一个react应用，有两个组件`keypad`（键盘）和`display`（结果显示器）。他们是两个没有依赖的，不同的react单元，我们将会讲解如何测试它们。\n\n（如果你看了代码之后困惑为什么我没有使用`jsx`，是因为我不想编译。Node和大多数浏览器都完整支持ES6，那我为什么不直接运行我的代码呢？是的，我明确知道我的代码不会运行在IE浏览器上，这个项目可以这样做，但是在其他真实的项目中，我会加入编译的步骤）。\n\n当我点击一个数字（例如：‘1’，‘5’`）或者一个操作符（例如：‘+’, ‘=’）的时候，就需要有代码来处理这些操作。这个代码在哪里呢？按照[惯例](https://medium.com/@dan_abramov/smart-and-dumb-components-7ca2f9a7c7d0)来说，我把我的组件分为展示组件（keypad和display）和容器组件（app，这是本应用中唯一一个有状态（state）的组件，也是唯一一个包含业务逻辑的组件）。\n\n## “计算”模块\n\n用来实现计算逻辑的模块“calculator”是一个单独的模块，并且不依赖react。这个模块用来做单元测试非常完美！最理想的单测应该是不包含I/O操作和UI依赖的。你应该在你的应用逻辑中尽量多的抽取这样的模块——没有I/O操作和UI依赖的模块。\n\n可能有人会困惑，web开发又不涉及文件，数据库等这些操作，I/O操作是指什么？文件，数据库我们确实是没有，但是我们有ajax请求，本地存储，DOM的access和manipulation等。我认为，任何涉及到浏览器api的操作都可以说是是I/O操作。\n\n我是如何从react组件中分离计算器逻辑的呢？在这个例子中非常容易实现。它的逻辑就是一些简单算法（加减乘除），我把这些代码统一放到一个calculator模块中。\n\n这个模块非常非常简单——它可以接受计算器状态（一个对象），一个字符（可以是数字或者加减乘除）和返回最新的计算器状态。如果你使用了Redux，这个和Redux的reducer模式非常类似（如果你没有使用redux也没有关系）。如果你永远通过前一个计算器状态来计算出新的状态，那我们怎么获取第一个状态呢？其实很简单简单——当你初始化计算器的时候，这个模块也向外暴露了一个initialState的变量。计算机状态是对外不透明的——它包含了一个display字段，用来展示计算器app的显示状态。\n\n如果你没有耐心去看全部的代码，那么请你看看程序的入口，这是最重要的部分，甚至比算法的细节都还要重要。\n```js\nmodule.exports.initialState = { display: '0', initial: true }\n\nmodule.exports.nextState = (calculatorState, character) => {\n  if (isDigit(character)) {\n    return addDigit(calculatorState, character)\n  } else if (isOperator(character)) {\n    return addOperator(calculatorState, character)\n  } else if (isEqualSign(character)) {\n    return compute(calculatorState)\n  } else {\n    return calculatorState\n  }\n}\n\n//....\n```\n\n算法实现并不是那么重要，真正重要的是这个模块对外暴露的接口非常的简单——只需要一个state，就可以知道下一个状态是什么。\n\n其实我们在[test-calculator.js](https://github.com/qinyuanbin/frontend-testing/blob/master/test/unit/test-calculator.js)里面就是这么写的，在这里我们全面测试了这个程序入口的逻辑，虽然你认为这个逻辑不是很重要。那么我们是怎么测试它的呢？我们通常使用测试框架。我们使用了当前最流行的测试框架[Mocha](https://www.npmjs.com/package/mocha)。你也可以使用任何你喜欢的框架，例如Jest，Jasmine， Tape或者其他。\n\n## 用Mocha进行单元测试\n\n所有的测试框架都大同小异——你在测试文件里面写好一些测试代码，然后测试框架负责执行这些文件。执行测试文件的指令我们通常称为`命令`。\n\n当你使用npm安装了Mocha之后就可以通过脚本命令行运行“mocha”命令。细心的同学会发现，在`package.json`的script的test部分，你可以看到以下代码\n```json\n\"scripts\": {\n...\n    \"test\": \"mocha 'test/**/test-*.js' && eslint test lib\",\n...\n},\n```\n\n这个命令会执行所有的test目录下面的所有test-开头的文件。所以如果你clone了这个计算器app，并且运行了npm install，就可以运行npm test执行测试。\n\n（顺便说一下，把测试目录放在项目的*根目录*是一个行业惯例，所以你要别人认为你很专业的话，你也应该遵守这个惯例。）\n\n当你运行了之后，你将会看到以下结果：\n\n![](https://cdn-images-1.medium.com/max/800/1*ZCXpZVRMgzZsCnaQMRZO4Q.png)\n\n如果有测试用例没有测试通过，你会看到一些显眼的红色错误，显眼到你无法容忍这些红色错误的存在，你恨不得马上修复它。\n\n我们继续看一段代码:\n```js\nconst {describe, it} = require('mocha')\nconst {expect} = require('chai')\nconst calculator = require('../../lib/calculator')\n\ndescribe('calculator', function () {\n  const stream = (characters, calculatorState = calculator.initialState) =>\n    !characters\n      ? calculatorState\n      : stream(characters.slice(1),\n               calculator.nextState(calculatorState, characters[0]))\n\n  it('should show initial display correctly', () => {\n    expect(calculator.initialState.display).to.equal('0')\n  })\n  it('should replace 0 in initialState', () => {\n    expect(stream('4').display).to.equal('4')\n  })\n//...\n```\n\n我们最先import了mocha，这是一个断言库（expect）（我们稍后会解释什么是断言库）。我们只需要import我们测试中将要使用的函数describe，it和expect。\n\n然后，import我们想要测试的代码——`calculator.js'。\n\n然后是一些测试代码，它们使用了it函数来描述。例如，\n\n```js\nit('should show initial display correctly', () => {\n    expect(calculator.initialState.display).to.equal('0')\n})\n```\n\nit函数接受一个描述本次测试内容的字符串，还有一个参数是包含了测试代码的函数。*但是it函数不可以单独使用*——它必须放在describe里面。\n\n测试函数里面应该写什么东西呢？答案是随便写。在本次示例中，我们测试了initial state的结果等于0。怎么做呢？我们可以这么做：\n```js\nif (calculator.initialState.display !== '0')\n  throw 'failed'\n```\n\n这个代码将会被畅通无阻的运行！如果一个测试抛出一个异常，证明这个测试没有通过。就这么简单。但是断言库（expect）使得这一些都变得更加的简单，因为它提供了一系列的辅助函数来帮助我们实现测试逻辑——比如测试一个数组或者对象是否与另一个相等。\n\n这就是单元测试的要领——运行一个或者一些函数（如果你喜欢OOP，你还可以实例化一个对象，并调用它的一些方法），然后比较运行结果与预期的结果是否一致。\n\n## 编写可以测试的代码单元\n\n这个看起来是不是很简单？复杂的测试不叫单元测试——把代码从复杂的逻辑中抽取出来，使之可以方便的单元测试是一门*艺术*。*这些可以单元测试的代码跟其他模块几乎没有依赖关系，也没有I/O操作。*最难的是，我们习惯于把逻辑代码，I/O操作，和UI代码混在一起写。但是我们依然有办法，而且有无数的相关技术来教我们如何去做。例如，如果你有一些校验字段合法性的代码，把它拆成一个包含校验逻辑的模块然后测试。\n\n## 测试在NodeJS环境下运行？\n\n请注意一个非常离谱的事情——单元测试只能运行在NodeJS环境下！但是我们的计算器app却运行在浏览器环境，我们使用NodeJS来执行我们的测试，包含生产环境的代码测试。\n\n这样做会不会有什么问题？其实是因为我们的代码是“同构”的。这就意味着在浏览器和NodeJS它都可以运行。它是怎么做到这一点的呢？如果你编写的代码不包含任何I/O操作，意味着你不需要浏览器环境，在NodeJS运行当然没有问题。特别是当你代码里面使用了`require`，`require`在NodeJS或者webpack等打包工具都可以支持。如果你看一下`package.json`，你会发现我们使用了webpack来处理这个情况——打包使用`require`的代码：\n```json\n\"scripts\": {\n   \"build\": \"webpack && cp public/* dist\",\n   ...\n}\n```\n\n可以看到我们的代码使用了`require`来import react和其他模块，通过NodeJS和webpack的处理，我们就可以在浏览器和NodeJS下运行我们的代码——NodeJS对`require`天然就支持，webpack按照了`require`的规范来把所有的模块打包到一个大的js文件中，然后在html中通过`<script src>`标签将代码引入浏览器中执行。\n\n## 在浏览器下执行单元测试\n\n顺便说一下，我们可以使用另一个框架，[karma](https://karma-runner.github.io/1.0/index.html)，在浏览器环境下来运行我们的mocha代码，但是我却斗胆的说一句，如果单元测试可以运行在Nodejs环境（今天我们编写在NodeJS或者浏览器下运行的代码都非常的容易），就应该选择运行在NodeJS环境，因为这样更加容易运行和debug。并且如果不需要编译，它们运行得更快。\n\n但没有在浏览器运行的我们测试确实存在一个问题——我们没有办法知道在浏览器下运行会不会有其他的bug。浏览器和NodeJS可能会存在一些不一致的地方，导致我们的代码出问题。\n\n## 下一篇预告\n\n我们将会聊聊E2E测试——在真实环境浏览器中测试我们的代码！敬请期待下周的[如何编写E2E测试代码](https://medium.com/@giltayar/testing-your-frontend-code-part-iii-e2e-testing-e9261b56475#.mxjfj94jh)。\n\n## 总结\n\n我们这周都讲了一些啥东西呢？\n\n- 我们演示如何使用了Mocha（还有Chai）来创建单元测试。\n\n- 我们还解释了什么是单元测试——测试单元的代码，独立于其他模块的代码。\n\n- 我们还讲到了如何使我们的模块尽可能的独立于其他模块，万一有依赖，我们应该去模拟这个模块来继续单元测试，或者使用集成测试。\n\n- 我们还理解了单元测试是一个同构的代码，所以它可以运行在NodeJS。我们还理解了怎么去编译同构的代码——没有I/O操作，使用`require`作为他们import模块的手段，使用webpack去编译所有的模块，使得它们可以在浏览器环境下运行。\n","slug":"测试你的前端代码二-单元测试","published":1,"updated":"2019-05-22T04:51:57.074Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvyuyqg8001my9pjlvir6qzl","content":"<h2 id=\"单元测试\"><a href=\"#单元测试\" class=\"headerlink\" title=\"单元测试\"></a>单元测试</h2><p>就像我们在上一章说的那样，单元测试是指用来测试代码单元的代码，这个单元可以是函数，模块或者类。许多人认为测试大部分应该是单元测试，我不这么认为，但这样认为也没有错——就像我在文章中反复强调的那样，你怎么去测试代码并不重要，只要你写的测试代码能让你有足够的信心把你的代码发布到生产环境就可以。</p>\n<p>先不管你写了多少的单元测试，单元测试是写起来最简单，最容易理解的一种，原因是单元测试通常都是天生的函数性质——输入值来启动这个单元，运行逻辑，然后检查这个单元的输出（拿函数来说，输入指的是给函数传参，输出指的就是返回值）。</p>\n<p>此外，你应该严格要求自己，把代码写成一个个独立单元，而不需要依赖其他单元。</p>\n<h2 id=\"手把手单元测试\"><a href=\"#手把手单元测试\" class=\"headerlink\" title=\"手把手单元测试\"></a>手把手单元测试</h2><p>废话不多说——我们开始手把手教你写单元测试，测试的目标是<a href=\"http://frontend-testing.surge.sh/\" target=\"_blank\" rel=\"noopener\">计算器</a>的<a href=\"https://github.com/qinyuanbin/frontend-testing\" target=\"_blank\" rel=\"noopener\">代码</a>。这是一个react应用，有两个组件<code>keypad</code>（键盘）和<code>display</code>（结果显示器）。他们是两个没有依赖的，不同的react单元，我们将会讲解如何测试它们。</p>\n<p>（如果你看了代码之后困惑为什么我没有使用<code>jsx</code>，是因为我不想编译。Node和大多数浏览器都完整支持ES6，那我为什么不直接运行我的代码呢？是的，我明确知道我的代码不会运行在IE浏览器上，这个项目可以这样做，但是在其他真实的项目中，我会加入编译的步骤）。</p>\n<p>当我点击一个数字（例如：‘1’，‘5’`）或者一个操作符（例如：‘+’, ‘=’）的时候，就需要有代码来处理这些操作。这个代码在哪里呢？按照<a href=\"https://medium.com/@dan_abramov/smart-and-dumb-components-7ca2f9a7c7d0\" target=\"_blank\" rel=\"noopener\">惯例</a>来说，我把我的组件分为展示组件（keypad和display）和容器组件（app，这是本应用中唯一一个有状态（state）的组件，也是唯一一个包含业务逻辑的组件）。</p>\n<h2 id=\"“计算”模块\"><a href=\"#“计算”模块\" class=\"headerlink\" title=\"“计算”模块\"></a>“计算”模块</h2><p>用来实现计算逻辑的模块“calculator”是一个单独的模块，并且不依赖react。这个模块用来做单元测试非常完美！最理想的单测应该是不包含I/O操作和UI依赖的。你应该在你的应用逻辑中尽量多的抽取这样的模块——没有I/O操作和UI依赖的模块。</p>\n<p>可能有人会困惑，web开发又不涉及文件，数据库等这些操作，I/O操作是指什么？文件，数据库我们确实是没有，但是我们有ajax请求，本地存储，DOM的access和manipulation等。我认为，任何涉及到浏览器api的操作都可以说是是I/O操作。</p>\n<p>我是如何从react组件中分离计算器逻辑的呢？在这个例子中非常容易实现。它的逻辑就是一些简单算法（加减乘除），我把这些代码统一放到一个calculator模块中。</p>\n<p>这个模块非常非常简单——它可以接受计算器状态（一个对象），一个字符（可以是数字或者加减乘除）和返回最新的计算器状态。如果你使用了Redux，这个和Redux的reducer模式非常类似（如果你没有使用redux也没有关系）。如果你永远通过前一个计算器状态来计算出新的状态，那我们怎么获取第一个状态呢？其实很简单简单——当你初始化计算器的时候，这个模块也向外暴露了一个initialState的变量。计算机状态是对外不透明的——它包含了一个display字段，用来展示计算器app的显示状态。</p>\n<p>如果你没有耐心去看全部的代码，那么请你看看程序的入口，这是最重要的部分，甚至比算法的细节都还要重要。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports.initialState = &#123; <span class=\"attr\">display</span>: <span class=\"string\">'0'</span>, <span class=\"attr\">initial</span>: <span class=\"literal\">true</span> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports.nextState = <span class=\"function\">(<span class=\"params\">calculatorState, character</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (isDigit(character)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> addDigit(calculatorState, character)</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (isOperator(character)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> addOperator(calculatorState, character)</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (isEqualSign(character)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> compute(calculatorState)</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> calculatorState</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//....</span></span><br></pre></td></tr></table></figure></p>\n<p>算法实现并不是那么重要，真正重要的是这个模块对外暴露的接口非常的简单——只需要一个state，就可以知道下一个状态是什么。</p>\n<p>其实我们在<a href=\"https://github.com/qinyuanbin/frontend-testing/blob/master/test/unit/test-calculator.js\" target=\"_blank\" rel=\"noopener\">test-calculator.js</a>里面就是这么写的，在这里我们全面测试了这个程序入口的逻辑，虽然你认为这个逻辑不是很重要。那么我们是怎么测试它的呢？我们通常使用测试框架。我们使用了当前最流行的测试框架<a href=\"https://www.npmjs.com/package/mocha\" target=\"_blank\" rel=\"noopener\">Mocha</a>。你也可以使用任何你喜欢的框架，例如Jest，Jasmine， Tape或者其他。</p>\n<h2 id=\"用Mocha进行单元测试\"><a href=\"#用Mocha进行单元测试\" class=\"headerlink\" title=\"用Mocha进行单元测试\"></a>用Mocha进行单元测试</h2><p>所有的测试框架都大同小异——你在测试文件里面写好一些测试代码，然后测试框架负责执行这些文件。执行测试文件的指令我们通常称为<code>命令</code>。</p>\n<p>当你使用npm安装了Mocha之后就可以通过脚本命令行运行“mocha”命令。细心的同学会发现，在<code>package.json</code>的script的test部分，你可以看到以下代码<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\"scripts\": &#123;</span><br><span class=\"line\">...</span><br><span class=\"line\">    \"test\": \"mocha 'test/**/test-*.js' &amp;&amp; eslint test lib\",</span><br><span class=\"line\">...</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure></p>\n<p>这个命令会执行所有的test目录下面的所有test-开头的文件。所以如果你clone了这个计算器app，并且运行了npm install，就可以运行npm test执行测试。</p>\n<p>（顺便说一下，把测试目录放在项目的<em>根目录</em>是一个行业惯例，所以你要别人认为你很专业的话，你也应该遵守这个惯例。）</p>\n<p>当你运行了之后，你将会看到以下结果：</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*ZCXpZVRMgzZsCnaQMRZO4Q.png\" alt=\"\"></p>\n<p>如果有测试用例没有测试通过，你会看到一些显眼的红色错误，显眼到你无法容忍这些红色错误的存在，你恨不得马上修复它。</p>\n<p>我们继续看一段代码:<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> &#123;describe, it&#125; = <span class=\"built_in\">require</span>(<span class=\"string\">'mocha'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123;expect&#125; = <span class=\"built_in\">require</span>(<span class=\"string\">'chai'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> calculator = <span class=\"built_in\">require</span>(<span class=\"string\">'../../lib/calculator'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">describe(<span class=\"string\">'calculator'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> stream = <span class=\"function\">(<span class=\"params\">characters, calculatorState = calculator.initialState</span>) =&gt;</span></span><br><span class=\"line\">    !characters</span><br><span class=\"line\">      ? calculatorState</span><br><span class=\"line\">      : stream(characters.slice(<span class=\"number\">1</span>),</span><br><span class=\"line\">               calculator.nextState(calculatorState, characters[<span class=\"number\">0</span>]))</span><br><span class=\"line\"></span><br><span class=\"line\">  it(<span class=\"string\">'should show initial display correctly'</span>, () =&gt; &#123;</span><br><span class=\"line\">    expect(calculator.initialState.display).to.equal(<span class=\"string\">'0'</span>)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  it(<span class=\"string\">'should replace 0 in initialState'</span>, () =&gt; &#123;</span><br><span class=\"line\">    expect(stream(<span class=\"string\">'4'</span>).display).to.equal(<span class=\"string\">'4'</span>)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\"><span class=\"comment\">//...</span></span><br></pre></td></tr></table></figure></p>\n<p>我们最先import了mocha，这是一个断言库（expect）（我们稍后会解释什么是断言库）。我们只需要import我们测试中将要使用的函数describe，it和expect。</p>\n<p>然后，import我们想要测试的代码——`calculator.js’。</p>\n<p>然后是一些测试代码，它们使用了it函数来描述。例如，</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">it(<span class=\"string\">'should show initial display correctly'</span>, () =&gt; &#123;</span><br><span class=\"line\">    expect(calculator.initialState.display).to.equal(<span class=\"string\">'0'</span>)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>it函数接受一个描述本次测试内容的字符串，还有一个参数是包含了测试代码的函数。<em>但是it函数不可以单独使用</em>——它必须放在describe里面。</p>\n<p>测试函数里面应该写什么东西呢？答案是随便写。在本次示例中，我们测试了initial state的结果等于0。怎么做呢？我们可以这么做：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (calculator.initialState.display !== <span class=\"string\">'0'</span>)</span><br><span class=\"line\">  <span class=\"keyword\">throw</span> <span class=\"string\">'failed'</span></span><br></pre></td></tr></table></figure></p>\n<p>这个代码将会被畅通无阻的运行！如果一个测试抛出一个异常，证明这个测试没有通过。就这么简单。但是断言库（expect）使得这一些都变得更加的简单，因为它提供了一系列的辅助函数来帮助我们实现测试逻辑——比如测试一个数组或者对象是否与另一个相等。</p>\n<p>这就是单元测试的要领——运行一个或者一些函数（如果你喜欢OOP，你还可以实例化一个对象，并调用它的一些方法），然后比较运行结果与预期的结果是否一致。</p>\n<h2 id=\"编写可以测试的代码单元\"><a href=\"#编写可以测试的代码单元\" class=\"headerlink\" title=\"编写可以测试的代码单元\"></a>编写可以测试的代码单元</h2><p>这个看起来是不是很简单？复杂的测试不叫单元测试——把代码从复杂的逻辑中抽取出来，使之可以方便的单元测试是一门<em>艺术</em>。<em>这些可以单元测试的代码跟其他模块几乎没有依赖关系，也没有I/O操作。</em>最难的是，我们习惯于把逻辑代码，I/O操作，和UI代码混在一起写。但是我们依然有办法，而且有无数的相关技术来教我们如何去做。例如，如果你有一些校验字段合法性的代码，把它拆成一个包含校验逻辑的模块然后测试。</p>\n<h2 id=\"测试在NodeJS环境下运行？\"><a href=\"#测试在NodeJS环境下运行？\" class=\"headerlink\" title=\"测试在NodeJS环境下运行？\"></a>测试在NodeJS环境下运行？</h2><p>请注意一个非常离谱的事情——单元测试只能运行在NodeJS环境下！但是我们的计算器app却运行在浏览器环境，我们使用NodeJS来执行我们的测试，包含生产环境的代码测试。</p>\n<p>这样做会不会有什么问题？其实是因为我们的代码是“同构”的。这就意味着在浏览器和NodeJS它都可以运行。它是怎么做到这一点的呢？如果你编写的代码不包含任何I/O操作，意味着你不需要浏览器环境，在NodeJS运行当然没有问题。特别是当你代码里面使用了<code>require</code>，<code>require</code>在NodeJS或者webpack等打包工具都可以支持。如果你看一下<code>package.json</code>，你会发现我们使用了webpack来处理这个情况——打包使用<code>require</code>的代码：<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\"scripts\": &#123;</span><br><span class=\"line\">   \"build\": \"webpack &amp;&amp; cp public/* dist\",</span><br><span class=\"line\">   ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>可以看到我们的代码使用了<code>require</code>来import react和其他模块，通过NodeJS和webpack的处理，我们就可以在浏览器和NodeJS下运行我们的代码——NodeJS对<code>require</code>天然就支持，webpack按照了<code>require</code>的规范来把所有的模块打包到一个大的js文件中，然后在html中通过<code>&lt;script src&gt;</code>标签将代码引入浏览器中执行。</p>\n<h2 id=\"在浏览器下执行单元测试\"><a href=\"#在浏览器下执行单元测试\" class=\"headerlink\" title=\"在浏览器下执行单元测试\"></a>在浏览器下执行单元测试</h2><p>顺便说一下，我们可以使用另一个框架，<a href=\"https://karma-runner.github.io/1.0/index.html\" target=\"_blank\" rel=\"noopener\">karma</a>，在浏览器环境下来运行我们的mocha代码，但是我却斗胆的说一句，如果单元测试可以运行在Nodejs环境（今天我们编写在NodeJS或者浏览器下运行的代码都非常的容易），就应该选择运行在NodeJS环境，因为这样更加容易运行和debug。并且如果不需要编译，它们运行得更快。</p>\n<p>但没有在浏览器运行的我们测试确实存在一个问题——我们没有办法知道在浏览器下运行会不会有其他的bug。浏览器和NodeJS可能会存在一些不一致的地方，导致我们的代码出问题。</p>\n<h2 id=\"下一篇预告\"><a href=\"#下一篇预告\" class=\"headerlink\" title=\"下一篇预告\"></a>下一篇预告</h2><p>我们将会聊聊E2E测试——在真实环境浏览器中测试我们的代码！敬请期待下周的<a href=\"https://medium.com/@giltayar/testing-your-frontend-code-part-iii-e2e-testing-e9261b56475#.mxjfj94jh\" target=\"_blank\" rel=\"noopener\">如何编写E2E测试代码</a>。</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>我们这周都讲了一些啥东西呢？</p>\n<ul>\n<li><p>我们演示如何使用了Mocha（还有Chai）来创建单元测试。</p>\n</li>\n<li><p>我们还解释了什么是单元测试——测试单元的代码，独立于其他模块的代码。</p>\n</li>\n<li><p>我们还讲到了如何使我们的模块尽可能的独立于其他模块，万一有依赖，我们应该去模拟这个模块来继续单元测试，或者使用集成测试。</p>\n</li>\n<li><p>我们还理解了单元测试是一个同构的代码，所以它可以运行在NodeJS。我们还理解了怎么去编译同构的代码——没有I/O操作，使用<code>require</code>作为他们import模块的手段，使用webpack去编译所有的模块，使得它们可以在浏览器环境下运行。</p>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"单元测试\"><a href=\"#单元测试\" class=\"headerlink\" title=\"单元测试\"></a>单元测试</h2><p>就像我们在上一章说的那样，单元测试是指用来测试代码单元的代码，这个单元可以是函数，模块或者类。许多人认为测试大部分应该是单元测试，我不这么认为，但这样认为也没有错——就像我在文章中反复强调的那样，你怎么去测试代码并不重要，只要你写的测试代码能让你有足够的信心把你的代码发布到生产环境就可以。</p>\n<p>先不管你写了多少的单元测试，单元测试是写起来最简单，最容易理解的一种，原因是单元测试通常都是天生的函数性质——输入值来启动这个单元，运行逻辑，然后检查这个单元的输出（拿函数来说，输入指的是给函数传参，输出指的就是返回值）。</p>\n<p>此外，你应该严格要求自己，把代码写成一个个独立单元，而不需要依赖其他单元。</p>\n<h2 id=\"手把手单元测试\"><a href=\"#手把手单元测试\" class=\"headerlink\" title=\"手把手单元测试\"></a>手把手单元测试</h2><p>废话不多说——我们开始手把手教你写单元测试，测试的目标是<a href=\"http://frontend-testing.surge.sh/\" target=\"_blank\" rel=\"noopener\">计算器</a>的<a href=\"https://github.com/qinyuanbin/frontend-testing\" target=\"_blank\" rel=\"noopener\">代码</a>。这是一个react应用，有两个组件<code>keypad</code>（键盘）和<code>display</code>（结果显示器）。他们是两个没有依赖的，不同的react单元，我们将会讲解如何测试它们。</p>\n<p>（如果你看了代码之后困惑为什么我没有使用<code>jsx</code>，是因为我不想编译。Node和大多数浏览器都完整支持ES6，那我为什么不直接运行我的代码呢？是的，我明确知道我的代码不会运行在IE浏览器上，这个项目可以这样做，但是在其他真实的项目中，我会加入编译的步骤）。</p>\n<p>当我点击一个数字（例如：‘1’，‘5’`）或者一个操作符（例如：‘+’, ‘=’）的时候，就需要有代码来处理这些操作。这个代码在哪里呢？按照<a href=\"https://medium.com/@dan_abramov/smart-and-dumb-components-7ca2f9a7c7d0\" target=\"_blank\" rel=\"noopener\">惯例</a>来说，我把我的组件分为展示组件（keypad和display）和容器组件（app，这是本应用中唯一一个有状态（state）的组件，也是唯一一个包含业务逻辑的组件）。</p>\n<h2 id=\"“计算”模块\"><a href=\"#“计算”模块\" class=\"headerlink\" title=\"“计算”模块\"></a>“计算”模块</h2><p>用来实现计算逻辑的模块“calculator”是一个单独的模块，并且不依赖react。这个模块用来做单元测试非常完美！最理想的单测应该是不包含I/O操作和UI依赖的。你应该在你的应用逻辑中尽量多的抽取这样的模块——没有I/O操作和UI依赖的模块。</p>\n<p>可能有人会困惑，web开发又不涉及文件，数据库等这些操作，I/O操作是指什么？文件，数据库我们确实是没有，但是我们有ajax请求，本地存储，DOM的access和manipulation等。我认为，任何涉及到浏览器api的操作都可以说是是I/O操作。</p>\n<p>我是如何从react组件中分离计算器逻辑的呢？在这个例子中非常容易实现。它的逻辑就是一些简单算法（加减乘除），我把这些代码统一放到一个calculator模块中。</p>\n<p>这个模块非常非常简单——它可以接受计算器状态（一个对象），一个字符（可以是数字或者加减乘除）和返回最新的计算器状态。如果你使用了Redux，这个和Redux的reducer模式非常类似（如果你没有使用redux也没有关系）。如果你永远通过前一个计算器状态来计算出新的状态，那我们怎么获取第一个状态呢？其实很简单简单——当你初始化计算器的时候，这个模块也向外暴露了一个initialState的变量。计算机状态是对外不透明的——它包含了一个display字段，用来展示计算器app的显示状态。</p>\n<p>如果你没有耐心去看全部的代码，那么请你看看程序的入口，这是最重要的部分，甚至比算法的细节都还要重要。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports.initialState = &#123; <span class=\"attr\">display</span>: <span class=\"string\">'0'</span>, <span class=\"attr\">initial</span>: <span class=\"literal\">true</span> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports.nextState = <span class=\"function\">(<span class=\"params\">calculatorState, character</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (isDigit(character)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> addDigit(calculatorState, character)</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (isOperator(character)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> addOperator(calculatorState, character)</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (isEqualSign(character)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> compute(calculatorState)</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> calculatorState</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//....</span></span><br></pre></td></tr></table></figure></p>\n<p>算法实现并不是那么重要，真正重要的是这个模块对外暴露的接口非常的简单——只需要一个state，就可以知道下一个状态是什么。</p>\n<p>其实我们在<a href=\"https://github.com/qinyuanbin/frontend-testing/blob/master/test/unit/test-calculator.js\" target=\"_blank\" rel=\"noopener\">test-calculator.js</a>里面就是这么写的，在这里我们全面测试了这个程序入口的逻辑，虽然你认为这个逻辑不是很重要。那么我们是怎么测试它的呢？我们通常使用测试框架。我们使用了当前最流行的测试框架<a href=\"https://www.npmjs.com/package/mocha\" target=\"_blank\" rel=\"noopener\">Mocha</a>。你也可以使用任何你喜欢的框架，例如Jest，Jasmine， Tape或者其他。</p>\n<h2 id=\"用Mocha进行单元测试\"><a href=\"#用Mocha进行单元测试\" class=\"headerlink\" title=\"用Mocha进行单元测试\"></a>用Mocha进行单元测试</h2><p>所有的测试框架都大同小异——你在测试文件里面写好一些测试代码，然后测试框架负责执行这些文件。执行测试文件的指令我们通常称为<code>命令</code>。</p>\n<p>当你使用npm安装了Mocha之后就可以通过脚本命令行运行“mocha”命令。细心的同学会发现，在<code>package.json</code>的script的test部分，你可以看到以下代码<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\"scripts\": &#123;</span><br><span class=\"line\">...</span><br><span class=\"line\">    \"test\": \"mocha 'test/**/test-*.js' &amp;&amp; eslint test lib\",</span><br><span class=\"line\">...</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure></p>\n<p>这个命令会执行所有的test目录下面的所有test-开头的文件。所以如果你clone了这个计算器app，并且运行了npm install，就可以运行npm test执行测试。</p>\n<p>（顺便说一下，把测试目录放在项目的<em>根目录</em>是一个行业惯例，所以你要别人认为你很专业的话，你也应该遵守这个惯例。）</p>\n<p>当你运行了之后，你将会看到以下结果：</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*ZCXpZVRMgzZsCnaQMRZO4Q.png\" alt=\"\"></p>\n<p>如果有测试用例没有测试通过，你会看到一些显眼的红色错误，显眼到你无法容忍这些红色错误的存在，你恨不得马上修复它。</p>\n<p>我们继续看一段代码:<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> &#123;describe, it&#125; = <span class=\"built_in\">require</span>(<span class=\"string\">'mocha'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123;expect&#125; = <span class=\"built_in\">require</span>(<span class=\"string\">'chai'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> calculator = <span class=\"built_in\">require</span>(<span class=\"string\">'../../lib/calculator'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">describe(<span class=\"string\">'calculator'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> stream = <span class=\"function\">(<span class=\"params\">characters, calculatorState = calculator.initialState</span>) =&gt;</span></span><br><span class=\"line\">    !characters</span><br><span class=\"line\">      ? calculatorState</span><br><span class=\"line\">      : stream(characters.slice(<span class=\"number\">1</span>),</span><br><span class=\"line\">               calculator.nextState(calculatorState, characters[<span class=\"number\">0</span>]))</span><br><span class=\"line\"></span><br><span class=\"line\">  it(<span class=\"string\">'should show initial display correctly'</span>, () =&gt; &#123;</span><br><span class=\"line\">    expect(calculator.initialState.display).to.equal(<span class=\"string\">'0'</span>)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  it(<span class=\"string\">'should replace 0 in initialState'</span>, () =&gt; &#123;</span><br><span class=\"line\">    expect(stream(<span class=\"string\">'4'</span>).display).to.equal(<span class=\"string\">'4'</span>)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\"><span class=\"comment\">//...</span></span><br></pre></td></tr></table></figure></p>\n<p>我们最先import了mocha，这是一个断言库（expect）（我们稍后会解释什么是断言库）。我们只需要import我们测试中将要使用的函数describe，it和expect。</p>\n<p>然后，import我们想要测试的代码——`calculator.js’。</p>\n<p>然后是一些测试代码，它们使用了it函数来描述。例如，</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">it(<span class=\"string\">'should show initial display correctly'</span>, () =&gt; &#123;</span><br><span class=\"line\">    expect(calculator.initialState.display).to.equal(<span class=\"string\">'0'</span>)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>it函数接受一个描述本次测试内容的字符串，还有一个参数是包含了测试代码的函数。<em>但是it函数不可以单独使用</em>——它必须放在describe里面。</p>\n<p>测试函数里面应该写什么东西呢？答案是随便写。在本次示例中，我们测试了initial state的结果等于0。怎么做呢？我们可以这么做：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (calculator.initialState.display !== <span class=\"string\">'0'</span>)</span><br><span class=\"line\">  <span class=\"keyword\">throw</span> <span class=\"string\">'failed'</span></span><br></pre></td></tr></table></figure></p>\n<p>这个代码将会被畅通无阻的运行！如果一个测试抛出一个异常，证明这个测试没有通过。就这么简单。但是断言库（expect）使得这一些都变得更加的简单，因为它提供了一系列的辅助函数来帮助我们实现测试逻辑——比如测试一个数组或者对象是否与另一个相等。</p>\n<p>这就是单元测试的要领——运行一个或者一些函数（如果你喜欢OOP，你还可以实例化一个对象，并调用它的一些方法），然后比较运行结果与预期的结果是否一致。</p>\n<h2 id=\"编写可以测试的代码单元\"><a href=\"#编写可以测试的代码单元\" class=\"headerlink\" title=\"编写可以测试的代码单元\"></a>编写可以测试的代码单元</h2><p>这个看起来是不是很简单？复杂的测试不叫单元测试——把代码从复杂的逻辑中抽取出来，使之可以方便的单元测试是一门<em>艺术</em>。<em>这些可以单元测试的代码跟其他模块几乎没有依赖关系，也没有I/O操作。</em>最难的是，我们习惯于把逻辑代码，I/O操作，和UI代码混在一起写。但是我们依然有办法，而且有无数的相关技术来教我们如何去做。例如，如果你有一些校验字段合法性的代码，把它拆成一个包含校验逻辑的模块然后测试。</p>\n<h2 id=\"测试在NodeJS环境下运行？\"><a href=\"#测试在NodeJS环境下运行？\" class=\"headerlink\" title=\"测试在NodeJS环境下运行？\"></a>测试在NodeJS环境下运行？</h2><p>请注意一个非常离谱的事情——单元测试只能运行在NodeJS环境下！但是我们的计算器app却运行在浏览器环境，我们使用NodeJS来执行我们的测试，包含生产环境的代码测试。</p>\n<p>这样做会不会有什么问题？其实是因为我们的代码是“同构”的。这就意味着在浏览器和NodeJS它都可以运行。它是怎么做到这一点的呢？如果你编写的代码不包含任何I/O操作，意味着你不需要浏览器环境，在NodeJS运行当然没有问题。特别是当你代码里面使用了<code>require</code>，<code>require</code>在NodeJS或者webpack等打包工具都可以支持。如果你看一下<code>package.json</code>，你会发现我们使用了webpack来处理这个情况——打包使用<code>require</code>的代码：<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\"scripts\": &#123;</span><br><span class=\"line\">   \"build\": \"webpack &amp;&amp; cp public/* dist\",</span><br><span class=\"line\">   ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>可以看到我们的代码使用了<code>require</code>来import react和其他模块，通过NodeJS和webpack的处理，我们就可以在浏览器和NodeJS下运行我们的代码——NodeJS对<code>require</code>天然就支持，webpack按照了<code>require</code>的规范来把所有的模块打包到一个大的js文件中，然后在html中通过<code>&lt;script src&gt;</code>标签将代码引入浏览器中执行。</p>\n<h2 id=\"在浏览器下执行单元测试\"><a href=\"#在浏览器下执行单元测试\" class=\"headerlink\" title=\"在浏览器下执行单元测试\"></a>在浏览器下执行单元测试</h2><p>顺便说一下，我们可以使用另一个框架，<a href=\"https://karma-runner.github.io/1.0/index.html\" target=\"_blank\" rel=\"noopener\">karma</a>，在浏览器环境下来运行我们的mocha代码，但是我却斗胆的说一句，如果单元测试可以运行在Nodejs环境（今天我们编写在NodeJS或者浏览器下运行的代码都非常的容易），就应该选择运行在NodeJS环境，因为这样更加容易运行和debug。并且如果不需要编译，它们运行得更快。</p>\n<p>但没有在浏览器运行的我们测试确实存在一个问题——我们没有办法知道在浏览器下运行会不会有其他的bug。浏览器和NodeJS可能会存在一些不一致的地方，导致我们的代码出问题。</p>\n<h2 id=\"下一篇预告\"><a href=\"#下一篇预告\" class=\"headerlink\" title=\"下一篇预告\"></a>下一篇预告</h2><p>我们将会聊聊E2E测试——在真实环境浏览器中测试我们的代码！敬请期待下周的<a href=\"https://medium.com/@giltayar/testing-your-frontend-code-part-iii-e2e-testing-e9261b56475#.mxjfj94jh\" target=\"_blank\" rel=\"noopener\">如何编写E2E测试代码</a>。</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>我们这周都讲了一些啥东西呢？</p>\n<ul>\n<li><p>我们演示如何使用了Mocha（还有Chai）来创建单元测试。</p>\n</li>\n<li><p>我们还解释了什么是单元测试——测试单元的代码，独立于其他模块的代码。</p>\n</li>\n<li><p>我们还讲到了如何使我们的模块尽可能的独立于其他模块，万一有依赖，我们应该去模拟这个模块来继续单元测试，或者使用集成测试。</p>\n</li>\n<li><p>我们还理解了单元测试是一个同构的代码，所以它可以运行在NodeJS。我们还理解了怎么去编译同构的代码——没有I/O操作，使用<code>require</code>作为他们import模块的手段，使用webpack去编译所有的模块，使得它们可以在浏览器环境下运行。</p>\n</li>\n</ul>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cjvyuyqds0000y9pjhu5371r5","category_id":"cjvyuyqe30002y9pjlb9e6kvd","_id":"cjvyuyqeo000cy9pji3ao9r3k"},{"post_id":"cjvyuyqe00001y9pjs6t8mmd6","category_id":"cjvyuyqe30002y9pjlb9e6kvd","_id":"cjvyuyqeq000fy9pjp6lph0fy"},{"post_id":"cjvyuyqe60004y9pjbwxl2s0c","category_id":"cjvyuyqeo000by9pj7kbb35uz","_id":"cjvyuyqer000jy9pj7tfpza87"},{"post_id":"cjvyuyqeh0005y9pj9zhchk2g","category_id":"cjvyuyqeq000hy9pjoee6ceg5","_id":"cjvyuyqes000my9pj5jkpig40"},{"post_id":"cjvyuyqei0006y9pjftdhrrdl","category_id":"cjvyuyqer000ky9pjop0ydj8u","_id":"cjvyuyqet000py9pjgbclyspb"},{"post_id":"cjvyuyqem0009y9pjhcn27ynp","category_id":"cjvyuyqer000ky9pjop0ydj8u","_id":"cjvyuyqeu000ry9pjav6ft234"},{"post_id":"cjvyuyqg4001jy9pjo8wd8zw4","category_id":"cjvyuyqe30002y9pjlb9e6kvd","_id":"cjvyuyqga001ny9pjc1stwerc"},{"post_id":"cjvyuyqg7001ky9pjx5efvcct","category_id":"cjvyuyqe30002y9pjlb9e6kvd","_id":"cjvyuyqga001oy9pj4zt1i18t"}],"PostTag":[{"post_id":"cjvyuyqds0000y9pjhu5371r5","tag_id":"cjvyuyqe50003y9pje3p322x3","_id":"cjvyuyqep000ey9pjkyy8kdtd"},{"post_id":"cjvyuyqds0000y9pjhu5371r5","tag_id":"cjvyuyqek0008y9pjaactdmh5","_id":"cjvyuyqeq000gy9pjicm38keh"},{"post_id":"cjvyuyqe00001y9pjs6t8mmd6","tag_id":"cjvyuyqep000dy9pjr5nq2f7a","_id":"cjvyuyqeu000ty9pjix2c5crn"},{"post_id":"cjvyuyqe00001y9pjs6t8mmd6","tag_id":"cjvyuyqeq000iy9pjpzk1jvt2","_id":"cjvyuyqev000uy9pjlcykappf"},{"post_id":"cjvyuyqe00001y9pjs6t8mmd6","tag_id":"cjvyuyqes000ly9pj5gzhlgbb","_id":"cjvyuyqev000wy9pj4p7ezaaa"},{"post_id":"cjvyuyqe00001y9pjs6t8mmd6","tag_id":"cjvyuyqet000oy9pjh2xg5ss8","_id":"cjvyuyqev000xy9pjpnlc64ah"},{"post_id":"cjvyuyqe00001y9pjs6t8mmd6","tag_id":"cjvyuyqet000qy9pjqrgm7usl","_id":"cjvyuyqew000zy9pjpjdxn0kg"},{"post_id":"cjvyuyqe60004y9pjbwxl2s0c","tag_id":"cjvyuyqeu000sy9pjmipvc23g","_id":"cjvyuyqew0010y9pjt6s0vdeb"},{"post_id":"cjvyuyqe60004y9pjbwxl2s0c","tag_id":"cjvyuyqev000vy9pjf46mkqwn","_id":"cjvyuyqew0012y9pjru5rxyf1"},{"post_id":"cjvyuyqeh0005y9pj9zhchk2g","tag_id":"cjvyuyqew000yy9pjabvld3jr","_id":"cjvyuyqey0015y9pj9q9vc0o3"},{"post_id":"cjvyuyqeh0005y9pj9zhchk2g","tag_id":"cjvyuyqew0011y9pjiihox88z","_id":"cjvyuyqey0016y9pj1gqyexjp"},{"post_id":"cjvyuyqeh0005y9pj9zhchk2g","tag_id":"cjvyuyqex0013y9pjtozm0a54","_id":"cjvyuyqez0018y9pjuh4py650"},{"post_id":"cjvyuyqei0006y9pjftdhrrdl","tag_id":"cjvyuyqey0014y9pjv2f2lk8p","_id":"cjvyuyqf0001by9pjdvymtcw1"},{"post_id":"cjvyuyqei0006y9pjftdhrrdl","tag_id":"cjvyuyqey0017y9pjpwfjtkl6","_id":"cjvyuyqf0001cy9pjx2tr0w3u"},{"post_id":"cjvyuyqei0006y9pjftdhrrdl","tag_id":"cjvyuyqez0019y9pje62law5j","_id":"cjvyuyqf0001ey9pjw427bic1"},{"post_id":"cjvyuyqem0009y9pjhcn27ynp","tag_id":"cjvyuyqez001ay9pjqsfovi1v","_id":"cjvyuyqf1001gy9pj72p7ls5j"},{"post_id":"cjvyuyqem0009y9pjhcn27ynp","tag_id":"cjvyuyqf0001dy9pj4f5etxm8","_id":"cjvyuyqf1001hy9pjcwix7cbx"},{"post_id":"cjvyuyqen000ay9pjofkv7z1x","tag_id":"cjvyuyqf1001fy9pj25601e4m","_id":"cjvyuyqf2001iy9pjd36hmuwt"},{"post_id":"cjvyuyqg4001jy9pjo8wd8zw4","tag_id":"cjvyuyqg8001ly9pj4mkir715","_id":"cjvyuyqgb001ty9pjkqo1ox3b"},{"post_id":"cjvyuyqg4001jy9pjo8wd8zw4","tag_id":"cjvyuyqga001py9pj9e6tvs30","_id":"cjvyuyqgb001uy9pje0h6n0ai"},{"post_id":"cjvyuyqg4001jy9pjo8wd8zw4","tag_id":"cjvyuyqga001qy9pjsz0x0f8r","_id":"cjvyuyqgb001wy9pjcy4u8fxx"},{"post_id":"cjvyuyqg4001jy9pjo8wd8zw4","tag_id":"cjvyuyqgb001ry9pjhcw7s8gk","_id":"cjvyuyqgc001xy9pjvvk4mzg2"},{"post_id":"cjvyuyqg7001ky9pjx5efvcct","tag_id":"cjvyuyqgb001sy9pjfsjelwac","_id":"cjvyuyqgc001zy9pj4wxk35x5"},{"post_id":"cjvyuyqg7001ky9pjx5efvcct","tag_id":"cjvyuyqgb001vy9pjgn96gg5m","_id":"cjvyuyqgc0020y9pje1t6cr7v"},{"post_id":"cjvyuyqg8001my9pjlvir6qzl","tag_id":"cjvyuyqgb001sy9pjfsjelwac","_id":"cjvyuyqgd0022y9pjv08sdcjc"},{"post_id":"cjvyuyqg8001my9pjlvir6qzl","tag_id":"cjvyuyqgb001vy9pjgn96gg5m","_id":"cjvyuyqgd0023y9pj8avcc64u"}],"Tag":[{"name":"WebUploader","_id":"cjvyuyqe50003y9pje3p322x3"},{"name":"分片上传","_id":"cjvyuyqek0008y9pjaactdmh5"},{"name":"react","_id":"cjvyuyqep000dy9pjr5nq2f7a"},{"name":"conditional-rendering","_id":"cjvyuyqeq000iy9pjpzk1jvt2"},{"name":"rc-if-else","_id":"cjvyuyqes000ly9pj5gzhlgbb"},{"name":"show-hide-element","_id":"cjvyuyqet000oy9pjh2xg5ss8"},{"name":"react-component","_id":"cjvyuyqet000qy9pjqrgm7usl"},{"name":"凯文凯利","_id":"cjvyuyqeu000sy9pjmipvc23g"},{"name":"失控","_id":"cjvyuyqev000vy9pjf46mkqwn"},{"name":"gulp","_id":"cjvyuyqew000yy9pjabvld3jr"},{"name":"雪碧图","_id":"cjvyuyqew0011y9pjiihox88z"},{"name":"spritesmith","_id":"cjvyuyqex0013y9pjtozm0a54"},{"name":"感情","_id":"cjvyuyqey0014y9pjv2f2lk8p"},{"name":"价值观","_id":"cjvyuyqey0017y9pjpwfjtkl6"},{"name":"思想","_id":"cjvyuyqez0019y9pje62law5j"},{"name":"奇思妙想","_id":"cjvyuyqez001ay9pjqsfovi1v"},{"name":"瞎想","_id":"cjvyuyqf0001dy9pj4f5etxm8"},{"name":"设计模式","_id":"cjvyuyqf1001fy9pj25601e4m"},{"name":"js框架","_id":"cjvyuyqg8001ly9pj4mkir715"},{"name":"locales","_id":"cjvyuyqga001py9pj9e6tvs30"},{"name":"国际化","_id":"cjvyuyqga001qy9pjsz0x0f8r"},{"name":"多语言","_id":"cjvyuyqgb001ry9pjhcw7s8gk"},{"name":"Javascript","_id":"cjvyuyqgb001sy9pjfsjelwac"},{"name":"Testing","_id":"cjvyuyqgb001vy9pjgn96gg5m"}]}}